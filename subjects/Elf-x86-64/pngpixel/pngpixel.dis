void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
_init_entry:
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400AE8:
	word64 rax_4 = Mem0[0x0000000000601FF8:word64]
	branch rax_4 == 0x0000000000000000 l0000000000400AFD
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400AF8:
	word64 rsp_15
	byte SCZO_16
	word64 rax_17
	byte SZO_18
	byte C_19
	byte Z_20
	call png_get_PLTE (retsize: 8; depth: 16)
		uses: C_7,rax_4,rsp_2,SCZO,SZO_5,Z_6
		defs: C_19,rax_17,rsp_15,SCZO_16,SZO_18,Z_20
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>
// LocalsOut: fp(64)

l0000000000400AFD:
	return
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>

_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void _start(word64 rdx, word64 qwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(64)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000400CD0:
	__align(fp + 0x0000000000000008)
	__libc_start_main(0x00000000004012F9, qwArg00, fp + 0x0000000000000008, 0x0000000000401780, 0x00000000004017F0, rdx, DPB(qwArg00, fp + 0x0000000000000004, 0))
	__hlt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



word64 deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut: rsp
// Trashed: SCZO ah al ax di dil eax edi esp r8 r8b r8d r8w rax rdi rsp sp spl
// Preserved: rbp
deregister_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D00:
	branch false l0000000000400D30
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D15:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D30
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x00000000006020FF r8:r8 - 6299896 rbp:fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400D30:
	return fp + 0x0000000000000004
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:<invalid> r8:r8 - 6299896 rbp:fp - 0x0000000000000004 -4(fp):rbp

l0000000000400D1F:
	word64 rsp_43
	word32 eax_44
	word64 rax_45
	word64 rbp_46
	word64 r8_47
	byte SCZO_48
	byte CZ_49
	byte SZO_50
	byte C_51
	byte Z_52
	word32 edi_53
	word64 rdi_54
	call eax (retsize: 4;)
		uses: C_39,CZ_9,dwLoc04_5,eax,edi,qwLoc04,r8_7,rax_36,rbp_40,rdi_42,rsp_41,SCZO_8,SZO_37,Z_38
		defs: C_51,CZ_49,eax_44,edi_53,r8_47,rax_45,rbp_46,rdi_54,rsp_43,SCZO_48,SZO_50,Z_52
	return rsp_43
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000000000 r8:r8 - 6299896 rbp:fp - 0x0000000000000004 -4(fp):rbp

deregister_tm_clones_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rax:<invalid> r8:<invalid> rbp:rbp rdi:<invalid> -4(fp):rbp



void register_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi esp rax rdi rsi rsp si sil sp spl
// Preserved: rbp
register_tm_clones_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D40:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D63:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rsi:0x0000000000000000 rbp:fp - 0x0000000000000004 rax:0x0000000000000000 -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400D78:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rsi:0x0000000000000000 rbp:fp - 0x0000000000000004 rax:0x0000000000000000 -4(fp):rbp

l0000000000400D6D:
	word64 rsp_43
	word64 rsi_44
	word64 rbp_45
	byte SCZO_46
	word64 rax_47
	byte Z_48
	byte SZO_49
	byte C_50
	word64 rdi_51
	word32 eax_52
	call eax (retsize: 4;)
		uses: C_39,dwLoc04_5,eax,qwLoc04,rax_36,rbp_40,rdi_42,rsi_12,rsp_41,SCZO_13,SZO_37,Z_38
		defs: C_50,eax_52,rax_47,rbp_45,rdi_51,rsi_44,rsp_43,SCZO_46,SZO_49,Z_48
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rsi:0x0000000000000000 rbp:fp - 0x0000000000000004 rax:0x0000000000000000 -4(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rsi:<invalid> rbp:rbp rax:<invalid> rdi:<invalid> -4(fp):rbp



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi esp r8 r8b r8d r8w rax rbp rdi rsp sp spl
// Preserved: rbp
__do_global_dtors_aux_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D80:
	branch Mem0[0x0000000000602108:byte] != 0x00 l0000000000400D9A
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D89:
	deregister_tm_clones(r8)
	Mem17[0x0000000000602108:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400D9A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> r8:<invalid> rdi:<invalid> -4(fp):rbp

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> r8:<invalid> rdi:<invalid> -4(fp):rbp



void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi esp rax rdi rsi rsp si sil sp spl
// Preserved: rbp
frame_dummy_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DA0:
	branch Mem0[0x0000000000601E10:word64] != 0x0000000000000000 l0000000000400DB0
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DB0:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400DAB
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10
// LocalsOut: fp(64)

l0000000000400DBA:
	word64 rsp_42
	word32 edi_43
	word64 rdi_44
	byte SCZO_45
	byte Z_46
	word32 eax_47
	word64 rax_48
	byte SZO_49
	byte C_50
	word64 rbp_51
	word32 esi_52
	word64 rsi_53
	call eax (retsize: 4; depth: 8)
		uses: C_37,dwLoc04_39,eax,edi,esi,qwLoc04_40,rax_34,rbp_41,rdi_2,rsi,rsp_38,SCZO_4,SZO_35,Z_36
		defs: C_50,eax_47,edi_43,esi_52,rax_48,rbp_51,rdi_44,rsi_53,rsp_42,SCZO_45,SZO_49,Z_46
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10 rax:0x0000000000000000

l0000000000400DC0_thunk_register_tm_clones:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rdi:<invalid> rax:<invalid> rbp:rbp -4(fp):rbp

l0000000000400DAB:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10 rax:0x0000000000000000

l0000000000400DAB_thunk_register_tm_clones:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:0x0000000000601E10 rax:0x0000000000000000

frame_dummy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rdi:<invalid> rsi:<invalid> rax:<invalid> rbp:rbp -4(fp):rbp



void component(word32 ecx, word32 edx, word32 esi, word32 edi, word32 r8d, word64 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edi edx esi r13 r8d
// LiveOut:
// Trashed: SCZO ah al ax bp bpl dh dl dx eax ebp edx esp rax rbp rdx rsp sp spl
// Preserved:
component_entry:
// DataOut: ecx edi edx esi r13 r8d
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -002C(0)

l0000000000400DC6:
	Mem16[r13 - 0x0000000000000028:word32] = r8d
	branch ecx >u 0x00000010 l0000000000400EC1
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: Local -0028(64)

l0000000000400EC1:
	fprintf(Mem16[0x0000000000602100:word64], 0x0000000000401808, (uint64) ecx)
	exit(0x0000000000000001)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:fp - 0x0000000000000004 rax:(uint64) eax rdx:(uint64) eax -40(fp):ecx -36(fp):edx -32(fp):esi -28(fp):<invalid> -12(fp):eax -8(fp):eax & 0x00000007 -4(fp):rbp

l0000000000400E2D:
	word64 rax_60 = Mem16[(uint64) ecx * 0x0000000000000008 + 0x00401828:word64]
	word32 eax_61 = (word32) rax_60
	word64 rsp_62
	word64 rbp_63
	byte SCZO_64
	word64 rdi_65
	word32 esi_66
	word32 edx_67
	word32 ecx_68
	word64 r13_69
	word32 r8d_70
	word32 eax_71
	word64 rax_72
	byte SZO_73
	byte C_74
	word64 rdx_75
	byte CZ_76
	word64 rsi_77
	word32 edi_78
	call eax_61 (retsize: 4; depth: 56)
		uses: CZ_58,dwLoc04_4,dwLoc08_55,dwLoc0C_27,dwLoc20_10,dwLoc24_12,dwLoc28_14,dwLoc2C,eax_61,ecx,edx_35,esi,qwLoc1C_53,r13,r8d,rax_60,rbp_5,rdi,rdx_34,rsp_6,SCZO_57,SZO_56
		defs: C_74,CZ_76,eax_71,ecx_68,edi_78,edx_67,esi_66,r13_69,r8d_70,rax_72,rbp_63,rdi_65,rdx_75,rsi_77,rsp_62,SCZO_64,SZO_73
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:fp - 0x0000000000000004 rax:(uint64) eax rdx:(uint64) eax -40(fp):ecx -36(fp):edx -32(fp):esi -28(fp):<invalid> -12(fp):eax -8(fp):eax & 0x00000007 -4(fp):rbp

component_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> -40(fp):ecx -36(fp):edx -32(fp):esi -28(fp):<invalid> -12(fp):eax -8(fp):eax & 0x00000007 -4(fp):rbp



word64 print_pixel(byte dil, selector fs, word64 qwArg04, word64 qwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil fs
// LiveOut: rbp
// Trashed: SCZO ah al ax bp bpl dh di dil dl dx eax ebp edi edx esi esp rax rbp rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
// Stack args: Stack +000C(64)
print_pixel_entry:
// DataOut: dil fs
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +000C(64)

l0000000000400EE9:
	word64 rsp_36
	word64 rbp_37
	word64 rbx_38
	byte SCZO_39
	word64 rdi_40
	word64 rsi_41
	word64 rdx_42
	word32 ecx_43
	word64 rax_44
	selector fs_45
	word32 eax_46
	byte SZO_47
	byte C_48
	byte al_49
	byte CZ_50
	word32 esi_51
	byte Z_52
	byte dil_53
	call png_get_bit_depth (retsize: 8; depth: 112)
		uses: al_33,C_30,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc70_22,eax_28,ecx,fs,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_32,rbp_5,rbx,rdi_35,rdx_31,rsi_34,rsp_14,SZO_29
		defs: al_49,C_48,CZ_50,dil_53,eax_46,ecx_43,esi_51,fs_45,rax_44,rbp_37,rbx_38,rdi_40,rdx_42,rsi_41,rsp_36,SCZO_39,SZO_47,Z_52
	word64 rsp_61
	word64 rbp_62
	word64 rbx_63
	byte SCZO_64
	word64 rdi_65
	word64 rsi_66
	word64 rdx_67
	word32 ecx_68
	word64 rax_69
	selector fs_70
	word32 eax_71
	byte SZO_72
	byte C_73
	byte al_74
	byte CZ_75
	word32 esi_76
	byte Z_77
	byte dil_78
	call png_get_color_type (retsize: 8; depth: 112)
		uses: al_58,C_48,CZ_50,dil_53,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc44_55,dwLoc70_22,eax_54,ecx_43,esi_51,fs_45,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_57,rbp_37,rbx_38,rdi_60,rdx_56,rsi_59,rsp_36,SCZO_39,SZO_47,Z_52
		defs: al_74,C_73,CZ_75,dil_78,eax_71,ecx_68,esi_76,fs_70,rax_69,rbp_62,rbx_63,rdi_65,rdx_67,rsi_66,rsp_61,SCZO_64,SZO_72,Z_77
	word64 rax_25 = Mem0[fs:0x00000028:word64]
	word32 eax_79 = (word32) al_74
	branch eax_79 >u 0x00000006 l00000000004012C9
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -002C(64) Stack +000C(64)

l00000000004012C9:
	word64 rsp_126
	word64 rbp_127
	word64 rbx_128
	byte SCZO_129
	word64 rdi_130
	word64 rsi_131
	word64 rdx_132
	word32 ecx_133
	word64 rax_134
	selector fs_135
	word32 eax_136
	byte SZO_137
	byte C_138
	byte al_139
	byte CZ_140
	word32 esi_141
	byte Z_142
	byte dil_143
	call png_error (retsize: 8; depth: 112)
		uses: al_81,C_73,CZ_83,dil_78,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc44_55,dwLoc70_22,eax_79,ecx_68,esi_76,fs_70,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_123,rbp_62,rbx_63,rdi_125,rdx_67,rsi_124,rsp_61,SCZO_82,SZO_72,Z_77
		defs: al_139,C_138,CZ_140,dil_143,eax_136,ecx_133,esi_141,fs_135,rax_134,rbp_127,rbx_128,rdi_130,rdx_132,rsi_131,rsp_126,SCZO_129,SZO_137,Z_142
	branch (rax_25 ^ Mem0[fs_135:0x00000028:word64]) == 0x0000000000000000 l00000000004012EE
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:(word32) al -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Stack +000C(64)

l00000000004012E9:
	__stack_chk_fail()
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Stack +000C(64)

l00000000004012EE:
	return qwArg0C
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000400F4C:
	word64 rax_103 = Mem0[(uint64) eax_79 * 0x0000000000000008 + 0x00401958:word64]
	word32 eax_104 = (word32) rax_103
	word64 rsp_105
	word64 rbp_106
	word64 rbx_107
	byte SCZO_108
	word64 rdi_109
	word64 rsi_110
	word64 rdx_111
	word32 ecx_112
	word64 rax_113
	selector fs_114
	word32 eax_115
	byte SZO_116
	byte C_117
	byte al_118
	byte CZ_119
	word32 esi_120
	byte Z_121
	byte dil_122
	call eax_104 (retsize: 4; depth: 108)
		uses: al_81,C_73,CZ_83,dil_78,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc44_55,dwLoc70_22,eax_104,ecx_68,esi_76,fs_70,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_103,rbp_62,rbx_63,rdi_65,rdx_67,rsi_66,rsp_61,SCZO_82,SZO_72,Z_77
		defs: al_118,C_117,CZ_119,dil_122,eax_115,ecx_112,esi_120,fs_114,rax_113,rbp_106,rbx_107,rdi_109,rdx_111,rsi_110,rsp_105,SCZO_108,SZO_116,Z_121
	return rbp_106
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:(word32) al -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp

print_pixel_exit:
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> rbx:rbx -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp



void main(word64 rsi, word32 edi, word64 r13, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi fs r13 rsi
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: rbp
main_entry:
// DataOut: edi fs r13 rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32)

l00000000004012F9:
	word64 rbp_136 = fp - 0x0000000000000004
	branch edi != 0x00000004 l000000000040173F
// DataOut: fs r13 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32) Local -00A4(64)

l000000000040173F:
	fwrite(0x0000000000401A70, 0x0000000000000001, 0x0000000000000027, Mem0[0x0000000000602100:word64])
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -12(fp):<invalid> -4(fp):rbp

l0000000000401337:
	word64 rsp_105
	word64 rbp_106
	byte SCZO_107
	word32 edi_108
	word64 rsi_109
	word64 rax_110
	selector fs_111
	word32 eax_112
	byte SZO_113
	byte C_114
	byte Z_115
	word64 rdi_116
	word32 esi_117
	word32 ecx_118
	word64 rcx_119
	word32 edx_120
	word64 rdx_121
	word64 r13_122
	word64 r9_123
	word64 r8_124
	byte SO_125
	byte cl_126
	byte al_127
	byte dil_128
	call atol (retsize: 8; depth: 172)
		uses: al,C,cl,dil,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax,ecx,edi,edx,esi,fs,qwLoc0C_14,qwLoc14,qwLoc1C,qwLoc24,qwLoc2C,qwLoc34,qwLoc3C,qwLoc44,qwLocA4_10,r13,r8,r9,rax_69,rbp_5,rcx,rdi_70,rdx,rsi,rsp_6,SCZO_68,SO,SZO,Z_18
		defs: al_127,C_114,cl_126,dil_128,eax_112,ecx_118,edi_108,edx_120,esi_117,fs_111,r13_122,r8_124,r9_123,rax_110,rbp_106,rcx_119,rdi_116,rdx_121,rsi_109,rsp_105,SCZO_107,SO_125,SZO_113,Z_115
	word64 rsp_135
	byte SCZO_137
	word32 edi_138
	word64 rsi_139
	word64 rax_140
	word32 eax_142
	byte SZO_143
	byte C_144
	byte Z_145
	word64 rdi_146
	word32 esi_147
	word32 ecx_148
	word64 rcx_149
	word32 edx_150
	word64 rdx_151
	word64 r13_152
	word64 r9_153
	word64 r8_154
	byte SO_155
	byte cl_156
	byte al_157
	byte dil_158
	call atol (retsize: 8; depth: 172)
		uses: al_127,C_114,cl_126,dil_128,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_112,ecx_118,edi_108,edx_120,esi_117,fs_111,qwLoc0C_14,qwLoc14,qwLoc1C,qwLoc24,qwLoc2C_129,qwLoc34,qwLoc3C,qwLoc44,qwLocA4_10,r13_122,r8_124,r9_123,rax_133,rbp_106,rcx_119,rdi_134,rdx_121,rsi_109,rsp_105,SCZO_132,SO_125,SZO_113,Z_115
		defs: al_157,C_144,cl_156,dil_158,eax_142,ecx_148,edi_138,edx_150,esi_147,fs_141,r13_152,r8_154,r9_153,rax_140,rbp_136,rcx_149,rdi_146,rdx_151,rsi_139,rsp_135,SCZO_137,SO_155,SZO_143,Z_145
	word64 rax_165 = fopen(Mem0[rsi + 0x0000000000000018:word64], 0x0000000000401990)
	branch rax_165 == 0x0000000000000000 l0000000000401716
// DataOut: fs r13 rax rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0024(0) Local -002C(0) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32) Local -00A4(64)

l0000000000401716:
	fprintf(Mem0[0x0000000000602100:word64], 0x0000000000401A48, Mem0[rsi + 0x0000000000000018:word64])
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:0x0000000000401990 -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l000000000040139D:
	word64 rsp_176
	byte SCZO_178
	word32 edi_179
	word64 rsi_180
	word64 rax_181
	word32 eax_183
	byte SZO_184
	byte C_185
	byte Z_186
	word64 rdi_187
	word32 esi_188
	word32 ecx_189
	word64 rcx_190
	word32 edx_191
	word64 rdx_192
	word64 r13_193
	word64 r9_194
	word64 r8_195
	byte SO_196
	byte cl_197
	byte al_198
	byte dil_199
	call png_create_read_struct (retsize: 8; depth: 172)
		uses: al_167,C_144,cl_156,dil_158,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_166,ecx_148,edi_138,edx_150,esi_147,fs_141,qwLoc0C_14,qwLoc14,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34,qwLoc3C,qwLoc44_169,qwLocA4_10,r13_152,r8_154,r9_153,rax_165,rbp_136,rcx_172,rdi_175,rdx_173,rsi_174,rsp_135,SCZO_170,SO_155,SZO_143,Z_171
		defs: al_198,C_185,cl_197,dil_199,eax_183,ecx_189,edi_179,edx_191,esi_188,fs_182,r13_193,r8_195,r9_194,rax_181,rbp_177,rcx_190,rdi_187,rdx_192,rsi_180,rsp_176,SCZO_178,SO_196,SZO_184,Z_186
	branch rax_181 == 0x0000000000000000 l00000000004016F6
// DataOut: fs r13 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:0x0000000000401990 -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0024(0) Local -002C(0) Local -003C(64) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004016F6:
	fwrite(0x0000000000401A18, 0x0000000000000001, 0x000000000000002E, Mem0[0x0000000000602100:word64])
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -60(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l00000000004013C7:
	word64 rsp_207
	word64 rbp_208
	byte SCZO_209
	word32 edi_210
	word64 rsi_211
	word64 rax_212
	selector fs_213
	word32 eax_214
	byte SZO_215
	byte C_216
	byte Z_217
	word64 rdi_218
	word32 esi_219
	word32 ecx_220
	word64 rcx_221
	word32 edx_222
	word64 rdx_223
	word64 r13_224
	word64 r9_225
	word64 r8_226
	byte SO_227
	byte cl_228
	byte al_229
	byte dil_230
	call png_create_info_struct (retsize: 8; depth: 172)
		uses: al_198,C_204,cl_197,dil_199,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_183,ecx_189,edi_179,edx_191,esi_188,fs_182,qwLoc0C_14,qwLoc14,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34,qwLoc3C_200,qwLoc44_169,qwLocA4_10,r13_193,r8_195,r9_194,rax_205,rbp_177,rcx_190,rdi_206,rdx_192,rsi_180,rsp_176,SCZO_178,SO_196,SZO_202,Z_203
		defs: al_229,C_216,cl_228,dil_230,eax_214,ecx_220,edi_210,edx_222,esi_219,fs_213,r13_224,r8_226,r9_225,rax_212,rbp_208,rcx_221,rdi_218,rdx_223,rsi_211,rsp_207,SCZO_209,SO_227,SZO_215,Z_217
	branch rax_212 == 0x0000000000000000 l00000000004016C0
// DataOut: fs r13 rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -60(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0024(0) Local -002C(0) Local -003C(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004013E4:
	word64 rsp_312
	word64 rbp_313
	byte SCZO_314
	word32 edi_315
	word64 rsi_316
	word64 rax_317
	selector fs_318
	word32 eax_319
	byte SZO_320
	byte C_321
	byte Z_322
	word64 rdi_323
	word32 esi_324
	word32 ecx_325
	word64 rcx_326
	word32 edx_327
	word64 rdx_328
	word64 r13_329
	word64 r9_330
	word64 r8_331
	byte SO_332
	byte cl_333
	byte al_334
	byte dil_335
	call png_init_io (retsize: 8; depth: 172)
		uses: al_229,C_235,cl_228,dil_230,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_214,ecx_220,edi_210,edx_222,esi_219,fs_213,qwLoc0C_14,qwLoc14,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_169,qwLocA4_10,r13_224,r8_226,r9_225,rax_308,rbp_208,rcx_221,rdi_311,rdx_309,rsi_310,rsp_207,SCZO_209,SO_227,SZO_233,Z_234
		defs: al_334,C_321,cl_333,dil_335,eax_319,ecx_325,edi_315,edx_327,esi_324,fs_318,r13_329,r8_331,r9_330,rax_317,rbp_313,rcx_326,rdi_323,rdx_328,rsi_316,rsp_312,SCZO_314,SO_332,SZO_320,Z_322
	word64 rsp_340
	word64 rbp_341
	byte SCZO_342
	word32 edi_343
	word64 rsi_344
	word64 rax_345
	selector fs_346
	word32 eax_347
	byte SZO_348
	byte C_349
	byte Z_350
	word64 rdi_351
	word32 esi_352
	word32 ecx_353
	word64 rcx_354
	word32 edx_355
	word64 rdx_356
	word64 r13_357
	word64 r9_358
	word64 r8_359
	byte SO_360
	byte cl_361
	byte al_362
	byte dil_363
	call png_read_info (retsize: 8; depth: 172)
		uses: al_334,C_321,cl_333,dil_335,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_319,ecx_325,edi_315,edx_327,esi_324,fs_318,qwLoc0C_14,qwLoc14,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_169,qwLocA4_10,r13_329,r8_331,r9_330,rax_337,rbp_313,rcx_326,rdi_339,rdx_336,rsi_338,rsp_312,SCZO_314,SO_332,SZO_320,Z_322
		defs: al_362,C_349,cl_361,dil_363,eax_347,ecx_353,edi_343,edx_355,esi_352,fs_346,r13_357,r8_359,r9_358,rax_345,rbp_341,rcx_354,rdi_351,rdx_356,rsi_344,rsp_340,SCZO_342,SO_360,SZO_348,Z_350
	word64 rsp_368
	word64 rbp_369
	byte SCZO_370
	word32 edi_371
	word64 rsi_372
	word64 rax_373
	selector fs_374
	word32 eax_375
	byte SZO_376
	byte C_377
	byte Z_378
	word64 rdi_379
	word32 esi_380
	word32 ecx_381
	word64 rcx_382
	word32 edx_383
	word64 rdx_384
	word64 r13_385
	word64 r9_386
	word64 r8_387
	byte SO_388
	byte cl_389
	byte al_390
	byte dil_391
	call png_get_rowbytes (retsize: 8; depth: 172)
		uses: al_362,C_349,cl_361,dil_363,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_347,ecx_353,edi_343,edx_355,esi_352,fs_346,qwLoc0C_14,qwLoc14,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_169,qwLocA4_10,r13_357,r8_359,r9_358,rax_365,rbp_341,rcx_354,rdi_367,rdx_364,rsi_366,rsp_340,SCZO_342,SO_360,SZO_348,Z_350
		defs: al_390,C_377,cl_389,dil_391,eax_375,ecx_381,edi_371,edx_383,esi_380,fs_374,r13_385,r8_387,r9_386,rax_373,rbp_369,rcx_382,rdi_379,rdx_384,rsi_372,rsp_368,SCZO_370,SO_388,SZO_376,Z_378
	word64 rsp_396
	word64 rbp_397
	byte SCZO_398
	word32 edi_399
	word64 rsi_400
	word64 rax_401
	selector fs_402
	word32 eax_403
	byte SZO_404
	byte C_405
	byte Z_406
	word64 rdi_407
	word32 esi_408
	word32 ecx_409
	word64 rcx_410
	word32 edx_411
	word64 rdx_412
	word64 r13_413
	word64 r9_414
	word64 r8_415
	byte SO_416
	byte cl_417
	byte al_418
	byte dil_419
	call png_malloc (retsize: 8; depth: 172)
		uses: al_390,C_377,cl_389,dil_391,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0,dwLocB4,dwLocB8,eax_375,ecx_381,edi_371,edx_383,esi_380,fs_374,qwLoc0C_14,qwLoc14,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_169,qwLocA4_10,r13_385,r8_387,r9_386,rax_393,rbp_369,rcx_382,rdi_395,rdx_392,rsi_394,rsp_368,SCZO_370,SO_388,SZO_376,Z_378
		defs: al_418,C_405,cl_417,dil_419,eax_403,ecx_409,edi_399,edx_411,esi_408,fs_402,r13_413,r8_415,r9_414,rax_401,rbp_397,rcx_410,rdi_407,rdx_412,rsi_400,rsp_396,SCZO_398,SO_416,SZO_404,Z_406
	word64 rsp_442
	word64 rbp_443
	byte SCZO_444
	word32 edi_445
	word64 rsi_446
	word64 rax_447
	selector fs_448
	word32 eax_449
	byte SZO_450
	byte C_451
	byte Z_452
	word64 rdi_453
	word32 esi_454
	word32 ecx_455
	word64 rcx_456
	word32 edx_457
	word64 rdx_458
	word64 r13_459
	word64 r9_460
	word64 r8_461
	byte SO_462
	byte cl_463
	byte al_464
	byte dil_465
	call png_get_IHDR (retsize: 8; depth: 192)
		uses: al_418,C_405,cl_417,dil_419,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_425,ecx_409,edi_399,edx_411,esi_408,fs_402,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLocA4_10,r13_413,r8_427,r9_426,rax_424,rbp_397,rcx_428,rdi_441,rdx_429,rsi_423,rsp_439,SCZO_431,SO_416,SZO_404,Z_406
		defs: al_464,C_451,cl_463,dil_465,eax_449,ecx_455,edi_445,edx_457,esi_454,fs_448,r13_459,r8_461,r9_460,rax_447,rbp_443,rcx_456,rdi_453,rdx_458,rsi_446,rsp_442,SCZO_444,SO_462,SZO_450,Z_452
	branch eax_449 == 0x00000000 l00000000004016AF
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004016AF:
	word64 rsp_977
	word64 rbp_978
	byte SCZO_979
	word32 edi_980
	word64 rsi_981
	word64 rax_982
	selector fs_983
	word32 eax_984
	byte SZO_985
	byte C_986
	byte Z_987
	word64 rdi_988
	word32 esi_989
	word32 ecx_990
	word64 rcx_991
	word32 edx_992
	word64 rdx_993
	word64 r13_994
	word64 r9_995
	word64 r8_996
	byte SO_997
	byte cl_998
	byte al_999
	byte dil_1000
	call png_error (retsize: 8; depth: 160)
		uses: al_464,C_469,cl_463,dil_465,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc74,dwLoc80,dwLoc84,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_449,ecx_455,edi_445,edx_457,esi_454,fs_448,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLoc94,qwLoc9C,qwLocA4_10,r13_459,r8_461,r9_460,rax_974,rbp_443,rcx_456,rdi_976,rdx_458,rsi_975,rsp_466,SCZO_444,SO_462,SZO_467,Z_468
		defs: al_999,C_986,cl_998,dil_1000,eax_984,ecx_990,edi_980,edx_992,esi_989,fs_983,r13_994,r8_996,r9_995,rax_982,rbp_978,rcx_991,rdi_988,rdx_993,rsi_981,rsp_977,SCZO_979,SO_997,SZO_985,Z_987
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l00000000004016C0:
	fwrite(0x00000000004019E8, 0x0000000000000001, 0x000000000000002C, Mem0[0x0000000000602100:word64])
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l000000000040147A:
	word32 eax_472 = (word32) (uint64) dwLoc74
	branch eax_472 == 0x00000000 l0000000000401488
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401488:
	dwLoc68 = 0x00000001
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401481:
	branch eax_472 == 0x00000001 l0000000000401491
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401491:
	dwLoc68 = 0x00000007
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401486:
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040149A:
	word64 rsp_948
	word64 rbp_949
	byte SCZO_950
	word32 edi_951
	word64 rsi_952
	word64 rax_953
	selector fs_954
	word32 eax_955
	byte SZO_956
	byte C_957
	byte Z_958
	word64 rdi_959
	word32 esi_960
	word32 ecx_961
	word64 rcx_962
	word32 edx_963
	word64 rdx_964
	word64 r13_965
	word64 r9_966
	word64 r8_967
	byte SO_968
	byte cl_969
	byte al_970
	byte dil_971
	call png_error (retsize: 8; depth: 160)
		uses: al_473,C_476,cl_463,dil_465,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68,dwLoc74,dwLoc80,dwLoc84,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_472,ecx_455,edi_445,edx_457,esi_454,fs_448,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLoc94,qwLoc9C,qwLocA4_10,r13_459,r8_461,r9_460,rax_945,rbp_443,rcx_456,rdi_947,rdx_458,rsi_946,rsp_466,SCZO_943,SO_462,SZO_474,Z_944
		defs: al_970,C_957,cl_969,dil_971,eax_955,ecx_961,edi_951,edx_963,esi_960,fs_954,r13_965,r8_967,r9_966,rax_953,rbp_949,rcx_962,rdi_959,rdx_964,rsi_952,rsp_948,SCZO_950,SO_968,SZO_956,Z_958
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004014AB:
	word64 rsp_480
	byte SCZO_482
	word32 edi_483
	word64 rsi_484
	word64 rax_485
	selector fs_486
	word32 eax_487
	byte SZO_488
	byte C_489
	byte Z_490
	word64 rdi_491
	word32 esi_492
	word32 ecx_493
	word64 rcx_494
	word32 edx_495
	word64 rdx_496
	word64 r13_497
	word64 r9_498
	word64 r8_499
	byte SO_500
	byte cl_501
	byte al_502
	byte dil_503
	word64 rbp_481
	call png_start_read_image (retsize: 8; depth: 160)
		uses: al_473,C_476,cl_463,dil_465,dwLoc04_4,dwLoc48,dwLoc4C,dwLoc50,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,dwLoc64,dwLoc68_477,dwLoc74,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_472,ecx_455,edi_445,edx_457,esi_454,fs_448,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLocA4_10,r13_459,r8_461,r9_460,rax_478,rbp_443,rcx_456,rdi_479,rdx_458,rsi_446,rsp_466,SCZO_444,SO_462,SZO_474,Z_475
		defs: al_502,C_489,cl_501,dil_503,eax_487,ecx_493,edi_483,edx_495,esi_492,fs_486,r13_497,r8_499,r9_498,rax_485,rbp_481,rcx_494,rdi_491,rdx_496,rsi_484,rsp_480,SCZO_482,SO_500,SZO_488,Z_490
	word32 dwLoc64_504 = 0x00000000
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401673:
	word32 eax_534 = (word32) (uint64) dwLoc64_504
	branch eax_534 < dwLoc68 l00000000004014C3
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(0) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004014C3:
	word32 dwLoc58_642
	word32 dwLoc54_641
	word32 dwLoc60_640
	word32 dwLoc5C_639
	branch (word32) (uint64) dwLoc74 != 0x00000001 l00000000004015CE
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(0) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004015CE:
	dwLoc5C_639 = 0x00000000
	dwLoc60_640 = 0x00000000
	dwLoc54_641 = 0x00000001
	dwLoc58_642 = 0x00000001
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0054(32) Local -0058(32) Local -005C(64) Local -0060(32) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004014CF:
	word32 eax_763
	branch dwLoc64_504 <= 0x00000001 l00000000004014EF
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004014EF:
	eax_763 = 0x00000007 (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004014D5:
	eax_763 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) (0x00000001 << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000007 - dwLoc64_504)) >> 0x00000001))))) - 0x00000001) (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004014F4:
	word32 eax_801
	word32 edx_797 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) (eax_763 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc64_504))) & 0x00000001)) << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000003 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc64_504) + 0x00000001)) >> 0x00000001)))))))))))) & 0x00000007))) + (word32) ((uint64) dwLoc84))
	branch dwLoc64_504 <= 0x00000001 l0000000000401531
// DataOut: edx fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401531:
	eax_801 = 0x00000003 (alias)
// DataOut: al edx fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401525:
	eax_801 = (word32) (uint64) ((word32) (uint64) (0x00000007 - dwLoc64_504) >> 0x00000001) (alias)
// DataOut: al edx fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401536:
	branch (word32) (uint64) (word32) (uint64) (edx_797 >>u (byte) ((uint64) eax_801)) == 0x00000000 l000000000040166E
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040166E:
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401544:
	word32 eax_886
	dwLoc5C_639 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) (uint64) dwLoc64_504 & 0x00000001) << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000003 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc64_504) + 0x00000001)) >> 0x00000001))))))))) & 0x00000007)
	dwLoc60_640 = (word32) (uint64) ((word32) (uint64) (word32) (uint64) ((word32) ((word32) (uint64) ((word32) (uint64) dwLoc64_504 & 0x00000001) == 0x00000000) << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000003 - (word32) ((uint64) ((word32) ((uint64) dwLoc64_504) >> 0x00000001))))))))) & 0x00000007)
	dwLoc54_641 = (word32) (uint64) (word32) (uint64) (0x00000001 << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) (0x00000007 - dwLoc64_504)) >> 0x00000001)))))
	branch dwLoc64_504 <= 0x00000002 l00000000004015C4
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0054(32) Local -005C(64) Local -0060(32) Local -0064(8) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004015C4:
	eax_886 = 0x00000008 (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> eax:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0054(32) Local -005C(64) Local -0060(32) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004015AF:
	eax_886 = (word32) (uint64) (word32) (uint64) (0x00000008 >> (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc64_504) - 0x00000001)) >> 0x00000001))))) (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> eax:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0054(32) Local -005C(64) Local -0060(32) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004015C9:
	dwLoc58_642 = eax_886
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> eax:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0054(32) Local -0058(32) Local -005C(64) Local -0060(32) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004015E8:
	word32 dwLoc50_657 = (word32) (uint64) dwLoc60_640
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> eax:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0050(0) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401664:
	branch dwLoc50_657 <u (word32) ((uint64) dwLoc80) l00000000004015F0
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0050(64) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l00000000004015F0:
	word32 eax_687 = puts(0x00000000004019B6)
	word64 rsp_693
	byte SCZO_695
	word32 edi_696
	word64 rsi_697
	word64 rax_698
	selector fs_699
	word32 eax_700
	byte SZO_701
	byte C_702
	byte Z_703
	word64 rdi_704
	word32 esi_705
	word32 ecx_706
	word64 rcx_707
	word32 edx_708
	word64 rdx_709
	word64 r13_710
	word64 r9_711
	word64 r8_712
	byte SO_713
	byte cl_714
	byte al_715
	byte dil_716
	call png_read_row (retsize: 8; depth: 160)
		uses: al_662,C_685,cl_663,dil_661,dwLoc04_4,dwLoc48_659,dwLoc4C_658,dwLoc50_660,dwLoc54_641,dwLoc58_642,dwLoc5C_639,dwLoc60_640,dwLoc64_512,dwLoc68_477,dwLoc74,dwLoc80,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_687,ecx_671,edi_675,edx_669,esi_672,fs_673,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLocA4_10,r13_667,r8_665,r9_666,rax_688,rbp_679,rcx_689,rdi_692,rdx_690,rsi_691,rsp_680,SCZO_684,SO_664,SZO_677,Z_678
		defs: al_715,C_702,cl_714,dil_716,eax_700,ecx_706,edi_696,edx_708,esi_705,fs_699,r13_710,r8_712,r9_711,rax_698,rbp_694,rcx_707,rdi_704,rdx_709,rsi_697,rsp_693,SCZO_695,SO_713,SZO_701,Z_703
	branch (uint64) dwLoc50_657 != rax_140 l000000000040165E
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0050(32) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040161B:
	word32 dwLoc4C_731 = (word32) (uint64) dwLoc5C_639
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0048(32) Local -004C(0) Local -0050(32) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401656:
	branch dwLoc4C_731 <u (word32) ((uint64) dwLoc84) l000000000040162A
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0048(32) Local -004C(64) Local -0050(32) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040162A:
	branch (uint64) dwLoc4C_731 != rax_110 l000000000040164C
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0048(32) Local -004C(32) Local -0050(32) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040164C:
	dwLoc4C_731 = dwLoc4C_731 + (word32) ((uint64) dwLoc54_641)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0048(32) Local -004C(0) Local -0050(32) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l0000000000401633:
	rbp_481 = print_pixel((byte) rax_181, fs_699, qwLoc9C, qwLoc94)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l000000000040165E:
	dwLoc50_657 = dwLoc50_657 + (word32) ((uint64) dwLoc58_642)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0050(0) Local -0054(32) Local -0058(32) Local -005C(64) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040166C:
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040166F:
	dwLoc64_504 = dwLoc64_504 + 0x00000001
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -0024(0) Local -002C(0) Local -003C(8) Local -0064(32) Local -0068(0) Local -0074(32) Local -0080(32) Local -0084(32) Local -0098(32)

l000000000040167F:
	Mem545[rbp_481 - 0x0000000000000040:word64] = 0x0000000000000000
	word64 rsp_550
	word64 rbp_551
	byte SCZO_552
	word32 edi_553
	word64 rsi_554
	word64 rax_555
	selector fs_556
	word32 eax_557
	byte SZO_558
	byte C_559
	byte Z_560
	word64 rdi_561
	word32 esi_562
	word32 ecx_563
	word64 rcx_564
	word32 edx_565
	word64 rdx_566
	word64 r13_567
	word64 r9_568
	word64 r8_569
	byte SO_570
	byte cl_571
	byte al_572
	byte dil_573
	call png_free (retsize: 8; depth: 8)
		uses: al_514,C_530,cl_515,dil_513,dwLoc04_4,dwLoc48_542,dwLoc4C_541,dwLoc50_543,dwLoc54_539,dwLoc58_540,dwLoc5C_537,dwLoc60_538,dwLoc64_512,dwLoc68_477,dwLoc74,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_534,ecx_522,edi_526,edx_520,esi_523,fs_524,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLocA4_10,r13_518,r8_516,r9_517,rax_546,rbp_544,rcx_521,rdi_549,rdx_547,rsi_548,rsp_532,SCZO_535,SO_536,SZO_528,Z_529
		defs: al_572,C_559,cl_571,dil_573,eax_557,ecx_563,edi_553,edx_565,esi_562,fs_556,r13_567,r8_569,r9_568,rax_555,rbp_551,rcx_564,rdi_561,rdx_566,rsi_554,rsp_550,SCZO_552,SO_570,SZO_558,Z_560
	word64 rsp_578
	word64 rbp_579
	byte SCZO_580
	word32 edi_581
	word64 rsi_582
	word64 rax_583
	selector fs_584
	word32 eax_585
	byte SZO_586
	byte C_587
	byte Z_588
	word64 rdi_589
	word32 esi_590
	word32 ecx_591
	word64 rcx_592
	word32 edx_593
	word64 rdx_594
	word64 r13_595
	word64 r9_596
	word64 r8_597
	byte SO_598
	byte cl_599
	byte al_600
	byte dil_601
	call png_destroy_info_struct (retsize: 8; depth: 8)
		uses: al_572,C_559,cl_571,dil_573,dwLoc04_4,dwLoc48_542,dwLoc4C_541,dwLoc50_543,dwLoc54_539,dwLoc58_540,dwLoc5C_537,dwLoc60_538,dwLoc64_512,dwLoc68_477,dwLoc74,dwLoc88_16,dwLoc98_8,dwLocB0_434,dwLocB4_437,dwLocB8_440,eax_557,ecx_563,edi_553,edx_565,esi_562,fs_556,qwLoc0C_14,qwLoc14_422,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_420,qwLocA4_10,r13_567,r8_569,r9_568,rax_574,rbp_551,rcx_564,rdi_577,rdx_575,rsi_576,rsp_550,SCZO_552,SO_570,SZO_558,Z_560
		defs: al_600,C_587,cl_599,dil_601,eax_585,ecx_591,edi_581,edx_593,esi_590,fs_584,r13_595,r8_597,r9_596,rax_583,rbp_579,rcx_592,rdi_589,rdx_594,rsi_582,rsp_578,SCZO_580,SO_598,SZO_586,Z_588
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> r9:<invalid> r8:<invalid> eax:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l00000000004016DE:
	word64 rsp_255
	byte SCZO_257
	word32 edi_258
	word64 rsi_259
	word64 rax_260
	word32 eax_262
	byte SZO_263
	byte C_264
	byte Z_265
	word64 rdi_266
	word32 esi_267
	word32 ecx_268
	word64 rcx_269
	word32 edx_270
	word64 rdx_271
	word64 r13_272
	word64 r9_273
	word64 r8_274
	byte SO_275
	byte cl_276
	byte al_277
	byte dil_278
	call png_destroy_read_struct (retsize: 8; depth: 8)
		uses: al_229,C_235,cl_228,dil_230,dwLoc04_4,dwLoc48_247,dwLoc4C_246,dwLoc50_248,dwLoc54_244,dwLoc58_245,dwLoc5C_242,dwLoc60_243,dwLoc64_249,dwLoc68_241,dwLoc88_16,dwLoc98_8,dwLocB0_238,dwLocB4_239,dwLocB8_240,eax_214,ecx_220,edi_210,edx_222,esi_219,fs_213,qwLoc0C_14,qwLoc14_237,qwLoc1C_168,qwLoc24_159,qwLoc2C_129,qwLoc34_231,qwLoc3C_200,qwLoc44_236,qwLocA4_10,r13_224,r8_226,r9_225,rax_251,rbp_250,rcx_221,rdi_254,rdx_252,rsi_253,rsp_207,SCZO_209,SO_227,SZO_233,Z_234
		defs: al_277,C_264,cl_276,dil_278,eax_262,ecx_268,edi_258,edx_270,esi_267,fs_261,r13_272,r8_274,r9_273,rax_260,rbp_256,rcx_269,rdi_266,rdx_271,rsi_259,rsp_255,SCZO_257,SO_275,SZO_263,Z_265
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rdi:<invalid> rsi:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l000000000040175D:
	branch (Mem0[rbp_136 - 0x0000000000000008:word64] ^ Mem0[fs:0x00000028:word64]) == 0x0000000000000000 l0000000000401777
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401772:
	__stack_chk_fail()
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401777:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> eax:<invalid> r9:<invalid> r8:<invalid> al:<invalid> edx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp



void __libc_csu_init(word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi rsi
// LiveOut:
// Trashed: SCZO ah al ax bp bpl dh di dil dl dx eax ebp edi edx esi esp r12 r12b r12d r12w r13 r13b r13d r13w r14 r14b r14d r14w r15 r15b r15d r15w rax rbp rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
__libc_csu_init_entry:
// DataOut: edi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401780:
	_init()
	branch 0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 == 0x0000000000000000 l00000000004017D6
// DataOut: r15d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0008(64)

l00000000004017B6:
// DataOut: r15d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000020 r15:(uint64) edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -0008(64)

l00000000004017C0:
	word64 rsp_74
	word64 rdi_75
	word64 rsi_76
	word32 r15d_77
	word32 edi_78
	word64 r15_79
	word64 rbp_80
	word64 r12_81
	word64 rbx_82
	word64 r14_83
	word64 r13_84
	word64 rdx_85
	byte SCZO_86
	byte SZO_87
	byte C_88
	byte Z_89
	word32 ebx_90
	call Mem0[0x0000000000601E00:word32] (retsize: 4; depth: 36)
		uses: C_67,dwLoc04_4,dwLoc08_7,dwLoc0C_13,dwLoc10_16,dwLoc14_19,dwLoc18_23,ebx_65,edi,qwLoc08,qwLoc10,qwLoc18,r12_17,r13_68,r14_69,r15_9,r15d_70,rbp_29,rbx_64,rdi_73,rdx_71,rsi_72,rsp_28,SCZO_30,SZO_66,Z_32
		defs: C_88,ebx_90,edi_78,r12_81,r13_84,r14_83,r15_79,r15d_77,rbp_80,rbx_82,rdi_75,rdx_85,rsi_76,rsp_74,SCZO_86,SZO_87,Z_89
	branch rbx_82 + 0x0000000000000001 != rbp_80 l00000000004017C0
// DataOut: r15d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000020 r15:(uint64) edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -0008(64)

l00000000004017D6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000020 r15:(uint64) edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi

__libc_csu_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:rsi + 0x0000000000000020 r15:(uint64) edi r12:0000000000601E00 rbp:<invalid> r14:rsi r13:rdx rbx:rbx rsi:<invalid> rdi:<invalid> rdx:<invalid> rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004017F0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004017F4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



