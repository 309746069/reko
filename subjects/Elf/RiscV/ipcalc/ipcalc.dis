void herror()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
herror_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

herror_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __strdup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__strdup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__strdup_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void clock_gettime()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
clock_gettime_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

clock_gettime_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
close_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

close_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void read()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
read_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

read_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void inet_ntop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_ntop_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

inet_ntop_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void snprintf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
snprintf_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

snprintf_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getaddrinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getaddrinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void dlopen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dlopen_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

dlopen_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void open()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
open_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

open_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __snprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__snprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__snprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void dlsym()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dlsym_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

dlsym_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
exit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

exit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getopt_long()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getopt_long_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getopt_long_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __vasprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__vasprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__vasprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __asprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__asprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__asprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getnameinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getnameinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getnameinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memset_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void inet_pton()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_pton_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

inet_pton_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcmp_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strcmp_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
free_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

free_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __printf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__printf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__printf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __sprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__sprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__sprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fwrite()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fwrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fwrite_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcmp_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memcmp_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fputs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputs_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fputs_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void isatty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
isatty_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

isatty_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __fprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__fprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__fprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __libc_start_main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__libc_start_main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__libc_start_main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void putchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
putchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

putchar_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fputc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fputc_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __stack_chk_fail()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__stack_chk_fail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__stack_chk_fail_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __errno_location()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__errno_location_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__errno_location_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strtol()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strtol_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strtol_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strchr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strchr_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strchr_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memcpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcpy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memcpy_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
abort_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

abort_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void freeaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
freeaddrinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

freeaddrinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000000000015180(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5
// Preserved: a1
fn0000000000015180_entry:
// DataOut: a0 a1 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015180:
	word64 sp_1020 = fp + -448 + 0xFFFFFFFFFFFFFFE8
	word64 s0_1025 = 0
	word64 s6_43 = 0
	word64 s9_44 = 0
	word64 s10_45 = 0
// DataOut: gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015200:
	a0 = DPB(a0, getopt_long(a0, a1, 0x00000000000119A8, 0x00000000000108E0, a4), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch a0 == -1 l0000000000015348
// DataOut: a0 a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015348:
	word64 s1_1064
	word64 s4_1065
	word64 a4_126 = (int64) Mem0[gp + -1904:int32]
	branch a4_126 >= a0 l0000000000015428
// DataOut: a4 a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015428:
	s4_1065 = 0
	s1_1064 = 0
// DataOut: a5 gp s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015350:
	word64 a1_1060 = (int64) ((word32) a4_126 + 1)
	Mem1063[gp + 2192:word32] = (word32) a1_1060
	word64 s2_1062 = a1 + (a4_126 << 0x00000003)
	s1_1064 = Mem1063[s2_1062:word64]
	s4_1065 = 0
	branch a1_1060 >= a0 l0000000000015378
// DataOut: a4 a5 gp s0 s1 s10 s2 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001536C:
	s4_1065 = Mem1063[s2_1062 + 8:word64]
	Mem1068[gp + 2192:word32] = (word32) (int64) ((word32) a4_126 + 2)
// DataOut: a5 gp s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015378:
	branch s6_43 != 0x0000000000000000 l0000000000015588
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015588:
	__printf_chk(a0, 0x00000000000119C8, Mem0[sp_1020:<unknown>])
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001537C:
	branch (int64) Mem0[sp_1020 + 28:int32] == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015384:
	branch (int64) Mem0[sp_1020:int32] == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153B4:
	word64 a5_1026
	word64 s2_1028
	word64 a5_718
	word64 a0_789
	word64 a0_182
	Mem176[sp_1020 + 8:word64] = a0
	branch s9_44 == 0x0000000000000000 l0000000000015924
// DataOut: gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015924:
	word64 a0_1037 = fn0000000000017924(gp)
	a5_1026 = Mem176[sp_1020 + 8:word64]
	branch a0_1037 != 0x0000000000000000 l0000000000015458
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015930:
	branch (s0_1025 & 65544) != 65544 l0000000000015458
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015940:
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153BC:
	word64 a0_1030 = fn0000000000017924(gp)
	s2_1028 = s0_1025 | 2
	a5_1026 = Mem176[sp_1020 + 8:word64]
	branch a0_1030 == 0x0000000000000000 l0000000000015434
// DataOut: a5 gp s0 s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015434:
	branch (s0_1025 & 65544) != 65544 l00000000000153CC
// DataOut: a5 gp s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015444:
	s0_1025 = s0_1025 | 2
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015448:
	s2_1028 = s0_1025 | 0x0000000000004000
	branch s9_44 != 0x0000000000000000 l00000000000153CC
// DataOut: a5 gp s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015454:
	s0_1025 = s2_1028
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015458:
	branch s10_45 == 0x0000000000000000 l0000000000015CE4
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE4:
	branch s1_1064 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE8:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CF0:
	fwrite(0x0000000000011A30, a1, a2, a3)
	sp_1020 = fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001545C:
	word64 a0_909 = fn00000000000166F4(gp, sp_1020 + 28, s10_45, 1)
	branch a0_909 < 0x0000000000000000 l0000000000015BC8
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC8:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BD0:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l0000000000015E7C
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E7C:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BDC:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015474:
	Mem913[sp_1020 + 8:word64] = a0_909
	word64 s1_914 = (int64) Mem913[sp_1020 + 28:int32]
	Mem915[sp_1020 + 32:word64] = 0x0000000000000000
	a0 = DPB(a0, clock_gettime(a0, a1), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	word64 a5_918 = Mem915[sp_1020:word64]
	branch false l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015494:
	word64 a5_938
	branch s1_914 == 0x0000000000000000 l0000000000015C48
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C48:
	Mem969[sp_1020:word64] = a5_918
	word64 s1_970 = Mem969[sp_1020 + 0x0000000000000028:word64]
	word64 a0_971 = fn00000000000164D0(sp_1020 + 0x00000000000000F8, 4)
	word64 a5_972 = Mem969[sp_1020:word64]
	branch a0_971 < 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C64:
	branch 15 >= a5_972 l0000000000015C7C
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C6C:
	word64 a3_990 = 1
	branch a3_990 >=u (s1_970 | 4) l0000000000015DB8
// DataOut: a3 a4 a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:15 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DB8:
	branch (s1_970 | 4) == a3_990 l0000000000015E00
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E00:
	Mem999[sp_1020 + 0x00000000000000F8:byte] = 0xC0
	Mem1001[sp_1020 + 0x00000000000000F9:byte] = 0xA8
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DBC:
	Mem992[sp_1020 + 0x00000000000000F8:byte] = 0xAC
	Mem997[sp_1020 + 0x00000000000000F9:byte] = (byte) (Mem992[sp_1020 + 0x0000000000000028:word64] >> 0x00000004 & 15 | 16)
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C7C:
	Mem987[sp_1020 + 0x00000000000000F8:byte] = 0x0A
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C84:
	word64 a4_974 = (int64) Mem969[sp_1020 + 0x00000000000000F8:int32]
	Mem980[sp_1020:word64] = a5_972
	Mem981[sp_1020 + 0x0000000000000010:word32] = (word32) a4_974
	a0 = inet_ntop(a0, a1, a2, a3)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF0
	a5_938 = Mem981[sp_1020 + 0xFFFFFFFFFFFFFFF8:word64]
	branch true l00000000000154DC
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015498:
	Mem956[sp_1020 + 0x0000000000000030:byte] = (byte) (Mem915[sp_1020 + 0x0000000000000028:word64] & 1 | -4)
	branch fn00000000000164D0(sp_1020 + 0x0000000000000031, 15) < 0x0000000000000000 l0000000000015CB0
// DataOut: gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154BC:
	a0 = inet_ntop(a0, a1, a2, a3)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF0
	a5_938 = Mem956[sp_1020 + 0xFFFFFFFFFFFFFFF8:word64]
	branch 10 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154DC:
	word64 sp_939 = sp_1020 + 0x0000000000000000
	Mem945[sp_939 + 8:word64] = a5_938
	a0 = DPB(a0, __asprintf_chk(a0, a1, 0x0000000000011A90, Mem945[sp_939:<unknown>]), 0)
	sp_1020 = sp_939 + 0xFFFFFFFFFFFFFFF8
	a5_1026 = Mem945[sp_939:word64]
	branch sp_939 == 33 l0000000000015CB0
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:64 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015508:
	s1_1064 = Mem945[sp_939 + 0x0000000000000018:word64]
	branch s1_1064 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:-1 a3:<invalid> a2:0x0000000000011A90 a1:1 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB0:
	branch (int64) Mem915[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB8:
	__fprintf_chk(a0, a1, 0x0000000000011A98, Mem915[sp_1020:<unknown>])
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153CC:
	branch s10_45 == 0x0000000000000000 l00000000000155A8
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155A8:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l0000000000015944
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015944:
	Mem895[sp_1020 + 8:word64] = a5_1026
	word64 a0_896 = fn00000000000169D8(gp, 10, s9_44)
	s1_1064 = a0_896
	s0_1025 = s2_1028
	a5_1026 = Mem895[sp_1020 + 8:word64]
	branch a0_896 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015510:
	branch (int64) Mem176[sp_1020:int32] != 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B0:
	branch (int64) Mem176[sp_1020:int32] == 0x0000000000000000 l000000000001598C
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001598C:
	Mem888[sp_1020:word64] = a5_1026
	word64 a0_889 = fn00000000000169D8(gp, 0, s9_44)
	s1_1064 = a0_889
	branch a0_889 == 0x0000000000000000 l0000000000015964
// DataOut: gp s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159A4:
	s0_1025 = s2_1028
	a5_1026 = Mem888[sp_1020:word64]
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015518:
	Mem826[sp_1020:word64] = a5_1026
	a0 = strchr(a0, a1)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	a5_1026 = Mem826[sp_1020:word64]
	branch s1_1064 == 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015530:
	Mem831[sp_1020 + 28:word32] = 0x00000001
	branch s4_1065 == 0x0000000000000000 l0000000000015BEC
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:58 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BEC:
	Mem834[sp_1020:word64] = a5_1026
	a0 = strchr(a0, a1)
	a0_789 = s1_1064
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	a5_718 = Mem834[sp_1020 + 0xFFFFFFFFFFFFFFF8:word64]
	branch s1_1064 != 0x0000000000000000 l0000000000015BB8
// DataOut: a0 a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:58 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C04:
// DataOut: gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B8:
	Mem881[sp_1020:word64] = a5_1026
	word64 a0_882 = fn00000000000169D8(gp, 2, s9_44)
	s1_1064 = a0_882
	branch a0_882 == 0x0000000000000000 l0000000000015964
// DataOut: gp s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015964:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001596C:
	__fprintf_chk(a0, a1, 0x0000000000011A50, Mem176[sp_1020:<unknown>])
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D0:
	a5_1026 = Mem881[sp_1020:word64]
	s0_1025 = s2_1028
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D8:
	branch s4_1065 == 0x0000000000000000 l0000000000015BA0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BA0:
	Mem811[sp_1020:word64] = a5_1026
	a0 = strchr(a0, a1)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	a0_789 = s1_1064
	a5_718 = Mem811[sp_1020:word64]
	branch s1_1064 == 0x0000000000000000 l00000000000155FC
// DataOut: a0 a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BB8:
	Mem795[a0_789:byte] = 0x00
	s4_1065 = a0_789 + 1
	branch s4_1065 == 0x0000000000000000 l00000000000155FC
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC4:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155DC:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l000000000001553C
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001553C:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015544:
	__fprintf_chk(a0, a1, 0x0000000000011AD0, Mem176[sp_1020:<unknown>])
	sp_1020 = fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155E4:
	word64 a0_752 = fn00000000000166F4(gp, sp_1020 + 28, s4_1065, 0)
	a5_718 = a0_752
	branch a0_752 < 0x0000000000000000 l0000000000015B6C
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B6C:
	branch (int64) Mem176[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B74:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l0000000000015CD8
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CD8:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B80:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B88:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B8C:
	__fprintf_chk(a0, a1, 0x0000000000011A70, Mem176[sp_1020:<unknown>])
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155FC:
	branch (int64) Mem176[sp_1020 + 28:int32] == 0x0000000000000000 l00000000000159B0
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159B0:
	a0_182 = fn0000000000016D74(gp, s1_1064, a5_718, sp_1020 + 56, s0_1025)
// DataOut: a0 gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015604:
	a0_182 = fn00000000000175BC(gp, s1_1064, sp_1020 + 56)
// DataOut: a0 gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015618:
	branch a0_182 < 0x0000000000000000 l00000000000153D8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001561C:
	branch (s0_1025 & 4294623231) != 0x0000000000000000 l0000000000015630
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001562C:
	s0_1025 = s0_1025 | 8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015630:
	word64 a0_194 = DPB(a0, isatty(a0), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch 1 == 0x0000000000000000 l0000000000015644
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001563C:
	Mem694[gp + 2064:word32] = 0x00000001
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015644:
	branch (s0_1025 & 8) == 0x0000000000000000 l00000000000159C8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159C8:
	branch (s0_1025 & 128) != 0x0000000000000000 l0000000000015D18
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D18:
	a0_194 = DPB(a0, __printf_chk(a0_194, 0x0000000000011C28, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D0:
	branch (s0_1025 & 512) != 0x0000000000000000 l0000000000015D48
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D48:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C38, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D8:
	branch (s0_1025 & 64) == 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E0:
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E8:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C48, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159FC:
	branch (s0_1025 & 256) != 0x0000000000000000 l0000000000015D30
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D30:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C58, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A04:
	branch s0_1025 << 0x0000000E < 0x0000000000000000 l0000000000015D78
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D78:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C68, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A0C:
	branch (s0_1025 & 1024) == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A14:
	branch Mem176[sp_1020 + 224:word64] == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A1C:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C78, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A2C:
	branch s0_1025 << 0x00000014 >= 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A34:
	branch Mem176[sp_1020 + 232:word64] == 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A3C:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011C88, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A4C:
	branch s0_1025 << 0x00000012 >= 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A54:
	word64 s2_634 = Mem176[sp_1020 + 240:word64]
	branch s2_634 == 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A5C:
	word64 a0_637 = strchr(a0_194, a1)
	word64 sp_638 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch s2_634 == 0x0000000000000000 l0000000000015DA4
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DA4:
	a0_194 = DPB(a0_637, __printf_chk(a0_637, 0x0000000000011CA8, Mem176[sp_638:<unknown>]), 0)
	sp_1020 = sp_638 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A70:
	a0_194 = DPB(a0_637, __printf_chk(a0_637, 0x0000000000011C98, Mem176[sp_638:<unknown>]), 0)
	sp_1020 = sp_638 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A80:
	branch s0_1025 << 0x00000013 >= 0x0000000000000000 l0000000000015AAC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A88:
	word64 a0_621 = strchr(a0_194, a1)
	word64 sp_622 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch sp_1020 == 0x0000000000000098 l0000000000015D90
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D90:
	a0_194 = DPB(a0_621, __printf_chk(a0_621, 0x0000000000011CC8, Mem176[sp_622:<unknown>]), 0)
	sp_1020 = sp_622 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A9C:
	a0_194 = DPB(a0_621, __printf_chk(a0_621, 0x0000000000011CB8, Mem176[sp_622:<unknown>]), 0)
	sp_1020 = sp_622 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AAC:
	branch (s0_1025 & 1) == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AB4:
	branch Mem176[sp_1020 + 112:word64] == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ABC:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011CD8, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ACC:
	branch (s0_1025 & 2) != 0x0000000000000000 l0000000000015D60
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D60:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011CE8, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AD4:
	branch (s0_1025 & 0x000000000000C000) != 0x000000000000C000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE0:
	branch Mem176[sp_1020 + 128:word64] == 0x0000000000000000 l0000000000015AF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE8:
	a0_194 = DPB(a0_194, __printf_chk(a0_194, 0x0000000000011CF8, Mem176[sp_1020:<unknown>]), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AF8:
	word64 s0_555 = Mem176[sp_1020 + 120:word64]
	branch s0_555 == 0x0000000000000000 l0000000000015B24
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B00:
	word64 a0_589 = strchr(a0_194, a1)
	word64 sp_590 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch s0_555 == 0x0000000000000000 l0000000000015E90
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E90:
	a0_194 = DPB(a0_589, __printf_chk(a0_589, 0x0000000000011D18, Mem176[sp_590:<unknown>]), 0)
	sp_1020 = sp_590 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B14:
	a0_194 = DPB(a0_589, __printf_chk(a0_589, 0x0000000000011D08, Mem176[sp_590:<unknown>]), 0)
	sp_1020 = sp_590 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B24:
	word64 s0_561 = Mem176[sp_1020 + 136:word64]
	branch s0_561 == 0x0000000000000000 l0000000000015B50
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B2C:
	word64 a0_574 = strchr(a0_194, a1)
	word64 sp_575 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch s0_561 == 0x0000000000000000 l0000000000015EA4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015EA4:
	a0_194 = DPB(a0_574, __printf_chk(a0_574, 0x0000000000011D38, Mem176[sp_575:<unknown>]), 0)
	sp_1020 = sp_575 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B40:
	a0_194 = DPB(a0_574, __printf_chk(a0_574, 0x0000000000011D28, Mem176[sp_575:<unknown>]), 0)
	sp_1020 = sp_575 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B50:
	branch Mem176[sp_1020 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B58:
	__printf_chk(a0_194, 0x0000000000011D48, Mem176[sp_1020:<unknown>])
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001564C:
	word64 s4_431
	word64 s0_360
	word64 s2_199 = (int64) Mem176[sp_1020 + 216:int32]
	branch (int64) Mem176[sp_1020 + 28:int32] != 0x0000000000000000 l000000000001590C
// DataOut: gp s0 s10 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001590C:
	branch s2_199 != 128 l0000000000015660
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015658:
	branch s2_199 == 32 l0000000000015914
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015914:
	branch Mem176[sp_1020 + 64:word64] == 0x0000000000000000 l0000000000015DDC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DDC:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001591C:
	s4_431 = 1
// DataOut: gp s0 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015660:
	branch s10_45 == 0x0000000000000000 l0000000000015860
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015860:
	word64 a0_455 = Mem176[sp_1020 + 88:word64]
	a0_194 = DPB(a0, strcmp(a0_194, a1), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch a0_455 == 0x0000000000000000 l0000000000015664
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015874:
	s4_431 = 0
	branch Mem176[sp_1020 + 0x0000000000000038:word64] == 0x0000000000000000 l0000000000015E14
// DataOut: gp s0 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E14:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015880:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011AF8)
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
	branch s4_431 == 0x0000000000000000 l0000000000015E74
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E74:
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158B8:
	branch (s0_1025 & 65544) == 65544 l0000000000015E64
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E64:
	s0_360 = 1
	branch Mem176[sp_1020 + 80:word64] != 0x0000000000000000 l0000000000015C2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E70:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:1 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015664:
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015668:
	branch Mem176[sp_1020 + 72:word64] == 0x0000000000000000 l0000000000015690
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015674:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B28)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015690:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B38)
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B58)
	branch Mem176[sp_1020 + 96:word64] == 0x0000000000000000 l00000000000156EC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156D4:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B68)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156EC:
	branch (s0_1025 & 65544) == 65544 l0000000000015C1C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C1C:
	branch Mem176[sp_1020 + 80:word64] == 0x0000000000000000 l00000000000156FC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C24:
	s0_360 = 0
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C2C:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B78)
	branch s0_360 != 0x0000000000000000 l00000000000158C8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158C8:
	branch Mem176[sp_1020 + 240:word64] == 0x0000000000000000 l00000000000158E8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158D0:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011B88)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158E8:
	branch Mem176[sp_1020 + 248:word64] == 0x0000000000000000 l00000000000157BC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158F0:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BA0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C44:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156FC:
	a0_194 = DPB(a0_194, putchar(a0_194), 0)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch Mem176[sp_1020 + 240:word64] == 0x0000000000000000 l0000000000015728
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001570C:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011B88)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015728:
	branch Mem176[sp_1020 + 248:word64] == 0x0000000000000000 l000000000001574C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015730:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BA0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001574C:
	branch Mem176[sp_1020 + 224:word64] == 0x0000000000000000 l000000000001576C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015754:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BB0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001576C:
	branch Mem176[sp_1020 + 232:word64] == 0x0000000000000000 l000000000001578C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015774:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BC0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001578C:
	branch (int64) Mem176[sp_1020 + 28:int32] == 0x0000000000000000 l00000000000157A0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015794:
	branch 111 >=u (int64) Mem176[sp_1020 + 216:int32] l0000000000015E3C
// DataOut: a5 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E3C:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BE0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:111 a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157A0:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BE0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157BC:
	branch Mem176[sp_1020 + 120:word64] == 0x0000000000000000 l0000000000015C08
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C08:
	branch Mem176[sp_1020 + 136:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C10:
	branch Mem176[sp_1020 + 144:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C18:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157C4:
	putchar(a0_194)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
	branch Mem176[sp_1020 + 128:word64] == 0x0000000000000000 l00000000000157F0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157D4:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BF0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F0:
	branch Mem176[sp_1020 + 120:word64] == 0x0000000000000000 l0000000000015814
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F8:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C00)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015814:
	branch Mem176[sp_1020 + 136:word64] == 0x0000000000000000 l0000000000015838
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001581C:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C10)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015838:
	branch Mem176[sp_1020 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015840:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C18)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D0:
	branch (int64) Mem176[gp + -2028:int32] == 0x0000000000000000 l000000000001556C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001556C:
	fwrite(0x0000000000011A08, a1, a2, a3)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001538C:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D8:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015394:
	fwrite(0x00000000000119D8, a1, a2, a3)
	sp_1020 = sp_1020 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153DC:
	branch Mem0[sp_1020 + 328:word64] != Mem0[gp + -1936:word64] l0000000000015E8C
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E8C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015224:
	branch 118 <u a0 l0000000000015200
// DataOut: a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001522C:
	word64 a5_97 = (int64) Mem0[(a0 << 0x00000000 >>u 0x0000001E) + 0x00000000000102A0:int32]
	word64 sp_100
	word64 s5_101
	word64 a5_102
	word64 gp_103
	word64 s1_104
	word64 s0_105
	word64 s2_106
	word64 s3_107
	word64 s4_108
	word64 s6_109
	word64 s7_110
	word64 s8_111
	word64 s9_112
	word64 s10_113
	word64 s11_114
	word64 ra_115
	word64 a0_116
	word64 a1_117
	word64 a4_118
	word64 a3_119
	word64 a2_120
	word64 a0_121
	word64 a1_122
	word64 a2_123
	word64 a3_124
	word64 a4_125
	call a5_97 (retsize: 0;)
		uses: a0_58,a0_61,a1,a1_57,a2,a2_56,a3,a3_55,a4,a4_95,a5_97,dwLoc01A4_41,dwLoc01B8_50,dwLoc01C0_46,gp,qwLoc08_35,qwLoc10_15,qwLoc18_9,qwLoc20_17,qwLoc28_19,qwLoc30_21,qwLoc38_4,qwLoc40_23,qwLoc48_25,qwLoc50_27,qwLoc58_29,qwLoc60_31,qwLoc68_33,qwLoc78_11,ra,s0_42,s1_47,s10_45,s11,s2_40,s3_38,s4_48,s5,s6_43,s7_49,s8_36,s9_44,sp_62
		defs: a0_116,a0_121,a1_117,a1_122,a2_120,a2_123,a3_119,a3_124,a4_118,a4_125,a5_102,gp_103,ra_115,s0_105,s1_104,s10_113,s11_114,s2_106,s3_107,s4_108,s5_101,s6_109,s7_110,s8_111,s9_112,sp_100
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x00000000 -440(fp):<invalid> -420(fp):0x00000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000015180_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:<invalid> s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> ra:<invalid> s5:<invalid> s11:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):0x00000001 -424(fp):0x0000000000000000 -420(fp):0x00000000 -408(fp):<invalid> -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000015EB8(word64 a0, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 gp sp
// Preserved:
// Stack args: Stack +0000(64)
fn0000000000015EB8_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000015EB8:
	__libc_start_main(a0, a1, fp + 8, a3, a4, a5, a6)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015EB8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp & -16 gp:0000000000013448 a5:a0 a0:<invalid> a1:<invalid> a2:fp + 8 a3:00000000000182E8 a4:0000000000018378 a6:fp & -16



void fn0000000000015EF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: sp
fn0000000000015EF0_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015EF0:
	word64 a4_7 = 14
	branch a4_7 >=u 0x0000000000000007 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F0C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14

l0000000000015F20:
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

l0000000000015F18:
	word64 sp_20
	word64 a0_21
	word64 a5_22
	word64 a4_23
	word64 t1_24
	word64 ra_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_19,a4_7,a5_6,ra,sp_1,t1_18
		defs: a0_21,a4_23,a5_22,ra_25,sp_20,t1_24
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

fn0000000000015EF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000007 a4:14 t1:0x0000000000000000



void fn0000000000015F24()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
fn0000000000015F24_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F24:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F4C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000

l0000000000015F60:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F58:
	word64 sp_21
	word64 a0_22
	word64 a5_23
	word64 a1_24
	word64 t1_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_20,a1_10,a5_7,sp_1,t1_19
		defs: a0_22,a1_24,a5_23,sp_21,t1_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

fn0000000000015F24_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000



void fn0000000000015F64(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: ra s0 sp
fn0000000000015F64_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F64:
	branch (int64) Mem0[gp + -1900:byte] != 0x0000000000000000 l0000000000015F84
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F78:
	fn0000000000015EF0()
	Mem15[gp + 2196:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015F84:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra

fn0000000000015F64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> ra:ra s0:s0 a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra



void fn0000000000015F94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: ra sp
fn0000000000015F94_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F94:
	branch Mem0[0x0000000000019E28:word64] != 0x0000000000000000 l0000000000015FA8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FA8:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015FA4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28
// LocalsOut: fp(64)

l0000000000015FB4:
	word64 sp_22
	word64 a5_23
	word64 a0_24
	word64 ra_25
	word64 a1_26
	word64 t1_27
	call 0x0000000000000000 (retsize: 0; depth: 16)
		uses: a0_3,a1,a5_19,qwLoc08_21,ra,sp_20,t1
		defs: a0_24,a1_26,a5_23,ra_25,sp_22,t1_27
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28

l0000000000015FC8_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28 ra:ra -8(fp):ra

l0000000000015FA4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

l0000000000015FA4_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

fn0000000000015F94_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:<invalid> a1:0x0000000000000000 t1:0x0000000000000000 ra:ra -8(fp):ra



word64 fn0000000000015FCC(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: sp
// Trashed: a0 a1 a2 a3 ra s0 sp
// Preserved:
fn0000000000015FCC_entry:
// DataOut: a0 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FCC:
	branch a0 != 0x0000000000000000 l0000000000016090
// DataOut: a3 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016090:
	fwrite(0x0000000000010BE0, a1, a2, a3)
	fwrite(0x0000000000010C00, a1, a2, a3)
	fwrite(0x0000000000010C38, a1, a2, a3)
	fwrite(0x0000000000010C88, a1, a2, a3)
	fwrite(0x0000000000010CC8, a1, a2, a3)
	fwrite(0x0000000000010D18, a1, a2, a3)
	fwrite(0x0000000000010D68, a1, a2, a3)
	fwrite(0x0000000000010D98, a1, a2, a3)
	fwrite(0x0000000000010DE8, a1, a2, a3)
	word64 a0_141 = DPB(0x0000000000010E38, fwrite(0x0000000000010E38, a1, a2, a3), 0)
	fputc(a0_141, a1)
	fwrite(0x0000000000010E88, a1, a2, a3)
	fwrite(0x0000000000010EA0, a1, a2, a3)
	fwrite(0x0000000000010EE8, a1, a2, a3)
	fwrite(0x0000000000010F28, a1, a2, a3)
	fwrite(0x0000000000010F68, a1, a2, a3)
	fwrite(0x0000000000010FA8, a1, a2, a3)
	fwrite(0x0000000000010FF8, a1, a2, a3)
	fwrite(0x0000000000011048, a1, a2, a3)
	fwrite(0x0000000000011098, a1, a2, a3)
	fwrite(0x00000000000110C8, a1, a2, a3)
	fwrite(0x0000000000011118, a1, a2, a3)
	fwrite(0x0000000000011148, a1, a2, a3)
	fwrite(0x0000000000011190, a1, a2, a3)
	fwrite(0x00000000000111D8, a1, a2, a3)
	word64 a0_250 = DPB(0x0000000000011228, fwrite(0x0000000000011228, a1, a2, a3), 0)
	fputc(a0_250, a1)
	fwrite(0x0000000000011258, a1, a2, a3)
	fwrite(0x0000000000011268, a1, a2, a3)
	fwrite(0x00000000000112C0, a1, a2, a3)
	fwrite(0x0000000000011300, a1, a2, a3)
	fwrite(0x0000000000011348, a1, a2, a3)
	fwrite(0x0000000000011388, a1, a2, a3)
	fwrite(0x00000000000113C8, a1, a2, a3)
	return fp + 0xFFFFFFFFFFFFFEF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015FE0:
	fwrite(0x0000000000011408, a1, a2, a3)
	fwrite(0x0000000000011458, a1, a2, a3)
	fwrite(0x0000000000011498, a1, a2, a3)
	fwrite(0x00000000000114E0, a1, a2, a3)
	fwrite(0x0000000000011530, a1, a2, a3)
	fwrite(0x0000000000011578, a1, a2, a3)
	fwrite(0x00000000000115A8, a1, a2, a3)
	return fp + 0xFFFFFFFFFFFFFFD0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

fn0000000000015FCC_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:1 ra:<invalid> s0:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000163B0(word64 gp, word64 a0, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s5Out, ptr64 & s6Out, ptr64 & s8Out, ptr64 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0 s0 s2 s5 s6 s8 s9 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
// Preserved:
fn00000000000163B0_entry:
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -00F0(0)

l00000000000163B0:
	word64 s3_37 = 16
	word64 s0_100 = 1
	word64 a0_44 = DPB(fp + -232, __sprintf_chk(fp + -232, a1, a2, 0x00000000000115C8, tLocF0), 0)
	word64 sp_45 = fp + 0xFFFFFFFFFFFFFF08
	word64 s1_103 = fp + 0xFFFFFFFFFFFFFF12
	word64 s9_49 = 15
	word64 s7_50 = 58
	branch 1 == s3_37 l000000000001646C
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016430:
	a0_44 = DPB(a0_44, __sprintf_chk(a0_44, a1, a2, 0x00000000000115C8, Mem0[sp_45:<unknown>]), 0)
	sp_45 = sp_45 + 0xFFFFFFFFFFFFFFF8
	word64 a4_97 = s1_103 + 2
	branch (s0_100 & 1) == 0x0000000000000000 l00000000000164B8
// DataOut: a4 gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164B8:
	s1_103 = a4_97
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016454:
	branch s0_100 == s9_49 l00000000000164C4
// DataOut: a4 gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164C4:
	s1_103 = a4_97
// DataOut: gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016458:
	Mem101[s1_103 + 2:byte] = (byte) s7_50
	s1_103 = s1_103 + 3
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016464:
	s0_100 = (int64) ((word32) s0_100 + 1)
	branch s0_100 != s3_37 l0000000000016430
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001646C:
	Mem59[s1_103:byte] = 0x00
	__strdup(a0_44)
	word64 sp_62 = sp_45 + 0xFFFFFFFFFFFFFFF8
	word64 a0_60
	*a0Out = sp_45 + 8
	branch Mem59[sp_62 + 136:word64] != Mem59[gp + -1936:word64] l00000000000164CC
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164CC:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -238(fp):0x00 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016484:
	word64 s0_66
	*s0Out = Mem59[sp_62 + 224:word64]
	word64 s2_68
	*s2Out = Mem59[sp_62 + 208:word64]
	word64 s5_71
	*s5Out = Mem59[sp_62 + 184:word64]
	word64 s6_72
	*s6Out = Mem59[sp_62 + 176:word64]
	word64 s8_74
	*s8Out = Mem59[sp_62 + 160:word64]
	word64 s9_75
	*s9Out = Mem59[sp_62 + 152:word64]
	return sp_62 + 240
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -238(fp):0x00 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000163B0_exit:
// DataOut: a0 s0 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:<invalid> s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:<invalid> s1:<invalid> s6:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -238(fp):0x00 -236(fp):0x3A -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000164D0(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0
// Trashed: a0 a1 a2
// Preserved: ra s0 s1 s2 sp
fn00000000000164D0_entry:
// DataOut: a0 a1 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000164D0:
	word64 a0_24
	word64 a0_19 = DPB(0x00000000000115D0, open(0x00000000000115D0, a1), 0)
	branch false l0000000000016544
// DataOut: a0 gp s0 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016544:
	a0_24 = -1
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFD8 s0:a0 a0:<invalid> s2:a1 a1:0 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016500:
	word64 a0_37 = DPB(a0_19, read(a0_19, a1, a2), 0)
	close(a0_37)
	a0_24 = (int64) (word32) (0x0000000000000000 - (word64) ((int64) ((word32) (0x00000000000115D0 - a1)) != 0x0000000000000000))
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFD8 s0:a0 a0:<invalid> s2:a1 a1:0 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001652C:
	return a0_24
// DataOut: a0 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> a0:<invalid> s2:a1 a1:<invalid> a2:a0 << 0x00000000 >>u 0x00000000 s1:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000164D0_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 a0:<invalid> s2:s2 a1:<invalid> a2:a0 << 0x00000000 >>u 0x00000000 s1:s1 ra:ra -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn000000000001654C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1 t3
// Preserved: ra s0 s1 s2 s3 sp
fn000000000001654C_entry:
// DataOut: a0 a1 gp s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001654C:
	word64 s0_38
	word64 t3_39
	word64 gp_40
	word64 t1_41
	word64 s2_42
	word64 s3_43
	word64 a1_44
	word64 a0_45
	word64 a3_46
	word64 ra_47
	word64 s1_48
	word64 a4_49
	word64 a5_50
	word64 a6_51
	word64 a7_52
	word64 a0_53
	word64 a1_54
	word64 a2_55
	word64 a2_56
	word64 a3_57
	word64 sp_37
	call __vasprintf_chk (retsize: 0; depth: 128)
		uses: a0_21,a1_19,a3_20,a4,a5,a6,a7,gp,qwLoc08_33,qwLoc10_31,qwLoc18_29,qwLoc20_27,qwLoc28_18,qwLoc38_23,qwLoc40_4,qwLoc48_25,qwLoc50_10,qwLoc58_12,qwLoc68_34,qwLoc70_35,qwLoc78_36,ra,s0,s1,s2_14,s3_16,sp_2,t1_8,t3_7
		defs: a0_45,a0_53,a1_44,a1_54,a2_55,a2_56,a3_46,a3_57,a4_49,a5_50,a6_51,a7_52,gp_40,ra_47,s0_38,s1_48,s2_42,s3_43,sp_37,t1_41,t3_39
	branch fp < 0xFFFFFFFFFFFFFF90 l00000000000165D8
// DataOut: gp s2 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000165A8:
	word64 a0_100 = DPB(a0_53, fputs(a0_53, a1_54), 0)
	word64 sp_101 = fp + 0xFFFFFFFFFFFFFF78
	branch (int64) Mem0[gp_40 + -2032:int32] != 0x0000000000000000 l000000000001661C
// DataOut: gp s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:1 a3:fp + -40 a0:fp + -112 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: fp(64)

l000000000001661C:
	a0_100 = DPB(a0_53, fputs(a0_100, a1_54), 0)
	sp_101 = fp + 0xFFFFFFFFFFFFFF70
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF78 t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165BC:
	word64 a0_81 = DPB(a0_100, fputs(a0_100, a1_54), 0)
	word64 sp_82 = sp_101 + 0xFFFFFFFFFFFFFFF8
	branch (int64) Mem0[gp_40 + -2032:int32] != 0x0000000000000000 l0000000000016600
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l0000000000016600:
	a0_81 = DPB(0x00000000000115E0, fwrite(0x00000000000115E0, a1_54, a2_56, a3_57), 0)
	sp_82 = sp_82 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165D0:
	free(a0_81)
	sp_37 = sp_82 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165D8:
	branch Mem0[sp_37 + 24:word64] != Mem0[gp_40 + -1936:word64] l000000000001662C
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l000000000001662C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165E4:
	return
// DataOut: gp s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

fn000000000001654C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:fp + -40 s2:s2 s3:s3 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> ra:ra s0:s0 s1:s1 a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7



word64 fn0000000000016630(word64 gp, word64 a0, word64 a1, ptr64 & s1Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0 s1 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp
// Preserved:
fn0000000000016630_entry:
// DataOut: a0 a1 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0048(64) Local -0050(64)

l0000000000016630:
	word64 a5_33
	word64 a0_22 = __errno_location()
	Mem24[a0:word32] = 0x00000000
	strtol(a0_22)
	branch qwLoc50 == 0x0000000000000000 l000000000001668C
// DataOut: a0 a5 gp s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016680:
	branch a0 == qwLoc50 l000000000001668C
// DataOut: a0 a5 gp s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016684:
	branch (int64) Mem24[qwLoc50:byte] == 0x0000000000000000 l00000000000166C4
// DataOut: a0 gp s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166C4:
	a5_33 = (int64) Mem24[a0:int32]
	branch a5_33 != 0x0000000000000000 l0000000000016690
// DataOut: a0 a5 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166CC:
	word64 a4_53 = (int64) (word32) a0
	branch a0 != a4_53 l00000000000166E0
// DataOut: a4 a5 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166E0:
	a5_33 = -34
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166D8:
	Mem55[a1:word32] = (word32) a4_53
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l000000000001668C:
	a5_33 = (int64) Mem24[a0:int32]
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016690:
	branch 0x0000000000000000 >= a5_33 l00000000000166E8
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166E8:
	a5_33 = -22
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016694:
	a5_33 = (int64) (word32) (0x0000000000000000 - a5_33)
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016698:
	word64 a0_37
	*a0Out = a5_33
	branch qwLoc48 != Mem24[gp + -1936:word64] l00000000000166F0
// DataOut: a0 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l00000000000166F0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000166A8:
	word64 s1_40
	*s1Out = s3
	return fp + 0xFFFFFFFFFFFFFFF0
// DataOut: a0 gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016630_exit:
// DataOut: a0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFF0 a5:<invalid> s2:<invalid> s3:<invalid> a0:<invalid> s1:s3 a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> ra:s1 s0:s2 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000166F4(word64 gp, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000166F4_entry:
// DataOut: a0 a1 a2 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(64)

l00000000000166F4:
	word64 sp_34
	word64 a0_31
	word64 sp_2 = fp + -64
	word64 s1_21 = a0
	branch (int64) Mem0[a0:int32] != 0x0000000000000000 l00000000000167C8
// DataOut: gp s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(64)

l000000000001672C:
	word64 a0_87 = strchr(a0, a1)
	sp_2 = fp + 0xFFFFFFFFFFFFFFB8
	branch a1 == 0x0000000000000000 l00000000000167C8
// DataOut: gp s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(64)

l00000000000167C8:
	word64 a0_80
	sp_34 = fn0000000000016630(gp, a1, sp_2, out s1_21, out a0_80)
	branch a0_80 == 0x0000000000000000 l0000000000016794
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167D8:
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> s2:<invalid> a2:0 a3:<invalid> a4:<invalid> ra:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001673C:
	inet_pton(a0_87, a1, fp + 0xFFFFFFFFFFFFFFB8)
	sp_34 = fp + 0xFFFFFFFFFFFFFFB0
	branch 2 == 0x0000000000000000 l000000000001678C
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0050(64)

l0000000000016750:
	word64 a0_104 = fn00000000000182B4((int64) dwLoc50)
	branch a0_104 == 0x0000000000000000 l0000000000016790
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001675C:
	branch (a0_104 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016764:
	word64 a5_115 = (int64) (word32) (a0_104 >>u 1)
	branch a5_115 == 0x0000000000000000 l0000000000016790
// DataOut: a0 a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001676C:
	branch (a5_115 & 1) == 0x0000000000000000 l0000000000016820
// DataOut: a0 a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016820:
	a0_104 = (int64) (word32) (a0_104 >>u 2)
	branch a0_104 != 0x0000000000000000 l000000000001675C
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016828:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016774:
	a0_104 = a5_115
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016778:
	a0_104 = (int64) (word32) (a0_104 >>u 1)
	branch a0_104 == 0x0000000000000000 l0000000000016790
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016784:
	branch (a0_104 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001678C:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016790:
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016794:
	word64 a5_63 = (int64) Mem0[sp_34:int32]
	branch a2 == 0x0000000000000000 l00000000000167DC
// DataOut: a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001679C:
	branch 32 >= a5_63 l00000000000167DC
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167DC:
	a0_31 = a5_63
	branch a5_63 < 0x0000000000000000 l00000000000167C0
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167E4:
	branch (int64) Mem0[s1_21:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a5 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167EC:
	branch 32 < a5_63 l00000000000167C0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167A8:
	branch (int64) Mem0[s1_21:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:32 a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B0:
	Mem74[s1_21:word32] = 0x00000001
// DataOut: a0 a5 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B8:
	a0_31 = a5_63
	branch 128 >= a5_63 l00000000000167F4
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167C0:
	a0_31 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167F4:
	branch Mem0[sp_34 + 8:word64] != Mem0[gp + -1936:word64] l000000000001682C
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001682C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016800:
	return a0_31
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000166F4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 s1:s1 s3:s3 s4:s4 a1:<invalid> a0:<invalid> a4:<invalid> ra:ra s2:s2 a2:<invalid> a3:<invalid> -80(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000016830(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn0000000000016830_entry:
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016830:
	word64 a5_7 = Mem0[gp + -1936:word64]
	branch a0 == 0x0000000000000000 l0000000000016864
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0018(64)

l0000000000016864:
	branch a5_7 != Mem0[gp + -1936:word64] l0000000000016884
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016884:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a4:<invalid> a0:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016874:
	return 0
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a4:<invalid> a0:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000016830_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> a0:<invalid> ra:ra s0:s0 -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l000000000001684C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x00000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



void fn00000000000168B8(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn00000000000168B8_entry:
// DataOut: a0 a1 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168B8:
	fn0000000000016830(gp, a1)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000168B8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 a0:<invalid> ra:ra a5:<invalid> a4:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000168E4(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: ra s0 s1 sp
fn00000000000168E4_entry:
// DataOut: a0 a1 gp s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168E4:
	word64 a0_137
	word64 a0_142
	word64 a0_37
	word64 sp_143 = fp + -96
	branch a0 == 2 l0000000000016984
// DataOut: a0 a1 a7 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016984:
	a0_137 = fp + -88
	a0_142 = DPB(fp + -88, getnameinfo(fp + -88, a1, a2, a3, a4, a5, a6), 0)
	sp_143 = fp + 0xFFFFFFFFFFFFFF98
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016908:
	branch a0 == 10 l0000000000016934
// DataOut: a1 a7 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016934:
	memcpy(fp + -64, a1, a2)
	a0_137 = fp + 0xFFFFFFFFFFFFFFB0
	a0_142 = DPB(fp + 0xFFFFFFFFFFFFFFB0, getnameinfo(fp + 0xFFFFFFFFFFFFFFB0, a1, a2, a3, a4, a5, a6), 0)
	sp_143 = fp + 0xFFFFFFFFFFFFFF90
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:10 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016974:
	branch a0_137 != 0x0000000000000000 l0000000000016910
// DataOut: gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016978:
	__strdup(a0_142)
	a0_37 = gp + -1896
	sp_143 = sp_143 + 0xFFFFFFFFFFFFFFF8
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016910:
	a0_37 = 0
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016914:
	branch Mem0[sp_143 + 56:word64] != Mem0[gp + -1936:word64] l00000000000169D4
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000169D4:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016920:
	return a0_37
// DataOut: a0 gp s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000168E4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> ra:ra s0:s0 s1:s1 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):(word16) (fp + -88) -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):(word16) (fp + -64) -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x00000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000169D8(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000169D8_entry:
// DataOut: a0 a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0078(64)

l00000000000169D8:
	word64 a0_109
	word64 a0_102 = DPB(a0, getaddrinfo(a0, a1, fp + -104, fp + -112), 0)
	word64 sp_103 = fp + 0xFFFFFFFFFFFFFF88
	branch a1 != 0x0000000000000000 l0000000000016AD8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0078(64)

l0000000000016AD8:
	a0_109 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF88 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:<invalid> -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A34:
	word64 s0_57 = qwLoc78
	branch qwLoc78 == 0x0000000000000000 l0000000000016AA0
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF88 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:<invalid> -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A3C:
	word64 s3_71 = 2
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF88 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:<invalid> s0:<invalid> -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A68:
	word64 a0_78 = (int64) Mem0[s0_57 + 4:int32]
	branch a0_78 != s3_71 l0000000000016A4C
// DataOut: a0 a1 gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A4C:
	a0_102 = inet_ntop(a0_102, a1, a2, a3)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	branch a0_78 != 0x0000000000000000 l0000000000016A88
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A74:
	a0_102 = inet_ntop(a0_102, a1, a2, a3)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	branch a0_78 == 0x0000000000000000 l0000000000016A60
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A60:
	s0_57 = Mem0[s0_57 + 40:word64]
	branch s0_57 == 0x0000000000000000 l0000000000016A9C
// DataOut: gp s0 s1 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A9C:
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AA0:
	freeaddrinfo(a0_102)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	a0_109 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016A88:
	freeaddrinfo(a0_102)
	__strdup(a0_102)
	a0_109 = gp + -864
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AAC:
	branch Mem0[sp_103 + 56:word64] != Mem0[gp + -1936:word64] l0000000000016AE0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AE0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AB8:
	return a0_109
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000169D8_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:s0 ra:ra s1:s1 s2:s2 s3:s3 s4:s4 -104(fp):0x0000000000000000 -100(fp):(word32) a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000016B38(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
fn0000000000016B38_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B38:
	branch 127 <u a0 l0000000000016B5C
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B5C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

l0000000000016B40:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

fn0000000000016B38_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid>



word64 fn0000000000016B68(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra sp
fn0000000000016B68_entry:
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016B68:
	word64 a4_104
	word64 a0_6 = fn00000000000182B4(a0)
	word64 a5_7 = (int64) (word32) (a0_6 >>u 24)
	branch a5_7 == 0x0000000000000000 l0000000000016BD8
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016BD8:
	a4_104 = 0x00000000000115E8
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B7C:
	branch a5_7 == 10 l0000000000016C2C
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B84:
	word64 a4_41 = (int64) (word32) (a0_6 >>u 16)
	branch a5_7 == 100 l0000000000016C58
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:10 a3:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C58:
	branch (a4_41 & 192) != 64 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C64:
	a4_104 = 0x0000000000011618
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:64 a0:<invalid> -8(fp):ra

l0000000000016B90:
	branch a5_7 == 127 l0000000000016C70
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C70:
	a4_104 = 0x0000000000011630
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016B98:
	word64 a2_60 = (int64) (word32) (a0_6 >>u 8)
	branch a5_7 == 169 l0000000000016C44
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016C44:
	branch (a4_41 & 255) != 254 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C4C:
	a4_104 = 0x0000000000011640
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:254 a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BAC:
	branch a5_7 != 172 l0000000000016BF0
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF0:
	branch a5_7 != 192 l0000000000016C7C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C7C:
	branch a5_7 != 203 l0000000000016D18
// DataOut: a0 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D18:
	word64 a2_92 = 255
	branch a5_7 != a2_92 l0000000000016D4C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D4C:
	branch a5_7 != 198 l0000000000016BC0
// DataOut: a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D54:
	a4_104 = 0x0000000000011650
	branch (a4_41 & 254) != 18 l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:198 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D68:
	a4_104 = 0x0000000000011738
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011650 a3:18 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D20:
	a4_104 = 0x0000000000011710
	branch (a4_41 & 255) != a5_7 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D2C:
	a4_104 = 0x0000000000011710
	branch (a2_60 & 255) != a2_92 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D38:
	branch (a0_6 & a2_92) != (a2_60 & 255) l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D40:
	a4_104 = 0x0000000000011720
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C84:
	branch (a4_41 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C88:
	branch (a2_60 & 255) != 113 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C90:
	a4_104 = 0x00000000000116C0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:113 a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF8:
	branch ((a4_41 | a2_60) & 255) == 0x0000000000000000 l0000000000016CD0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CD0:
	a4_104 = 0x0000000000011660
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C04:
	branch (a4_41 & 255) == 2 l0000000000016CDC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CDC:
	branch (a2_60 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CE0:
	a4_104 = 0x0000000000011680
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C0C:
	branch (a4_41 & 255) == 51 l0000000000016C9C
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C9C:
	branch (a2_60 & 255) != 100 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CA4:
	a4_104 = 0x00000000000116A0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:100 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C14:
	branch (a4_41 & 255) == 88 l0000000000016CB0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB0:
	branch (a2_60 & 255) == 99 l0000000000016D00
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D00:
	a4_104 = 0x00000000000116E0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:99 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C1C:
	branch (a4_41 & 255) == 52 l0000000000016CEC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CEC:
	branch (a2_60 & 255) != 193 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CF4:
	a4_104 = 0x0000000000011708
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:193 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C24:
	branch (a4_41 & 255) != 168 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BB4:
	branch (a4_41 & 240) == 16 l0000000000016C2C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C2C:
	return 0x0000000000011608
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

l0000000000016BC0:
	branch 15 <u (int64) ((word32) a5_7 + -224) l0000000000016CB8
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB8:
	branch (a5_7 & 240) == 240 l0000000000016D0C
// DataOut: gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D0C:
	a4_104 = 0x0000000000011710
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CC4:
	a4_104 = 0x0000000000011650
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BCC:
	a4_104 = 0x0000000000011748
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:15 a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BE0:
	return a4_104
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

fn0000000000016B68_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> ra:ra a0:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra



word64 fn0000000000016D74(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 t1 t3 t4 t5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
fn0000000000016D74_entry:
// DataOut: a0 a1 a2 a3 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01C8(64) Local -01D0(0)

l0000000000016D74:
	word64 a0_264
	word64 a0_41 = memset(a0, a1, a2)
	word64 s5_121 = a1
	word64 a0_113 = DPB(a0_41, inet_pton(a0_41, a1, fp + 0xFFFFFFFFFFFFFE40), 0)
	word64 sp_106 = fp + 0xFFFFFFFFFFFFFE30
	branch false l0000000000016E60
// DataOut: gp s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01C8(64) Local -01D0(0)

l0000000000016E60:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01D0(0)

l0000000000016E68:
	__fprintf_chk(a0_113, a1, 0x0000000000011788, tLoc01D0)
	sp_106 = fp + 0xFFFFFFFFFFFFFE28
	a0_264 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DDC:
	branch a1 < 0x0000000000000000 l0000000000016E88
// DataOut: gp s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C8(64)

l0000000000016E88:
	s5_121 = 32
	branch a3 << 0x0000000D >= 0x0000000000000000 l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C8(64)

l0000000000016E94:
	word64 a0_443 = fn00000000000182B4((int64) dwLoc01C8)
	s5_121 = 8
	word64 a5_444 = (int64) (word32) (a0_443 >>u 24)
	branch a0_443 >= 0x0000000000000000 l0000000000016EBC
// DataOut: a5 gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:a3 << 0x0000000D s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:32 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EA8:
	s5_121 = 24
	branch 63 <u (int64) ((word32) a5_444 + -128) l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:8 a0:<invalid> a1:a0 s8:a3 a3:<invalid> a4:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EB8:
	s5_121 = 16
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:24 a0:<invalid> a1:a0 s8:a3 a3:<invalid> a4:63 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DE0:
	word64 a0_384 = a0
	word64 s0_385 = 3
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE30 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DF0:
	a0_113 = strchr(a0_113, a1)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	Mem394[sp_106 + 48:word64] = a0_384
	branch a0_384 == 0x0000000000000000 l0000000000017194
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:46 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017194:
	word64 s2_422 = -1
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171A0:
	a0_113 = DPB(a0_113, __asprintf_chk(a0_113, a1, 0x00000000000117A8, Mem394[sp_106:<unknown>]), 0)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	branch sp_106 + 48 == s2_422 l00000000000172BC
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172BC:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171B8:
	s0_385 = (int64) ((word32) s0_385 + -1)
	branch s0_385 != 0x0000000000000000 l00000000000171A0
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C4:
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E00:
	a0_384 = a0_384 + 1
	Mem418[sp_106 + 48:word64] = a0_384
	s0_385 = (int64) ((word32) s0_385 + -1)
	branch s0_385 != 0x0000000000000000 l0000000000016DF0
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E10:
	branch 32 >= a1 l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EBC:
	word64 a0_128 = inet_ntop(a0_113, a1, a2, a3)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016ED4:
	word64 a0_151 = __strdup(a0_128)
	Mem153[a2:word64] = sp_106 + 56
	Mem156[sp_106 + 0x0000000000000008:word32] = (word32) fn0000000000016830(gp, s5_121)
	Mem161[sp_106 + 0x0000000000000030:word64] = 0x0000000000000000
	Mem162[sp_106 + 0x0000000000000038:word64] = 0x0000000000000000
	Mem163[sp_106 + 0x0000000000000040:word64] = 0x0000000000000000
	Mem164[sp_106 + 0x0000000000000048:word64] = 0x0000000000000000
	Mem165[sp_106 + 0x0000000000000050:word64] = 0x0000000000000000
	Mem166[sp_106 + 0x0000000000000058:word32] = 0x00000000
	Mem167[sp_106 + 0x000000000000005C:word16] = 0x0000
	Mem168[sp_106 + 0x000000000000005E:byte] = 0x00
	a0_113 = inet_ntop(a0_151, a1, a2, a3)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF0
	branch 2 == 0x0000000000000000 l0000000000017300
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017300:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -464(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F24:
	word64 a0_172 = __strdup(a0_113)
	Mem174[a2 + 48:word64] = sp_106 + 0x0000000000000028
	word64 s0_175 = (int64) Mem174[sp_106 + 0xFFFFFFFFFFFFFFF0:int32]
	Mem176[a2 + 160:word32] = (word32) s5_121
	Mem185[sp_106 + 0x0000000000000008:word32] = (word32) (fn0000000000016830(gp, s5_121) ^ -1 | s0_175)
	Mem186[sp_106 + 0x0000000000000020:word64] = 0x0000000000000000
	Mem187[sp_106 + 0x0000000000000028:word64] = 0x0000000000000000
	Mem188[sp_106 + 0x0000000000000030:word64] = 0x0000000000000000
	Mem189[sp_106 + 0x0000000000000038:word64] = 0x0000000000000000
	Mem190[sp_106 + 0x0000000000000040:word64] = 0x0000000000000000
	Mem191[sp_106 + 0x0000000000000048:word32] = 0x00000000
	Mem192[sp_106 + 0x000000000000004C:word16] = 0x0000
	Mem193[sp_106 + 0x000000000000004E:byte] = 0x00
	a0_113 = inet_ntop(a0_172, a1, a2, a3)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFE0
	branch 2 == 0x0000000000000000 l00000000000172F4
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -464(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172F4:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -464(fp):<invalid> -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F84:
	word64 a0_197 = __strdup(a0_113)
	Mem199[a2 + 40:word64] = sp_106 + 0x0000000000000018
	word64 s0_200 = (int64) Mem199[sp_106 + 0xFFFFFFFFFFFFFFE0:int32]
	word64 a0_202 = fn0000000000016830(gp, s5_121)
	word64 a3_203 = (int64) Mem199[sp_106 + 0xFFFFFFFFFFFFFFF8:int32]
	word64 s0_204 = a0_202 & s0_200
	Mem208[sp_106 + 0xFFFFFFFFFFFFFFF0:word32] = (word32) s0_204
	word64 a0_209
	word64 s5_210
	word64 s6_211
	word64 sp_212 = fn0000000000017F04(gp, s0_204, s5_121, s0_204, a3_203, out a0_209, out s5_210, out s6_211)
	Mem213[s6_211 + 24:word64] = a0_209
	Mem218[sp_212 + 56:word64] = 0x0000000000000000
	Mem219[sp_212 + 64:word64] = 0x0000000000000000
	Mem220[sp_212 + 72:word64] = 0x0000000000000000
	Mem221[sp_212 + 80:word64] = 0x0000000000000000
	Mem222[sp_212 + 88:word64] = 0x0000000000000000
	Mem223[sp_212 + 96:word32] = 0x00000000
	Mem224[sp_212 + 100:word16] = 0x0000
	Mem225[sp_212 + 102:byte] = 0x00
	a0_113 = inet_ntop(a0_197, a1, a2, a3)
	sp_106 = sp_212 + 0xFFFFFFFFFFFFFFF8
	branch 2 == 0x0000000000000000 l00000000000172DC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -464(fp):<invalid> -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172DC:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016FF4:
	word64 a5_242
	word64 a0_229 = __strdup(a0_113)
	word64 s0_231 = (int64) Mem225[sp_212 + 0x0000000000000008:int32]
	Mem232[s6_211 + 32:word64] = sp_212 + 0x0000000000000030
	Mem236[s6_211 + 184:word64] = fn0000000000016B68(s0_231)
	word64 a0_238 = fn00000000000182B4(s0_231)
	sp_106 = sp_212 + 0xFFFFFFFFFFFFFFF0
	word64 a5_239 = (int64) (word32) (a0_238 >>u 24)
	branch a0_238 >= 0x0000000000000000 l0000000000017098
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017098:
	a5_242 = 0x0000000000011758
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017024:
	branch 63 >=u (int64) ((word32) a5_239 + -128) l000000000001727C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001727C:
	a5_242 = 0x0000000000011760
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017030:
	branch 31 >=u (int64) ((word32) a5_239 + -192) l00000000000172A4
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172A4:
	a5_242 = 0x0000000000011768
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001703C:
	branch 14 <u (int64) ((word32) a5_239 + -224) l00000000000172B0
// DataOut: gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172B0:
	a5_242 = 0x0000000000011778
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017048:
	a5_242 = 0x0000000000011770
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170A0:
	word64 a5_250
	Mem243[s6_211 + 192:word64] = a5_242
	branch s5_210 == 32 l0000000000017158
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s4:<invalid> t1:<invalid> t3:32 s2:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017158:
	Mem357[s6_211 + 168:word64] = sp_212 + 0x0000000000000030
	Mem358[s6_211 + 176:word64] = sp_212 + 0x0000000000000030
	a5_250 = 0x0000000000011780
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170AC:
	Mem286[sp_212 + 0x0000000000000018:word32] = (word32) s0_231
	branch s5_210 == 31 l0000000000017210
// DataOut: gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017210:
	a0_113 = inet_ntop(a0_229, a1, a2, a3)
	branch 2 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017228:
	word64 a0_335 = __strdup(a0_113)
	word64 a5_337 = (int64) Mem286[sp_212 + 0xFFFFFFFFFFFFFFF0:int32]
	word64 a4_338 = (int64) Mem286[sp_212 + 0xFFFFFFFFFFFFFFF8:int32]
	Mem339[s6_211 + 168:word64] = sp_212 + 0x0000000000000020
	Mem346[sp_212 + 0x0000000000000010:word32] = (word32) (a5_337 ^ -1 | a4_338)
	word64 a0_347 = inet_ntop(a0_335, a1, a2, a3)
	sp_106 = sp_212 + 0xFFFFFFFFFFFFFFD8
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017260:
	a0_229 = __strdup(a0_347)
	Mem353[s6_211 + 176:word64] = sp_212 + 0x0000000000000010
	sp_106 = sp_212 + 0xFFFFFFFFFFFFFFD0
	a5_250 = 0x0000000000012660
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001716C:
	Mem253[s6_211 + 96:byte] = (byte) (int64) Mem243[a5_250:byte]
	Mem255[s6_211 + 97:byte] = (byte) (int64) Mem253[a5_250 + 1:byte]
	branch a3 << 0x00000011 < 0x0000000000000000 l0000000000017288
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017288:
	fn0000000000017B40(gp, (int64) Mem255[sp_106 + 8:int32], s6_211 + 64, s6_211 + 72, s6_211 + 80, s6_211 + 88)
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:a3 << 0x00000011 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017184:
	branch (a3 & 1) != 0x0000000000000000 l00000000000171C8
// DataOut: gp s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 t1:<invalid> fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t3:32 ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C8:
	word64 a0_267 = fn00000000000168E4(gp, 2, sp_106 + 8)
	Mem268[s6_211 + 56:word64] = a0_267
	branch a0_267 != 0x0000000000000000 l000000000001718C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 t1:<invalid> fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t3:32 ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171DC:
	branch (int64) Mem268[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:1025 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171E4:
	herror(DPB(a0_229, __sprintf_chk(a0_229, a1, a2, 0x0000000000011830, Mem268[sp_106:<unknown>]), 0))
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF0
	a0_264 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:1025 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001718C:
	a0_264 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170B8:
	Mem302[sp_212 + 0x0000000000000018:word32] = (word32) (s0_231 | 0x0000000001000000)
	a0_113 = inet_ntop(a0_229, a1, a2, a3)
	branch 2 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s2 s5 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172E8:
	sp_106 = sp_212 + 0xFFFFFFFFFFFFFFE8
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172C4:
	__fprintf_chk(a0_113, a1, 0x00000000000117B0, Mem0[sp_106:<unknown>])
	abort()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x0000000000000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170DC:
	word64 a0_306 = __strdup(a0_113)
	word64 a5_308 = (int64) Mem302[sp_212 + 0xFFFFFFFFFFFFFFF0:int32]
	Mem309[s6_211 + 168:word64] = sp_212 + 0x0000000000000020
	Mem316[sp_212 + 0x0000000000000010:word32] = (word32) fn00000000000182B4((int64) ((word32) fn00000000000182B4(a5_308 ^ -1 | (int64) Mem309[sp_212 + 0xFFFFFFFFFFFFFFF8:int32]) + -1))
	word64 a0_321 = inet_ntop(a0_306, a1, a2, a3)
	sp_106 = sp_212 + 0xFFFFFFFFFFFFFFD8
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x0000000001000000 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017074:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001707C:
	fwrite(0x00000000000117F8, a1, a2, a3)
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017120:
	__strdup(a0_321)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E18:
	branch (int64) Mem394[gp + -2028:int32] == 0x0000000000000000 l0000000000017054
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:32 s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017054:
	__fprintf_chk(a0_113, a1, 0x00000000000117D8, Mem394[sp_106:<unknown>])
	sp_106 = sp_106 + 0xFFFFFFFFFFFFFFF8
	a0_264 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -424(fp):<invalid> -416(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E20:
	a0_264 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E24:
	branch Mem0[sp_106 + 360:word64] != Mem0[gp + -1936:word64] l00000000000172D8
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172D8:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E30:
	return a0_264
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016D74_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s6:s6 s1:s1 a2:<invalid> s5:s5 a0:<invalid> a1:<invalid> s8:s8 a3:<invalid> a4:<invalid> ra:ra s0:s0 s2:s2 s3:s3 s4:s4 s7:s7 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -496(fp):<invalid> -488(fp):<invalid> -464(fp):<invalid> -456(fp):0x0000000000000000 -448(fp):0x0000000000000000 -440(fp):0x0000000000000000 -432(fp):0x0000000000000000 -424(fp):<invalid> -416(fp):<invalid> -412(fp):0x0000 -410(fp):0x00 -408(fp):0x0000000000000000 -400(fp):0x00000000 -396(fp):0x0000 -394(fp):0x00 -392(fp):0x0000000000000000 -384(fp):0x00000000 -380(fp):0x0000 -378(fp):0x00 -360(fp):<invalid> -359(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn000000000001730C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 sp
fn000000000001730C_entry:
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001730C:
	word64 a0_26
	word64 sp_2 = fp + -192
	branch 128 <u a0 l00000000000173BC
// DataOut: a0 a1 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001732C:
	word64 a5_51 = fp + -184
	word64 a3_53 = 7
	word64 a2_54 = -1
	branch a0 == 0x0000000000000000 l000000000001736C
// DataOut: a0 a2 a3 a4 a5 gp s1 s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:128 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017354:
	branch a3_53 >= a0 l00000000000173C4
// DataOut: a0 a2 a3 a4 a5 gp s1 s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173C4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017358:
	Mem77[a5_51:byte] = (byte) a2_54
	a0 = (int64) ((word32) a0 + -8)
	a5_51 = a5_51 + 1
	branch 0x0000000000000000 < a0 l0000000000017354
// DataOut: a0 a2 a3 a4 a5 gp s1 s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l000000000001736C:
	word64 a0_63 = inet_ntop(a0, fp + -184, fp + -168, a3)
	sp_2 = fp + 0xFFFFFFFFFFFFFF38
	branch 10 == 0x0000000000000000 l00000000000173BC
// DataOut: gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173BC:
	a0_26 = 0
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017384:
	memcpy(a0_63, fp + 0xFFFFFFFFFFFFFF40, a2)
	__strdup(fp + 0xFFFFFFFFFFFFFF48)
	a0_26 = fp + 0xFFFFFFFFFFFFFF48
	sp_2 = fp + 0xFFFFFFFFFFFFFF28
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF38 a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001739C:
	branch Mem0[sp_2 + 152:word64] != Mem0[gp + -1936:word64] l00000000000173D0
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173D0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173A8:
	return a0_26
// DataOut: a0 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn000000000001730C_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a4:<invalid> a5:<invalid> a0:<invalid> ra:ra s0:s0 s1:s1 a3:128 a2:<invalid> a1:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000173D4(word64 a0, word64 a1, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0 s0 s2 s3 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp
// Preserved:
fn00000000000173D4_entry:
// DataOut: a0 a1 gp s1 s10 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0030(64)

l00000000000173D4:
	word64 sp_101 = fp + -48
	word64 s2_17 = (int64) Mem0[a0:byte]
	word64 s3_18 = (int64) Mem0[a0 + 1:byte]
	branch a1 == 128 l00000000000174DC
// DataOut: a0 a1 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0018(64) Local -0028(64) Local -0030(64)

l00000000000174DC:
	word64 a0_137 = DPB(a0, memcmp(a0, 0x0000000000010880, a2), 0)
	branch a0 == 0x0000000000000000 l0000000000017538
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64) Local -0028(64) Local -0030(64)

l0000000000017538:
	word64 a0_148
	*a0Out = 0x0000000000011858
	word64 s0_149
	*s0Out = s1
	word64 s2_151
	*s2Out = s3
	word64 s3_153
	*s3Out = qwLoc30
	return fp + 0xFFFFFFFFFFFFFFF8
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC8 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010880 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174F4:
	a0 = DPB(a0, memcmp(a0_137, 0x0000000000010898, a2), 0)
	sp_101 = fp + 0xFFFFFFFFFFFFFFC0
	branch a0 != 0x0000000000000000 l000000000001747C
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC8 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010880 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017508:
	word64 a0_145
	*a0Out = 0x0000000000011870
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC0 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017400:
	branch 95 < a1 l0000000000017474
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017474:
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:95 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001747C:
	word64 a0_90 = DPB(a0, memcmp(a0, 0x00000000000108B0, a2), 0)
	word64 sp_91 = sp_101 + 0xFFFFFFFFFFFFFFF8
	branch a0 == 0x0000000000000000 l000000000001755C
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001755C:
	word64 a0_122
	*a0Out = 0x0000000000011888
	word64 s0_123
	*s0Out = Mem0[sp_91 + 32:word64]
	word64 s2_125
	*s2Out = Mem0[sp_91 + 16:word64]
	word64 s3_126
	*s3Out = Mem0[sp_91 + 8:word64]
	return sp_91 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017490:
	word64 a0_95 = DPB(a0, memcmp(a0_90, 0x00000000000108C0, a2), 0)
	branch a0 == 0x0000000000000000 l0000000000017514
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017514:
	word64 a0_114
	*a0Out = 0x00000000000118A0
	word64 s0_115
	*s0Out = Mem0[sp_91 + 0x0000000000000018:word64]
	word64 s2_117
	*s2Out = Mem0[sp_91 + 0x0000000000000008:word64]
	word64 s3_118
	*s3Out = Mem0[sp_91:word64]
	return sp_91 + 0x0000000000000028
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174A4:
	memcmp(a0_95, 0x00000000000108D0, a2)
	sp_101 = sp_91 + 0xFFFFFFFFFFFFFFF0
	branch a0 != 0x0000000000000000 l0000000000017408
// DataOut: gp s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174B8:
	word64 a0_104
	*a0Out = 0x00000000000118B8
	word64 s0_105
	*s0Out = Mem0[sp_91 + 0x0000000000000010:word64]
	word64 s2_107
	*s2Out = Mem0[sp_91:word64]
	word64 s3_108
	*s3Out = Mem0[sp_91 + 0xFFFFFFFFFFFFFFF8:word64]
	return sp_91 + 0x0000000000000020
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017408:
	word64 a5_58 = s2_17 << 0x00000008 | s3_18
	branch (a5_58 & 0x00000000FFFFE000) == 0x0000000000002000 l0000000000017580
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017580:
	word64 a0_81
	*a0Out = 0x00000000000118D8
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017420:
	branch (s2_17 & 254) == 252 l000000000001758C
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001758C:
	word64 a0_79
	*a0Out = 0x00000000000118E8
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:252 s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001742C:
	branch (a5_58 & -64) == 65152 l0000000000017598
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:252 s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017598:
	word64 a0_77
	*a0Out = 0x0000000000011900
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001743C:
	branch s2_17 == 255 l00000000000175A4
// DataOut: a5 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000175A4:
	word64 a0_75
	*a0Out = 0x0000000000011748
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017444:
	word64 a0_71
	*a0Out = 0x0000000000011710
	branch (a5_58 & -2) == 8194 l00000000000175B0
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000175B0:
	word64 a0_73
	*a0Out = 0x0000000000011918
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:<invalid> a2:<invalid> a0:0x0000000000011710 s1:0x0000000000010480 a1:0x00000000000108D0 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017458:
	word64 s0_46
	*s0Out = Mem0[sp_101 + 32:word64]
	word64 s2_48
	*s2Out = Mem0[sp_101 + 16:word64]
	word64 s3_49
	*s3Out = Mem0[sp_101 + 8:word64]
	return sp_101 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> s1:0x0000000000010480 a2:<invalid> a1:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000173D4_exit:
// DataOut: a0 s0 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s1:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> ra:<invalid> a4:<invalid> a3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000175BC(word64 gp, word64 a0, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a2 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 t1 t3 t4 t5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000175BC_entry:
// DataOut: a0 a2 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01B0(0)

l00000000000175BC:
	word64 a0_136
	word64 a0_43 = memset(a0, a1, a2)
	word64 a0_48 = DPB(a0_43, inet_pton(a0_43, a1, fp + 0xFFFFFFFFFFFFFE60), 0)
	word64 sp_111 = fp + 0xFFFFFFFFFFFFFE50
	branch false l00000000000177B4
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01B0(0)

l00000000000177B4:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE50 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:<invalid> a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01B0(0)

l00000000000177BC:
	__fprintf_chk(a0_48, a1, 0x0000000000011920, tLoc01B0)
	sp_111 = fp + 0xFFFFFFFFFFFFFE48
	a0_136 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE50 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:<invalid> a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017628:
	word64 s0_95
	word64 a0_96
	word64 s2_97
	word64 s5_98
	word64 s6_99
	word64 s8_100
	word64 s9_101
	word64 sp_102 = fn00000000000163B0(gp, fp + 0xFFFFFFFFFFFFFE58, out s0_95, out a0_96, out s2_97, out s5_98, out s6_99, out s8_100, out s9_101)
	Mem104[s0_95 + 8:word64] = a0_96
	word64 a0_110 = inet_ntop(a0_48, a1, a2, a3)
	sp_111 = sp_102 + 0xFFFFFFFFFFFFFFF8
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE50 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:<invalid> a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017650:
	word64 a0_138 = __strdup(a0_110)
	Mem140[s0_95:word64] = sp_102 + 56
	sp_111 = sp_102 + 0xFFFFFFFFFFFFFFF0
	word64 s5_141 = 128
	branch s5_141 < s2_97 l00000000000177DC
// DataOut: gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177DC:
	branch (int64) Mem140[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177E4:
	__fprintf_chk(a0_138, a1, 0x0000000000011940, Mem140[sp_102 + 0xFFFFFFFFFFFFFFF0:<unknown>])
	sp_111 = sp_102 + 0xFFFFFFFFFFFFFFE8
	a0_136 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017664:
	branch s2_97 < 0x0000000000000000 l0000000000017868
// DataOut: gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017868:
// DataOut: gp s0 s10 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017668:
	s5_141 = s2_97
// DataOut: gp s0 s10 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001766C:
	Mem145[s0_95 + 160:word32] = (word32) s5_141
	word64 a0_148 = fn000000000001730C(gp, s5_141, sp_102 + 0x0000000000000008)
	Mem149[s0_95 + 48:word64] = a0_148
	branch a0_148 == 0x0000000000000000 l00000000000178F8
// DataOut: gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178F8:
	branch (int64) Mem149[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017900:
	__fprintf_chk(a0_138, a1, 0x0000000000011960, Mem149[sp_102 + 0xFFFFFFFFFFFFFFF0:<unknown>])
	sp_111 = sp_102 + 0xFFFFFFFFFFFFFFE8
	a0_136 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017688:
	word64 a5_151 = sp_102 + 0xFFFFFFFFFFFFFFF8
	word64 a2_153 = sp_102 + 0x0000000000000018
	word64 a3_154 = sp_102 + 0x0000000000000008
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001769C:
	Mem163[a2_153:byte] = (byte) ((int64) Mem149[a5_151:byte] & (int64) Mem149[a3_154:byte])
	a5_151 = a5_151 + 1
	a3_154 = a3_154 + 1
	a2_153 = a2_153 + 1
	branch sp_102 + 0x0000000000000008 != a5_151 l000000000001769C
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176BC:
	word64 a0_169 = inet_ntop(a0_138, a1, a2, a3)
	sp_111 = sp_102 + 0xFFFFFFFFFFFFFFE8
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176D4:
	word64 a0_172 = __strdup(a0_169)
	Mem174[s0_95 + 32:word64] = sp_102 + 56
	word64 s0_176
	word64 a0_177
	word64 s2_178
	word64 s5_179
	word64 s6_180
	word64 s8_181
	word64 s9_182
	word64 sp_183 = fn00000000000163B0(gp, sp_102 + 0x0000000000000008, out s0_176, out a0_177, out s2_178, out s5_179, out s6_180, out s8_181, out s9_182)
	Mem184[s0_176 + 16:word64] = a0_177
	word64 s0_187
	word64 a0_188
	word64 s2_189
	word64 s3_190
	word64 sp_191 = fn00000000000173D4(sp_183 + 40, s2_178, out s0_187, out a0_188, out s2_189, out s3_190)
	Mem192[s0_187 + 184:word64] = a0_188
	Mem196[s0_187 + 24:word64] = fn0000000000018118(gp, sp_191 + 40, s5_179)
	branch s2_189 != 128 l0000000000017870
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017870:
	word64 a0_261 = __strdup(a0_172)
	Mem263[s0_187 + 168:word64] = s3_190
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001787C:
	s8_181 = s8_181 + 1
	Mem271[s8_181 + 4095:byte] = (byte) ((int64) Mem263[s9_182:byte] ^ -1 | (int64) Mem263[s8_181:byte])
	s9_182 = s9_182 + 1
	branch s3_190 != s8_181 l000000000001787C
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001789C:
	word64 a0_277 = inet_ntop(a0_261, a1, a2, a3)
	sp_111 = sp_191 + 0xFFFFFFFFFFFFFFF0
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017768:
	branch (int64) Mem104[gp + -2028:int32] == 0x0000000000000000 l0000000000017804
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017804:
	fwrite(0x00000000000117F8, a1, a2, a3)
	sp_111 = sp_111 + 0xFFFFFFFFFFFFFFF8
	a0_136 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178B4:
	a0_172 = __strdup(a0_277)
	Mem283[s0_187 + 176:word64] = s3_190
	word64 a5_282 = 128
	sp_191 = sp_191 + 0xFFFFFFFFFFFFFFE8
	branch (int64) (word32) (a5_282 - s2_189) != a5_282 l0000000000017728
// DataOut: a0 gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178D0:
// DataOut: a0 gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017714:
	word64 a5_255 = Mem196[s0_187 + 32:word64]
	Mem258[s0_187 + 168:word64] = a5_255
	Mem259[s0_187 + 176:word64] = a5_255
// DataOut: a0 gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017728:
// DataOut: a0 gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017740:
	word64 a0_209 = DPB(a0_172, snprintf(a0_172, a1, 0x0000000000011990, Mem196[sp_191:<unknown>]), 0)
	sp_111 = sp_191 + 0xFFFFFFFFFFFFFFF8
	branch s6_180 << 0x00000011 < 0x0000000000000000 l00000000000178DC
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178DC:
	fn0000000000017D10(gp, sp_111 + 8, s0_187 + 64, s0_187 + 72, s0_187 + 80, s0_187 + 88)
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:0x0000000000011990 s4:<invalid> s2:<invalid> a0:<invalid> a1:64 s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017758:
	branch (s6_180 & 1) != 0x0000000000000000 l0000000000017824
// DataOut: gp s0 s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017824:
	word64 a0_222 = fn00000000000168E4(gp, 10, sp_111 + 8)
	Mem223[s0_187 + 56:word64] = a0_222
	branch a0_222 != 0x0000000000000000 l0000000000017760
// DataOut: gp s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017838:
	branch (int64) Mem223[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:1025 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017840:
	herror(DPB(a0_172, __sprintf_chk(a0_209, a1, a2, 0x0000000000011830, Mem223[sp_111:<unknown>]), 0))
	sp_111 = sp_111 + 0xFFFFFFFFFFFFFFF0
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:1025 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017770:
	a0_136 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017760:
	a0_136 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017774:
	branch Mem0[sp_111 + 312:word64] != Mem0[gp + -1936:word64] l0000000000017920
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017920:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017780:
	return a0_136
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000175BC_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 a2:<invalid> s4:s4 s2:s2 a0:<invalid> a1:<invalid> s6:s6 a3:<invalid> s3:s3 a4:<invalid> ra:ra s1:s1 s5:s5 s7:s7 s8:s8 s9:s9 t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -408(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017924(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn0000000000017924_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(0)

l0000000000017924:
	word64 s0_148
	branch Mem0[gp + -2016:word64] == 0x0000000000000000 l00000000000179B8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(0)

l00000000000179B8:
	s0_148 = (int64) Mem0[gp + -2024:int32]
	branch s0_148 != 0x0000000000000000 l000000000001795C
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(0)

l00000000000179C0:
	word64 a0_75 = dlopen(0x0000000000012A38, a1)
	Mem77[gp + 2080:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017B14
// DataOut: a0 gp s0 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(0)

l0000000000017B14:
	__snprintf_chk(a0_75, a1, a2, a3, 0x0000000000012A58, tLoc68)
	s0_148 = -1
	Mem170[gp + 2072:word32] = (word32) s0_148
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF98 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:<invalid> s3:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000179DC:
	word64 a0_81 = dlsym(a0_75, 0x0000000000012A78)
	Mem84[gp + 2152:word64] = 0x0000000000012A38
	word64 a0_87 = dlsym(a0_81, 0x0000000000012A90)
	Mem93[gp + 2144:word64] = 0x0000000000012A38
	word64 a0_94 = dlsym(a0_87, 0x0000000000012AA0)
	Mem100[gp + 2136:word64] = 0x0000000000012A38
	word64 a0_101 = dlsym(a0_94, 0x0000000000012AC0)
	Mem107[gp + 2120:word64] = 0x0000000000012A38
	word64 a0_108 = dlsym(a0_101, 0x0000000000012AD0)
	Mem114[gp + 2112:word64] = 0x0000000000012A38
	word64 a0_115 = dlsym(a0_108, 0x0000000000012AE8)
	Mem121[gp + 2104:word64] = 0x0000000000012A38
	word64 a0_122 = dlsym(a0_115, 0x0000000000012B00)
	Mem128[gp + 2096:word64] = 0x0000000000012A38
	word64 a0_129 = dlsym(a0_122, 0x0000000000012B18)
	Mem135[gp + 2088:word64] = 0x0000000000012A38
	dlsym(a0_129, 0x0000000000012B38)
	Mem138[gp + 2128:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s4 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF98 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:<invalid> s3:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AAC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB4:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB8:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ABC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ACC:
	word64 a0_142 = Mem138[0x0000000000012B58:word64]
	word64 a1_143 = Mem138[0x0000000000012B60:word64]
	word64 a2_144 = Mem138[0x0000000000012B68:word64]
	word64 a3_145 = Mem138[0x0000000000012B70:word64]
	word64 a4_146 = (int64) Mem138[0x0000000000012B78:int32]
	Mem149[gp + -800:word64] = Mem138[0x0000000000012B50:word64]
	Mem150[gp + -792:word64] = a0_142
	Mem151[gp + -784:word64] = a1_143
	Mem152[gp + -776:word64] = a2_144
	Mem153[gp + -768:word64] = a3_145
	Mem154[gp + -760:word32] = (word32) a4_146
	s0_148 = -1
	Mem155[gp + 2072:word32] = (word32) s0_148
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC4:
	Mem156[gp + 2072:word32] = 0x00000000
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001795C:
	branch (int64) Mem0[gp + -2028:int32] != 0x0000000000000000 l000000000001796C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017964:
	branch (int64) Mem0[gp + -800:byte] != 0x0000000000000000 l00000000000179A8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000179A8:
	fputs(a0, a1)
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001796C:
	s0_148 = (int64) Mem0[gp + -2024:int32]
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a1:<invalid> a0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017970:
	return s0_148
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> s3:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017924_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 ra:ra a0:<invalid> s1:s1 s2:s2 s3:s3 s4:s4 s5:s5 s6:s6 s7:s7 s8:s8 s9:s9 a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017B40(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017B40_entry:
// DataOut: a0 a1 a2 a3 a4 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017B40:
	branch fn0000000000017924(gp) == 0x0000000000000000 l0000000000017BB0
// DataOut: gp s0 s1 s10 s2 s3 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017BB0:
	word64 a0_92 = fn00000000000182B4(a0)
	word64 a5_93 = Mem0[gp + -1944:word64]
	word64 sp_95
	word64 s0_96
	word64 s1_97
	word64 s2_98
	word64 s3_99
	word64 s4_100
	word64 ra_101
	word64 s5_102
	word64 s6_103
	word64 s7_104
	word64 a0_105
	word64 a1_106
	word64 a2_107
	word64 a3_108
	word64 a4_109
	word64 a5_110
	word64 gp_111
	word64 a0_112
	word64 fa4_113
	word64 fa5_114
	word64 t1_115
	word64 fa3_116
	word64 a1_117
	word64 a2_118
	call a5_93 (retsize: 0; depth: 80)
		uses: a0,a0_92,a1,a1,a2,a2,a3,a4,a5_93,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra,s0_22,s1_28,s2_26,s3_24,s4_30,s5,s6,s7_94,sp_2,t1
		defs: a0_105,a0_112,a1_106,a1_117,a2_107,a2_118,a3_108,a4_109,a5_110,fa3_116,fa4_113,fa5_114,gp_111,ra_101,s0_96,s1_97,s2_98,s3_99,s4_100,s5_102,s6_103,s7_104,sp_95,t1_115
	word64 a5_119 = Mem0[gp_111 + -1952:word64]
	word64 sp_122
	word64 s0_123
	word64 s1_124
	word64 s2_125
	word64 s3_126
	word64 s4_127
	word64 ra_128
	word64 s5_129
	word64 s6_130
	word64 s7_131
	word64 a0_132
	word64 a1_133
	word64 a2_134
	word64 a3_135
	word64 a4_136
	word64 a5_137
	word64 a0_139
	word64 fa4_140
	word64 fa5_141
	word64 t1_142
	word64 fa3_143
	word64 a1_144
	word64 a2_145
	word64 gp_138
	call a5_119 (retsize: 0; depth: 80)
		uses: a0_112,a0_121,a1_117,a1_120,a2_107,a2_118,a3_108,a4_109,a5_119,fa3_116,fa4_113,fa5_114,gp_111,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_101,s0_96,s1_97,s2_98,s3_99,s4_100,s5_102,s6_103,s7_104,sp_95,t1_115
		defs: a0_132,a0_139,a1_133,a1_144,a2_134,a2_145,a3_135,a4_136,a5_137,fa3_143,fa4_140,fa5_141,gp_138,ra_128,s0_123,s1_124,s2_125,s3_126,s4_127,s5_129,s6_130,s7_131,sp_122,t1_142
	branch a0_132 == 0x0000000000000000 l0000000000017C3C
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s3:a1 s2:a2 s1:a3 s4:a4 a5:<invalid> a0:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017BDC:
	word64 a5_293 = Mem0[gp_138 + -1992:word64]
	word64 a4_294 = 1
	Mem296[a0_132 + 76:word32] = (word32) a4_294
	word64 sp_298
	word64 s0_299
	word64 s1_300
	word64 s2_301
	word64 s3_302
	word64 s4_303
	word64 ra_304
	word64 s5_305
	word64 s6_306
	word64 s7_307
	word64 a0_308
	word64 a1_309
	word64 a2_310
	word64 a3_311
	word64 a4_312
	word64 a5_313
	word64 gp_314
	word64 a0_315
	word64 fa4_316
	word64 fa5_317
	word64 t1_318
	word64 fa3_319
	word64 a1_320
	word64 a2_321
	call a5_293 (retsize: 0; depth: 80)
		uses: a0_132,a0_139,a1_144,a1_297,a2_134,a2_145,a3_135,a4_294,a5_293,fa3_143,fa4_140,fa5_141,gp_138,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_128,s0_146,s1_124,s2_125,s3_126,s4_127,s5_129,s6_130,s7_131,sp_122,t1_142
		defs: a0_308,a0_315,a1_309,a1_320,a2_310,a2_321,a3_311,a4_312,a5_313,fa3_319,fa4_316,fa5_317,gp_314,ra_304,s0_299,s1_300,s2_301,s3_302,s4_303,s5_305,s6_306,s7_307,sp_298,t1_318
	branch a0_308 < 0x0000000000000000 l0000000000017B84
// DataOut: gp s0 s1 s10 s2 s3 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017BFC:
	word64 a5_323 = Mem296[gp_314 + -1960:word64]
	word64 sp_326
	word64 s0_327
	word64 s1_328
	word64 s2_329
	word64 s3_330
	word64 s4_331
	word64 ra_332
	word64 s5_333
	word64 s6_334
	word64 s7_335
	word64 a0_336
	word64 a1_337
	word64 a2_338
	word64 a3_339
	word64 a4_340
	word64 a5_341
	word64 gp_342
	word64 a0_343
	word64 fa4_344
	word64 fa5_345
	word64 t1_346
	word64 fa3_347
	word64 a1_348
	word64 a2_349
	call a5_323 (retsize: 0; depth: 80)
		uses: a0_315,a0_325,a1_320,a1_324,a2_310,a2_321,a3_311,a4_312,a5_323,fa3_319,fa4_316,fa5_317,gp_314,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_304,s0_299,s1_300,s2_301,s3_302,s4_303,s5_305,s6_322,s7_307,sp_298,t1_318
		defs: a0_336,a0_343,a1_337,a1_348,a2_338,a2_349,a3_339,a4_340,a5_341,fa3_347,fa4_344,fa5_345,gp_342,ra_332,s0_327,s1_328,s2_329,s3_330,s4_331,s5_333,s6_334,s7_335,sp_326,t1_346
	branch a0_336 == 0x0000000000000000 l0000000000017C18
// DataOut: a0 gp s1 s10 s2 s3 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017C10:
	__strdup(a0_343)
	Mem407[s3_330:word64] = a0_336
// DataOut: gp s1 s10 s2 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C18:
	word64 a5_350 = Mem296[gp_342 + -1968:word64]
	word64 sp_352
	word64 s0_353
	word64 s1_354
	word64 s2_355
	word64 s3_356
	word64 s4_357
	word64 ra_358
	word64 s5_359
	word64 s6_360
	word64 s7_361
	word64 a0_362
	word64 a1_363
	word64 a2_364
	word64 a3_365
	word64 a4_366
	word64 a5_367
	word64 gp_368
	word64 a0_369
	word64 fa4_370
	word64 fa5_371
	word64 t1_372
	word64 fa3_373
	word64 a1_374
	word64 a2_375
	call a5_350 (retsize: 0;)
		uses: a0_343,a0_351,a1_337,a1_348,a2_338,a2_349,a3_339,a4_340,a5_350,fa3_347,fa4_344,fa5_345,gp_342,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_332,s0_327,s1_328,s2_329,s3_330,s4_331,s5_333,s6_334,s7_335,sp_326,t1_346
		defs: a0_362,a0_369,a1_363,a1_374,a2_364,a2_375,a3_365,a4_366,a5_367,fa3_373,fa4_370,fa5_371,gp_368,ra_358,s0_353,s1_354,s2_355,s3_356,s4_357,s5_359,s6_360,s7_361,sp_352,t1_372
	branch a0_362 == 0x0000000000000000 l0000000000017C30
// DataOut: a0 gp s1 s10 s2 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C28:
	__strdup(a0_369)
	Mem404[s2_355:word64] = a0_362
// DataOut: gp s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C30:
	word64 a5_376 = Mem296[gp_368 + -1976:word64]
	word64 sp_378
	word64 s0_379
	word64 s1_380
	word64 s2_381
	word64 s3_382
	word64 s4_383
	word64 ra_384
	word64 s5_385
	word64 s6_386
	word64 s7_387
	word64 a0_388
	word64 a1_389
	word64 a2_390
	word64 a3_391
	word64 a4_392
	word64 a5_393
	word64 a0_395
	word64 fa4_396
	word64 fa5_397
	word64 t1_398
	word64 fa3_399
	word64 a1_400
	word64 a2_401
	call a5_376 (retsize: 0;)
		uses: a0_369,a0_377,a1_363,a1_374,a2_364,a2_375,a3_365,a4_366,a5_376,fa3_373,fa4_370,fa5_371,gp_368,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_358,s0_353,s1_354,s2_355,s3_356,s4_357,s5_359,s6_360,s7_361,sp_352,t1_372
		defs: a0_388,a0_395,a1_389,a1_400,a2_390,a2_401,a3_391,a4_392,a5_393,fa3_399,fa4_396,fa5_397,gp_394,ra_384,s0_379,s1_380,s2_381,s3_382,s4_383,s5_385,s6_386,s7_387,sp_378,t1_398
// DataOut: gp s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C3C:
	word64 a5_148 = Mem0[gp_138 + -1952:word64]
	word64 sp_151
	word64 s0_152
	word64 s1_153
	word64 s2_154
	word64 s3_155
	word64 s4_156
	word64 ra_157
	word64 s5_158
	word64 s6_159
	word64 s7_160
	word64 a0_161
	word64 a1_162
	word64 a2_163
	word64 a3_164
	word64 a4_165
	word64 a5_166
	word64 a0_168
	word64 fa4_169
	word64 fa5_170
	word64 t1_171
	word64 fa3_172
	word64 a1_173
	word64 a2_174
	word64 gp_167
	call a5_148 (retsize: 0;)
		uses: a0_139,a0_150,a1_144,a1_149,a2_134,a2_145,a3_135,a4_136,a5_148,fa3_143,fa4_140,fa5_141,gp_147,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_128,s0_146,s1_124,s2_125,s3_126,s4_127,s5_129,s6_130,s7_131,sp_122,t1_142
		defs: a0_161,a0_168,a1_162,a1_173,a2_163,a2_174,a3_164,a4_165,a5_166,fa3_172,fa4_169,fa5_170,gp_167,ra_157,s0_152,s1_153,s2_154,s3_155,s4_156,s5_158,s6_159,s7_160,sp_151,t1_171
	word64 s0_175 = a0_161
	branch a0_161 == 0x0000000000000000 l0000000000017CF4
// DataOut: a0 gp s0 s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017CF4:
	word64 a5_265 = Mem0[gp_167 + -1952:word64]
	word64 sp_268
	word64 s0_269
	word64 s1_270
	word64 s2_271
	word64 s3_272
	word64 s4_273
	word64 ra_274
	word64 s5_275
	word64 s6_276
	word64 s7_277
	word64 a0_278
	word64 a1_279
	word64 a2_280
	word64 a3_281
	word64 a4_282
	word64 a5_283
	word64 a0_285
	word64 fa4_286
	word64 fa5_287
	word64 t1_288
	word64 fa3_289
	word64 a1_290
	word64 a2_291
	call a5_265 (retsize: 0;)
		uses: a0_168,a0_267,a1_173,a1_266,a2_163,a2_174,a3_164,a4_165,a5_265,fa3_172,fa4_169,fa5_170,gp_167,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_157,s0_175,s1_153,s2_154,s3_155,s4_156,s5_158,s6_159,s7_160,sp_151,t1_171
		defs: a0_278,a0_285,a1_279,a1_290,a2_280,a2_291,a3_281,a4_282,a5_283,fa3_289,fa4_286,fa5_287,gp_284,ra_274,s0_269,s1_270,s2_271,s3_272,s4_273,s5_275,s6_276,s7_277,sp_268,t1_288
	s0_175 = a0_278
	branch a0_278 != 0x0000000000000000 l0000000000017C54
// DataOut: a0 gp s0 s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:2 s3:a1 s2:a2 s1:a3 s4:a4 a0:2 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017D0C:
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:6 s3:a1 s2:a2 s1:a3 s4:a4 a0:6 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C54:
	word64 a5_179 = Mem0[gp_167 + -1984:word64]
	word64 a4_180 = 1
	Mem182[s0_175 + 76:word32] = (word32) a4_180
	word64 s0_185
	word64 s1_186
	word64 s2_187
	word64 s3_188
	word64 s4_189
	word64 ra_190
	word64 s5_191
	word64 s6_192
	word64 s7_193
	word64 a0_194
	word64 a1_195
	word64 a2_196
	word64 a3_197
	word64 a4_198
	word64 a5_199
	word64 gp_200
	word64 a0_201
	word64 fa4_202
	word64 fa5_203
	word64 t1_204
	word64 fa3_205
	word64 a1_206
	word64 a2_207
	word64 sp_184
	call a5_179 (retsize: 0;)
		uses: a0_161,a0_168,a1_173,a1_183,a2_163,a2_174,a3_164,a4_180,a5_179,fa3_172,fa4_169,fa5_170,gp_176,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_157,s0_177,s1_153,s2_154,s3_155,s4_156,s5_158,s6_159,s7_178,sp_151,t1_171
		defs: a0_194,a0_201,a1_195,a1_206,a2_196,a2_207,a3_197,a4_198,a5_199,fa3_205,fa4_202,fa5_203,gp_200,ra_190,s0_185,s1_186,s2_187,s3_188,s4_189,s5_191,s6_192,s7_193,sp_184,t1_204
	branch a0_194 == 0x0000000000000000 l0000000000017C94
// DataOut: a0 a4 gp s1 s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C74:
	word64 a0_247
	word64 a0_246 = Mem182[a0_194 + 32:word64]
	a0_247 = a0_201
	branch a0_246 == 0x0000000000000000 l0000000000017C84
// DataOut: a0 a4 gp s1 s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C7C:
	a0_247 = __strdup(a0_201)
	Mem264[s1_186:word64] = a0_246
	sp_184 = sp_184 + 0xFFFFFFFFFFFFFFF8
// DataOut: a4 gp s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C84:
	branch (word64) ((real32) Mem182[a0_194 + 52:real32] == (real32) 0x0000000000000000) == 0x0000000000000000 l0000000000017CC8
// DataOut: a4 a5 gp s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017CC8:
	__asprintf_chk(a0_247, a1_206, 0x0000000000012B80, Mem182[sp_184:<unknown>])
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 fa4:<invalid> fa5:(real32) 0x0000000000000000 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C94:
	word64 t1_220 = Mem182[gp_200 + -1976:word64]
	word64 sp_222
	word64 s0_223
	word64 s1_224
	word64 s2_225
	word64 s3_226
	word64 s4_227
	word64 ra_228
	word64 s5_229
	word64 s6_230
	word64 s7_231
	word64 a0_232
	word64 a1_233
	word64 a2_234
	word64 a3_235
	word64 a4_236
	word64 a5_237
	word64 gp_238
	word64 a0_239
	word64 fa4_240
	word64 fa5_241
	word64 t1_242
	word64 fa3_243
	word64 a1_244
	word64 a2_245
	call t1_220 (retsize: 0;)
		uses: a0_201,a0_210,a1_195,a1_206,a2_196,a2_207,a3_197,a4_198,a5_199,fa3_205,fa4_202,fa5_203,gp_200,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_211,s0_212,s1_213,s2_214,s3_215,s4_216,s5_217,s6_218,s7_219,sp_221,t1_220
		defs: a0_232,a0_239,a1_233,a1_244,a2_234,a2_245,a3_235,a4_236,a5_237,fa3_243,fa4_240,fa5_241,gp_238,ra_228,s0_223,s1_224,s2_225,s3_226,s4_227,s5_229,s6_230,s7_231,sp_222,t1_242
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> fa3:<invalid> s6:1 a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017B84:
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:<invalid> s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017B40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s3:s3 s2:s2 s1:s1 s4:s4 ra:ra s5:s5 s6:s6 s7:s7 a0:<invalid> a5:<invalid> a1:<invalid> a4:<invalid> t1:<invalid> a3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> a6:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017D10(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017D10_entry:
// DataOut: a0 a1 a2 a3 a4 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017D10:
	word64 a0_32 = fn0000000000017924(gp)
	branch a0_32 == 0x0000000000000000 l0000000000017D80
// DataOut: gp s0 s10 s2 s3 s4 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017D80:
	word64 a5_94 = Mem0[gp + -1944:word64]
	word64 sp_95
	word64 s0_96
	word64 s2_97
	word64 s3_98
	word64 s4_99
	word64 s5_100
	word64 ra_101
	word64 s1_102
	word64 s6_103
	word64 s7_104
	word64 a0_105
	word64 a1_106
	word64 a2_107
	word64 a3_108
	word64 a4_109
	word64 a5_110
	word64 gp_111
	word64 a6_112
	word64 a0_113
	word64 fa4_114
	word64 fa5_115
	word64 t1_116
	word64 fa3_117
	word64 a1_118
	word64 a2_119
	call a5_94 (retsize: 0; depth: 80)
		uses: a0,a0_32,a1,a1,a2,a2,a3,a4,a5_94,a6,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra,s0_22,s1,s2_28,s3_26,s4_24,s5_30,s6,s7,sp_2,t1
		defs: a0_105,a0_113,a1_106,a1_118,a2_107,a2_119,a3_108,a4_109,a5_110,a6_112,fa3_117,fa4_114,fa5_115,gp_111,ra_101,s0_96,s1_102,s2_97,s3_98,s4_99,s5_100,s6_103,s7_104,sp_95,t1_116
	word64 a5_120 = Mem0[gp_111 + -1952:word64]
	word64 sp_123
	word64 s0_124
	word64 s2_125
	word64 s3_126
	word64 s4_127
	word64 s5_128
	word64 ra_129
	word64 s1_130
	word64 s6_131
	word64 s7_132
	word64 a0_133
	word64 a1_134
	word64 a2_135
	word64 a3_136
	word64 a4_137
	word64 a5_138
	word64 a6_140
	word64 a0_141
	word64 fa4_142
	word64 fa5_143
	word64 t1_144
	word64 fa3_145
	word64 a1_146
	word64 a2_147
	word64 gp_139
	call a5_120 (retsize: 0; depth: 80)
		uses: a0_113,a0_122,a1_118,a1_121,a2_107,a2_119,a3_108,a4_109,a5_120,a6_112,fa3_117,fa4_114,fa5_115,gp_111,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_101,s0_96,s1_102,s2_97,s3_98,s4_99,s5_100,s6_103,s7_104,sp_95,t1_116
		defs: a0_133,a0_141,a1_134,a1_146,a2_135,a2_147,a3_136,a4_137,a5_138,a6_140,fa3_145,fa4_142,fa5_143,gp_139,ra_129,s0_124,s1_130,s2_125,s3_126,s4_127,s5_128,s6_131,s7_132,sp_123,t1_144
	branch a0_133 == 0x0000000000000000 l0000000000017E18
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a0:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017DA0:
	word64 a3_309 = Mem0[gp_139 + -2000:word64]
	word64 a6_312 = 1
	Mem313[a0_133 + 76:word32] = (word32) a6_312
	word64 sp_316
	word64 s0_317
	word64 s2_318
	word64 s3_319
	word64 s4_320
	word64 s5_321
	word64 ra_322
	word64 s1_323
	word64 s6_324
	word64 s7_325
	word64 a0_326
	word64 a1_327
	word64 a2_328
	word64 a3_329
	word64 a4_330
	word64 a5_331
	word64 gp_332
	word64 a6_333
	word64 a0_334
	word64 fa4_335
	word64 fa5_336
	word64 t1_337
	word64 fa3_338
	word64 a1_339
	word64 a2_340
	call a3_309 (retsize: 0; depth: 80)
		uses: a0_133,a0_141,a1_146,a1_314,a2_147,a2_315,a3_309,a4_310,a5_311,a6_312,fa3_145,fa4_142,fa5_143,gp_139,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_129,s0_124,s1_148,s2_125,s3_126,s4_127,s5_128,s6_131,s7_132,sp_123,t1_144
		defs: a0_326,a0_334,a1_327,a1_339,a2_328,a2_340,a3_329,a4_330,a5_331,a6_333,fa3_338,fa4_335,fa5_336,gp_332,ra_322,s0_317,s1_323,s2_318,s3_319,s4_320,s5_321,s6_324,s7_325,sp_316,t1_337
	branch a0_326 < 0x0000000000000000 l0000000000017D54
// DataOut: gp s0 s1 s10 s2 s3 s4 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:12 s1:12 a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017DD8:
	word64 a5_342 = Mem313[gp_332 + -1960:word64]
	word64 sp_345
	word64 s0_346
	word64 s2_347
	word64 s3_348
	word64 s4_349
	word64 s5_350
	word64 ra_351
	word64 s1_352
	word64 s6_353
	word64 s7_354
	word64 a0_355
	word64 a1_356
	word64 a2_357
	word64 a3_358
	word64 a4_359
	word64 a5_360
	word64 gp_361
	word64 a6_362
	word64 a0_363
	word64 fa4_364
	word64 fa5_365
	word64 t1_366
	word64 fa3_367
	word64 a1_368
	word64 a2_369
	call a5_342 (retsize: 0; depth: 80)
		uses: a0_334,a0_344,a1_339,a1_343,a2_328,a2_340,a3_329,a4_330,a5_342,a6_333,fa3_338,fa4_335,fa5_336,gp_332,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_322,s0_317,s1_323,s2_318,s3_319,s4_320,s5_321,s6_324,s7_341,sp_316,t1_337
		defs: a0_355,a0_363,a1_356,a1_368,a2_357,a2_369,a3_358,a4_359,a5_360,a6_362,fa3_367,fa4_364,fa5_365,gp_361,ra_351,s0_346,s1_352,s2_347,s3_348,s4_349,s5_350,s6_353,s7_354,sp_345,t1_366
	branch a0_355 == 0x0000000000000000 l0000000000017DF4
// DataOut: a0 gp s0 s10 s2 s3 s4 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017DEC:
	__strdup(a0_363)
	Mem429[s4_349:word64] = a0_355
// DataOut: gp s0 s10 s2 s3 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017DF4:
	word64 a5_370 = Mem313[gp_361 + -1968:word64]
	word64 sp_372
	word64 s0_373
	word64 s2_374
	word64 s3_375
	word64 s4_376
	word64 s5_377
	word64 ra_378
	word64 s1_379
	word64 s6_380
	word64 s7_381
	word64 a0_382
	word64 a1_383
	word64 a2_384
	word64 a3_385
	word64 a4_386
	word64 a5_387
	word64 gp_388
	word64 a6_389
	word64 a0_390
	word64 fa4_391
	word64 fa5_392
	word64 t1_393
	word64 fa3_394
	word64 a1_395
	word64 a2_396
	call a5_370 (retsize: 0;)
		uses: a0_363,a0_371,a1_356,a1_368,a2_357,a2_369,a3_358,a4_359,a5_370,a6_362,fa3_367,fa4_364,fa5_365,gp_361,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_351,s0_346,s1_352,s2_347,s3_348,s4_349,s5_350,s6_353,s7_354,sp_345,t1_366
		defs: a0_382,a0_390,a1_383,a1_395,a2_384,a2_396,a3_385,a4_386,a5_387,a6_389,fa3_394,fa4_391,fa5_392,gp_388,ra_378,s0_373,s1_379,s2_374,s3_375,s4_376,s5_377,s6_380,s7_381,sp_372,t1_393
	branch a0_382 == 0x0000000000000000 l0000000000017E0C
// DataOut: a0 gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:<invalid> s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E04:
	__strdup(a0_390)
	Mem426[s3_375:word64] = a0_382
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E0C:
	word64 a5_397 = Mem313[gp_388 + -1976:word64]
	word64 sp_399
	word64 s0_400
	word64 s2_401
	word64 s3_402
	word64 s4_403
	word64 s5_404
	word64 ra_405
	word64 s1_406
	word64 s6_407
	word64 s7_408
	word64 a0_409
	word64 a1_410
	word64 a2_411
	word64 a3_412
	word64 a4_413
	word64 a5_414
	word64 a6_416
	word64 a0_417
	word64 fa4_418
	word64 fa5_419
	word64 t1_420
	word64 fa3_421
	word64 a1_422
	word64 a2_423
	call a5_397 (retsize: 0;)
		uses: a0_390,a0_398,a1_383,a1_395,a2_384,a2_396,a3_385,a4_386,a5_397,a6_389,fa3_394,fa4_391,fa5_392,gp_388,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_378,s0_373,s1_379,s2_374,s3_375,s4_376,s5_377,s6_380,s7_381,sp_372,t1_393
		defs: a0_409,a0_417,a1_410,a1_422,a2_411,a2_423,a3_412,a4_413,a5_414,a6_416,fa3_421,fa4_418,fa5_419,gp_415,ra_405,s0_400,s1_406,s2_401,s3_402,s4_403,s5_404,s6_407,s7_408,sp_399,t1_420
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:<invalid> s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E18:
	word64 a5_150 = Mem0[gp_139 + -1952:word64]
	word64 sp_153
	word64 s0_154
	word64 s2_155
	word64 s3_156
	word64 s4_157
	word64 s5_158
	word64 ra_159
	word64 s1_160
	word64 s6_161
	word64 s7_162
	word64 a0_163
	word64 a1_164
	word64 a2_165
	word64 a3_166
	word64 a4_167
	word64 a5_168
	word64 a6_170
	word64 a0_171
	word64 fa4_172
	word64 fa5_173
	word64 t1_174
	word64 fa3_175
	word64 a1_176
	word64 a2_177
	word64 gp_169
	call a5_150 (retsize: 0;)
		uses: a0_141,a0_152,a1_146,a1_151,a2_135,a2_147,a3_136,a4_137,a5_150,a6_140,fa3_145,fa4_142,fa5_143,gp_149,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_129,s0_124,s1_148,s2_125,s3_126,s4_127,s5_128,s6_131,s7_132,sp_123,t1_144
		defs: a0_163,a0_171,a1_164,a1_176,a2_165,a2_177,a3_166,a4_167,a5_168,a6_170,fa3_175,fa4_172,fa5_173,gp_169,ra_159,s0_154,s1_160,s2_155,s3_156,s4_157,s5_158,s6_161,s7_162,sp_153,t1_174
	word64 s1_178 = a0_163
	branch a0_163 == 0x0000000000000000 l0000000000017EE8
// DataOut: a0 gp s0 s1 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017EE8:
	word64 a5_276 = Mem0[gp_169 + -1952:word64]
	word64 sp_279
	word64 s0_280
	word64 s2_281
	word64 s3_282
	word64 s4_283
	word64 s5_284
	word64 ra_285
	word64 s1_286
	word64 s6_287
	word64 s7_288
	word64 a0_289
	word64 a1_290
	word64 a2_291
	word64 a3_292
	word64 a4_293
	word64 a5_294
	word64 a6_296
	word64 a0_297
	word64 fa4_298
	word64 fa5_299
	word64 t1_300
	word64 fa3_301
	word64 a1_302
	word64 a2_303
	call a5_276 (retsize: 0;)
		uses: a0_171,a0_278,a1_176,a1_277,a2_165,a2_177,a3_166,a4_167,a5_276,a6_170,fa3_175,fa4_172,fa5_173,gp_169,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_159,s0_154,s1_178,s2_155,s3_156,s4_157,s5_158,s6_161,s7_162,sp_153,t1_174
		defs: a0_289,a0_297,a1_290,a1_302,a2_291,a2_303,a3_292,a4_293,a5_294,a6_296,fa3_301,fa4_298,fa5_299,gp_295,ra_285,s0_280,s1_286,s2_281,s3_282,s4_283,s5_284,s6_287,s7_288,sp_279,t1_300
	s1_178 = a0_289
	branch a0_289 != 0x0000000000000000 l0000000000017E30
// DataOut: a0 gp s0 s1 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:30 s1:30 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F00:
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:31 s1:31 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E30:
	word64 a3_186 = Mem0[gp_169 + -2008:word64]
	word64 a6_189 = 1
	Mem190[s1_178 + 76:word32] = (word32) a6_189
	word64 s0_194
	word64 s2_195
	word64 s3_196
	word64 s4_197
	word64 s5_198
	word64 ra_199
	word64 s1_200
	word64 s6_201
	word64 s7_202
	word64 a0_203
	word64 a1_204
	word64 a2_205
	word64 a3_206
	word64 a4_207
	word64 a5_208
	word64 gp_209
	word64 a6_210
	word64 a0_211
	word64 fa4_212
	word64 fa5_213
	word64 t1_214
	word64 fa3_215
	word64 a1_216
	word64 a2_217
	word64 sp_193
	call a3_186 (retsize: 0;)
		uses: a0_163,a0_171,a1_176,a1_191,a2_177,a2_192,a3_186,a4_187,a5_188,a6_189,fa3_175,fa4_172,fa5_173,gp_179,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_159,s0_180,s1_181,s2_155,s3_156,s4_157,s5_158,s6_161,s7_162,sp_153,t1_174
		defs: a0_203,a0_211,a1_204,a1_216,a2_205,a2_217,a3_206,a4_207,a5_208,a6_210,fa3_215,fa4_212,fa5_213,gp_209,ra_199,s0_194,s1_200,s2_195,s3_196,s4_197,s5_198,s6_201,s7_202,sp_193,t1_214
	branch a0_203 == 0x0000000000000000 l0000000000017E88
// DataOut: a0 a4 gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E68:
	word64 a0_258
	word64 a0_257 = Mem190[a0_203 + 32:word64]
	a0_258 = a0_211
	branch a0_257 == 0x0000000000000000 l0000000000017E78
// DataOut: a0 a4 gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E70:
	a0_258 = __strdup(a0_211)
	Mem275[s2_195:word64] = a0_257
	sp_193 = sp_193 + 0xFFFFFFFFFFFFFFF8
// DataOut: a4 gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E78:
	branch (word64) ((real32) Mem190[a0_203 + 52:real32] == (real32) 0x0000000000000000) == 0x0000000000000000 l0000000000017EBC
// DataOut: a4 a5 gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017EBC:
	__asprintf_chk(a0_258, a1_216, 0x0000000000012B80, Mem190[sp_193:<unknown>])
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 fa4:<invalid> fa5:(real32) 0x0000000000000000 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E88:
	word64 t1_230 = Mem190[gp_209 + -1976:word64]
	word64 sp_232
	word64 s0_233
	word64 s2_234
	word64 s3_235
	word64 s4_236
	word64 s5_237
	word64 ra_238
	word64 s1_239
	word64 s6_240
	word64 s7_241
	word64 a0_242
	word64 a1_243
	word64 a2_244
	word64 a3_245
	word64 a4_246
	word64 a5_247
	word64 gp_248
	word64 a6_249
	word64 a0_250
	word64 fa4_251
	word64 fa5_252
	word64 t1_253
	word64 fa3_254
	word64 a1_255
	word64 a2_256
	call t1_230 (retsize: 0;)
		uses: a0_211,a0_220,a1_204,a1_216,a2_205,a2_217,a3_206,a4_207,a5_208,a6_210,fa3_215,fa4_212,fa5_213,gp_209,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_221,s0_222,s1_223,s2_224,s3_225,s4_226,s5_227,s6_228,s7_229,sp_231,t1_230
		defs: a0_242,a0_250,a1_243,a1_255,a2_244,a2_256,a3_245,a4_246,a5_247,a6_249,fa3_254,fa4_251,fa5_252,gp_248,ra_238,s0_233,s1_239,s2_234,s3_235,s4_236,s5_237,s6_240,s7_241,sp_232,t1_253
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 fa4:<invalid> fa5:<invalid> fa3:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017D54:
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017D10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s4:s4 s3:s3 s2:s2 s5:s5 ra:ra s1:s1 s6:s6 s7:s7 a5:<invalid> a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017F04(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, ptr64 & a0Out, ptr64 & s5Out, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0 s5 s6 sp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 sp t1 t3
// Preserved:
fn0000000000017F04_entry:
// DataOut: a0 a1 a2 a3 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0058(64)

l0000000000017F04:
	fn00000000000182B4(a0)
	word64 sp_2 = fp + -80
	branch a1 == 32 l0000000000018048
// DataOut: a0 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018048:
	__asprintf_chk(fp + -80, a1, 0x0000000000012B88, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F60:
	word64 a1_85 = 24
	branch a1 == a1_85 l0000000000018070
// DataOut: a1 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018070:
	__asprintf_chk(fp + -80, a1, 0x0000000000012BA8, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F68:
	word64 a0_86 = 16
	branch a1 == a0_86 l00000000000180D8
// DataOut: a0 a1 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l00000000000180D8:
	__asprintf_chk(fp + -80, a1, 0x0000000000012BC0, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F70:
	word64 a5_87 = 8
	branch a1 == a5_87 l00000000000180F8
// DataOut: a0 a1 a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l00000000000180F8:
	__asprintf_chk(fp + -80, a1, 0x0000000000012BD8, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F78:
	branch a1_85 <u a1 l0000000000017FBC
// DataOut: a0 a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000017FBC:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	__asprintf_chk(fp + -80, a1, 0x0000000000012BF0, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F7C:
	branch a0_86 <u a1 l0000000000018094
// DataOut: a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018094:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	__asprintf_chk(fp + -80, a1, 0x0000000000012C10, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F80:
	branch a5_87 <u a1 l0000000000018008
// DataOut: gp s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018008:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	__asprintf_chk(fp + -80, a1, 0x0000000000012C30, tLoc50)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017FF8:
	sp_2 = fp + 0xFFFFFFFFFFFFFFA8
	branch fp == -79 l0000000000017F84
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFA8 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000018000:
	word64 a0_84
	*a0Out = qwLoc58
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFA8 a5:-1 s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F84:
	word64 a0_71
	*a0Out = 0
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F88:
	branch Mem0[sp_2 + 8:word64] != Mem0[gp + -1936:word64] l0000000000018114
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018114:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F94:
	word64 s5_55
	*s5Out = Mem0[sp_2 + 24:word64]
	word64 s6_56
	*s6Out = Mem0[sp_2 + 16:word64]
	return sp_2 + 80
// DataOut: a0 gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017F04_exit:
// DataOut: a0 s5 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:<invalid> s4:<invalid> a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000018118(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a4 a5 t4 t5
// Preserved: ra s0 sp
fn0000000000018118_entry:
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000018118:
	word64 a0_14
	word64 sp_16 = fp + -288
	branch (a1 & 3) != 0x0000000000000000 l00000000000182A8
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9 sp t4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000182A8:
	a0_14 = 0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018134:
	word64 t5_25 = (int64) (word32) (a1 >>u 3)
	branch (a1 & 7) == 4 l0000000000018264
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000018264:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018144:
	branch t5_25 == 0x0000000000000000 l00000000000181FC
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181FC:
	word64 t4_76 = fp + -280 + (((a1 & 3) << 0x00000000) >>u 0x00000000)
	Mem79[t4_76 + 4:word16] = 0x7261
	Mem82[t4_76:word16] = 0x7069
	Mem85[t4_76 + 6:word16] = 0x6170
	Mem88[t4_76 + 2:word16] = 0x2E36
	Mem89[t4_76 + 8:word16] = 0x002E
	__strdup(fp + -280)
	a0_14 = fp + -280
	sp_16 = fp + 0xFFFFFFFFFFFFFED8
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018248:
	branch Mem0[sp_16 + 264:word64] != Mem0[gp + -1936:word64] l00000000000182B0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l00000000000182B0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018254:
	return a0_14
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000018118_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> ra:ra s0:s0 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018148:
	word64 a1_26 = (int64) ((word32) t5_25 + -1)
	word64 a4_27 = a1 & 3
	word64 t1_28 = 9
	word64 a7_29 = 46
	word64 t3_30 = -1
// DataOut: a0 a1 a4 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000018190:
	word64 a5_39 = (int64) Mem0[a0 + ((a1_26 << 0x00000000) >>u 0x00000000):byte]
	word64 a3_40 = (int64) ((word32) a4_27 + 1)
	word64 a6_42 = (a5_39 & 15) + 87
	branch t1_28 <u (a5_39 & 15) l00000000000181B4
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181B0:
	a6_42 = (a5_39 & 15) + 48
// DataOut: a0 a1 a3 a4 a5 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181B4:
	Mem50[fp + -16 + ((a4_27 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a6_42
	Mem53[fp + -16 + ((a3_40 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a7_29
	word64 a2_54 = (int64) ((word32) a4_27 + 2)
	word64 a3_55 = (int64) ((word32) a4_27 + 3)
	word64 a6_56 = (a5_39 >>u 0x00000004) + 48
	branch t1_28 >=u a5_39 >>u 0x00000004 l0000000000018160
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181EC:
	a6_56 = (a5_39 >>u 0x00000004) + 87
// DataOut: a0 a1 a2 a3 a4 a6 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000018160:
	Mem64[fp + -16 + ((a2_54 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a6_56
	Mem66[fp + -16 + ((a3_55 << 0x00000000) >>u 0x00000000) + 3832:byte] = (byte) a7_29
	a1_26 = (int64) ((word32) a1_26 + -1)
	a4_27 = (int64) ((word32) a4_27 + 4)
	branch a1_26 == t3_30 l00000000000181F4
// DataOut: a0 a1 a4 a7 t1 t3 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000181F4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:fp + -16 t4:a1 & 3 a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000182B4(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
fn00000000000182B4_entry:
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000182B4:
	return (int64) (word32) (a0 >>u 24) | (int64) ((word32) (a0 << 0x0000000000000018)) | (int64) ((word32) ((a0 & 0x0000000000FF0000) >> 0x00000008)) | (int64) ((word32) ((a0 & 65280) << 0x0000000000000008))
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000182B4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid>



void fn00000000000182E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: a0 a1 a2 ra s0 s1 s2 s3 s4 s5 sp
fn00000000000182E8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000182E8:
	word64 s0_43 = 0x0000000000019E18
	branch 0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 == 0x0000000000000000 l0000000000018354
// DataOut: s0 s2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018324:
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:0000000000019E18 s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018334:
	word64 a5_49 = Mem0[s0_43:word64]
	word64 sp_54
	word64 s0_55
	word64 s2_56
	word64 ra_57
	word64 s1_58
	word64 s3_59
	word64 s4_60
	word64 s5_61
	word64 a0_62
	word64 a1_63
	word64 a2_64
	word64 a5_65
	call a5_49 (retsize: 0; depth: 64)
		uses: a0_52,a1_51,a2_50,a5_49,qwLoc08_13,qwLoc10_4,qwLoc18_15,qwLoc20_6,qwLoc28_17,qwLoc30_19,qwLoc38_21,ra,s0_43,s1_53,s2_22,s3_45,s4_46,s5_47,sp_2
		defs: a0_62,a1_63,a2_64,a5_65,ra_57,s0_55,s1_58,s2_56,s3_59,s4_60,s5_61,sp_54
	s0_43 = s0_55 + 8
	branch s2_56 != s1_58 l0000000000018334
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018354:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000182E8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s2:s2 ra:ra s1:s1 s3:s3 s4:s4 s5:s5 a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000018378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000000000018378_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018378:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000018378_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



