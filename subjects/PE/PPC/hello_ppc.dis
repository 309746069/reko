word32 fn00400220(word32 r0, word32 r2, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, word32 dwArg18, word32 dwArg1C, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// LiveOut: r2 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00400220_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00400220:
	word32 r29_46
	word32 r30_47
	word32 r31_48
	word32 r2_49 = fn00400268(r0, r2, Mem0[r2 + 68:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, cr0, lr, dwLoc38, dwLoc28, dwLoc24, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc10, dwLoc0C, out r29_46, out r30_47, out r31_48)
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00400254:
	word32 r3_53
	*r3Out = 0
	return r2_49
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r5:0 r31:<invalid> r30:<invalid> r29:<invalid> cr1:<invalid> r23:<invalid> r22:<invalid> r6:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r11:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> ctr:<invalid> r9:<invalid> r8:<invalid> -64(fp):fp -8(fp):0 8(fp):lr 24(fp):r3 28(fp):r4

fn00400220_exit:
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r4:<invalid> r3:0 r0:<invalid> r5:0 lr:lr r31:<invalid> r30:<invalid> r29:<invalid> cr1:<invalid> r23:<invalid> r22:<invalid> r6:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r11:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> ctr:<invalid> r9:<invalid> r8:<invalid> -64(fp):fp -8(fp):0 8(fp):lr 24(fp):r3 28(fp):r4



word32 fn00400268(word32 r0, word32 r2, word32 r3, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// LiveOut: r2 r29 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00400268_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) v11(32)

l00400268:
	Mem21[v11:word32] = r29
	Mem25[v11 + 4:word32] = r30
	Mem28[v11 + 8:word32] = r31
	word32 r31_33 = Mem28[r2 + 72:word32]
	word32 r3_45
	word32 r25_46
	word32 r26_47
	word32 r27_48
	word32 r28_49
	word32 r29_50
	word32 r31_51
	word32 r2_52 = fn004002F8(r0, r2, r31_33 + 32, r25, r26, r27, r28, r29, r30, r31_33 + 32, cr0, lr, dwLoc40, out r3_45, out r25_46, out r26_47, out r27_48, out r28_49, out r29_50, out r31_51)
	word32 r2_72
	word32 r25_73
	word32 r26_74
	word32 r27_75
	word32 r28_76
	word32 r29_77
	word32 r30_78
	word32 r31_79
	fn004004B4(r2_52, r31_51, r3, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25_46, r26_47, r27_48, r28_49, r29_50, r3_45, r31_51, cr0, lr, dwLoc40, dwLoc28, out r2_72, out r25_73, out r26_74, out r27_75, out r28_76, out r29_77, out r30_78, out r31_79)
	word32 r29_93
	*r29Out = dwLoc10
	word32 r30_96
	*r30Out = dwLoc0C
	word32 r31_99
	*r31Out = dwLoc08
	word32 r29_85
	return fn00400430(r2_72, r30_78, r31_79, 0x00000000, r30_78, cr0, dwLoc40, out r29_85)
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00400268_exit:
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r31:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r30:<invalid> r5:<invalid> r29:<invalid> lr:lr cr1:<invalid> r23:<invalid> r22:<invalid> r6:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r11:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> ctr:<invalid> r9:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr 24(fp):r3 28(fp):r4 32(fp):r5 36(fp):r6 40(fp):r7 44(fp):r8 48(fp):r9 52(fp):r10



word32 fn004002F8(word32 r0, word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn004002F8_entry:
	*r25Out = r25
	*r26Out = r26
	*r27Out = r27
	*r28Out = r28
	*r29Out = r29
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) v3(32)

l004002F8:
	Mem5[v3:word32] = r30
	Mem9[v3 + 4:word32] = r31
	word32 r31_12 = r3
	branch Test(NE,cond(fn00401474(r2, Mem9[r3 + 16:word32]))) l00400338
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l00400338:
	word32 r10_143
	word32 r11_66 = Mem9[r2 + 72:word32]
	branch Test(NE,cond(r3 - (r11_66 + 32))) l00400350
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r4:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l00400350:
	branch Test(NE,cond(r3 - (r11_66 + 64))) l00400418
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l00400418:
	word32 r3_151
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr

l0040035C:
	r10_143 = 1
// DataOut: cr0 lr r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l00400348:
	r10_143 = 0
// DataOut: cr0 lr r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l00400360:
	word32 r4_72 = Mem9[r2 + 76:word32]
	Mem75[r4_72:word32] = Mem9[r4_72:word32] + 1
	branch Test(EQ,cr0) l00400394
// DataOut: cr0 lr r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l00400394:
	word32 r30_85 = Mem75[r2 + 80:word32]
	word32 r10_86 = r10_143 << 0x02
	word32 r11_131 = Mem75[r30_85 + r10_86:word32]
	word32 r30_88 = r10_86 + r30_85
	branch Test(NE,cond(r11_131)) l004003E0
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0040(32)

l004003AC:
	word32 r3_121
	word32 r25_122
	word32 r26_123
	word32 r27_124
	word32 r28_125
	word32 r29_126
	word32 r30_127
	fn00400F9C(r0, r2, 4096, r25, r26, r27, r28, r29, r30_88, r3, cr0, lr, dwLoc38, out r2, out r3_121, out r25_122, out r26_123, out r27_124, out r28_125, out r29_126, out r30_127, out r31_12)
	Mem133[r30_127:word32] = r3_121
	r11_131 = r3_121
	branch Test(NE,cond(r3_121)) l004003E0
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r30:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32)

l004003E0:
	Mem104[r31_12 + 12:word32] = Mem75[r31_12 + 12:word32] | 0x00001102
	Mem105[r31_12 + 8:word32] = r11_131
	Mem107[r31_12 + 24:word32] = 4096
	Mem108[r31_12 + 4:word32] = 4096
	Mem109[r31_12:word32] = r11_131
	word32 r3_117
	*r3Out = 1
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r12:<invalid> r3:<invalid> r0:<invalid> cr1:<invalid> r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r30:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr

l004003C8:
	word32 r3_142
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r12:<invalid> r3:<invalid> r0:<invalid> cr1:<invalid> r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r30:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr

l0040037C:
	word32 r3_84
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> -64(fp):fp 8(fp):lr

l00400320:
	word32 r3_54
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r12:lr r3:<invalid> r0:r0 cr1:<invalid> r4:<invalid> r5:<invalid> -64(fp):fp 8(fp):lr

fn004002F8_exit:
// DataOut: r2 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r12:lr r3:<invalid> r0:<invalid> cr1:<invalid> lr:lr r11:<invalid> r4:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r30:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr



word32 fn00400430(word32 r2, word32 r3, word32 r4, word32 r29, word32 r30, byte cr0, word32 dwArg08, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30 r4
// LiveOut: r2 r29
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r31
fn00400430_entry:
	*r29Out = r29
// DataOut: cr0 r2 r27 r28 r29 r3 r30 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00400430:
	branch Test(EQ,cond(r3)) l00400488
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0040(32)

l00400488:
	branch Test(EQ,cr0) l004004A0
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:cond(r3) r12:lr r31:r4 -64(fp):fp -8(fp):r31 8(fp):lr
// LocalsOut: Local -0040(32)

l00400494:
	word32 r3_58
	word32 r29_59
	word32 r30_60
	word32 r31_61
	r2 = fn004012B0(r2, r4, r29, r30, r4, cr0, dwLoc38, out r3_58, out r29_59, out r30_60, out r31_61)
// DataOut: cr0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:cond(r3) r12:lr r31:r4 r4:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l0040044C:
	branch Test(EQ,cr0) l004004A0
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:cond(r3) r12:lr r31:r4 -64(fp):fp -8(fp):r31 8(fp):lr
// LocalsOut: Local -0040(32)

l00400458:
	word32 r3_40
	word32 r29_41
	word32 r30_42
	word32 r31_43
	r2 = fn004012B0(r2, r4, r29, r30, r4, cr0, dwLoc38, out r3_40, out r29_41, out r30_42, out r31_43)
	word32 r4_46 = Mem0[r31_43 + 12:word32]
	Mem48[r31_43 + 24:word32] = 0
	Mem49[r31_43:word32] = 0
	Mem50[r31_43 + 8:word32] = 0
	Mem53[r31_43 + 12:word32] = r4_46 & -4353
// DataOut: cr0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:cond(r3) r12:lr r31:r4 r4:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l004004A0:
	return r2
// DataOut: cr0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r31:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r5:0 r6:<invalid> r11:<invalid> r29:<invalid> r30:<invalid> r10:<invalid> r7:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

fn00400430_exit:
// DataOut: r2 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r12:lr r31:r31 r4:<invalid> r3:<invalid> r0:<invalid> r5:0 r6:<invalid> lr:lr r11:<invalid> r29:<invalid> r30:<invalid> r10:<invalid> r7:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



word32 fn004004B4(word32 r2, word32 r3, word32 r4, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, word32 dwArg20, ptr32 & r2Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r0 r2 r25 r26 r27 r28 r29 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004004B4_entry:
	*r2Out = r2
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) v3(32)

l004004B4:
	Mem5[v3:word32] = r13
	Mem9[v3 + 4:word32] = r14
	Mem12[v3 + 8:word32] = r15
	Mem15[v3 + 12:word32] = r16
	Mem18[v3 + 16:word32] = r17
	Mem21[v3 + 20:word32] = r18
	Mem24[v3 + 24:word32] = r19
	Mem27[v3 + 28:word32] = r20
	Mem30[v3 + 32:word32] = r21
	Mem33[v3 + 36:word32] = r22
	Mem36[v3 + 40:word32] = r23
	Mem39[v3 + 44:word32] = r24
	Mem42[v3 + 48:word32] = r25
	Mem45[v3 + 52:word32] = r26
	Mem48[v3 + 56:word32] = r27
	Mem51[v3 + 60:word32] = r28
	Mem54[v3 + 64:word32] = r29
	Mem57[v3 + 68:word32] = r30
	Mem60[v3 + 72:word32] = r31
	word32 r31_190 = (int32) (int8) Mem60[r4:byte]
	word32 r23_183 = r4 + 1
	word32 dwLoc0284_174 = 0
	branch Test(EQ,cr0) l00400DEC
// DataOut: cr0 lr r0 r2 r22 r23 r25 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l004004F0:
	word32 r26_167 = fp + -640
	word32 r14_169 = Mem60[r2 + 84:word32]
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:1 r4:0 r31:<invalid> r12:lr r22:r3 r6:0 -704(fp):fp -648(fp):0 -644(fp):0 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400508:
	branch Test(LE,cond(1)) l00400DEC
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400514:
	word32 r10_194
	branch Test(LE,cond(r31_190 - 31)) l00400544
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:0 r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:cond(1) r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l0040051C:
	branch Test(GE,cond(r31_190 - 121)) l00400544
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:0 r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400544:
	r10_194 = 0
// DataOut: cr0 lr r0 r10 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:0 r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400524:
	r10_194 = (int32) (int8) Mem60[r14_169 + -28 + r31_190:byte] & 0x0000000F
// DataOut: cr0 lr r0 r10 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:0 r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400548:
	word32 r4_205 = (int32) (int8) ((int32) (int8) Mem60[r14_169 + 4 + ((r10_194 << 0x03) + dwLoc0284_174):byte] >> 0x00000004)
	dwLoc0284_174 = r4_205
	branch Test(GE,cond(r4_205 - 0x00000008)) l00400DDC
// DataOut: cr0 lr r0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400578:
	r0 = fn004005A0(r4_205 << 0x02, lr, out lr)
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l004005B0:
	branch Test(EQ,cr0) l004005EC
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l004005C8:
	r2 = fn00400E04(r0, r2, r31_190, r3, fp + -648, r25, r26_167, r27, r28, r29, r30, cr0, lr, dwLoc02B8, out r25, out r26_167, out r27, out r28, out r29, out r30)
	r23_183 = r23_183 + 1
	r31_190 = (int32) (int8) Mem60[r23_183:byte]
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l004005EC:
	*r2Out = fn00400E04(r0, r2, r31_190, r3, fp + -648, r25, r26_167, r27, r28, r29, r30, cr0, lr, dwLoc02B8, out r25, out r26_167, out r27, out r28, out r29, out r30)
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400DDC:
	r23_183 = r23_183 + 1
	r31_190 = (int32) (int8) Mem60[r23_183:byte]
	branch Test(NE,cr0) l00400508
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0284(32) Local -02C0(32)

l00400DEC:
	word32 r25_138
	*r25Out = dwLoc20
	word32 r26_141
	*r26Out = dwLoc1C
	word32 r27_144
	*r27Out = dwLoc18
	word32 r28_147
	*r28Out = dwLoc14
	word32 r29_150
	*r29Out = dwLoc10
	word32 r30_153
	*r30Out = dwLoc0C
	word32 r31_156
	*r31Out = dwLoc08
	return r0
// DataOut: cr0 r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -704 r23:<invalid> r4:<invalid> r31:<invalid> r12:<invalid> r22:r3 r6:<invalid> r26:<invalid> r21:fp + -128 r14:<invalid> r16:<invalid> r13:<invalid> r17:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> lr:<invalid> r3:<invalid> r7:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r25:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5

fn004004B4_exit:
// DataOut: r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r23:<invalid> r4:<invalid> r31:<invalid> r12:lr r22:<invalid> r6:<invalid> r3:0 lr:lr r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r29:<invalid> r30:<invalid> cr1:<invalid> r10:<invalid> r5:<invalid> r11:<invalid> r0:<invalid> r7:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -704(fp):fp -648(fp):0 -644(fp):<invalid> -88(fp):fp + -648 8(fp):lr 32(fp):r5



word32 fn004005A0(word32 r11, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r11
// LiveOut: lr r0
// Trashed: lr r0
// Preserved: r1
fn004005A0_entry:
// DataOut: cr0 lr r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004005A0:
	word32 r0_5 = lr + r11
	word32 lr_6
	*lrOut = r0_5
	return r0_5
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004005A0_exit:
// DataOut: lr r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r0:lr + r11 lr:lr + r11



void fn00400680(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r11
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00400680_entry:
// DataOut: lr r11
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00400680:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00400680_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r0:lr + r11 lr:lr + r11



void fn00400838(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r11
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00400838_entry:
// DataOut: lr r11
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00400838:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00400838_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r0:lr + r11 lr:lr + r11



word32 fn00400E04(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, byte cr0, word32 lr, word32 dwArg08, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r4 r5
// LiveOut: r2 r25 r26 r27 r28 r29 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r31
fn00400E04_entry:
	*r25Out = r25
	*r26Out = r26
	*r27Out = r27
	*r28Out = r28
	*r29Out = r29
	*r30Out = r30
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00400E04:
	word32 r11_30
	word32 r5_10 = Mem0[r4 + 4:word32]
	Mem16[r4 + 4:word32] = r5_10 + -1
	word32 r31_31 = r5
	branch Test(LE,cond(r5_10)) l00400E5C
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0040(32)

l00400E5C:
	word32 r3_75
	word32 r25_76
	word32 r26_77
	word32 r27_78
	word32 r28_79
	word32 r29_80
	word32 r30_81
	r2 = fn00401598(r0, r2, r3, r4, r25, r26, r27, r28, r29, r30, r5, cr0, lr, dwLoc38, out r3_75, out r25_76, out r26_77, out r27_78, out r28_79, out r29_80, out r30_81, out r31_31)
	r11_30 = r3_75
// DataOut: cr0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r5 r5:<invalid> r12:lr cr1:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00400E2C:
	Mem53[Mem16[r4:word32]:byte] = (int32) (int8) r3
	word32 r6_54 = Mem53[r4:word32]
	word32 r7_55 = Mem53[r6_54:byte]
	Mem57[r4:word32] = r6_54 + 1
	r11_30 = (int32) (int16) ((int32) (int8) r7_55 & 0x000000FF)
// DataOut: cr0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r5 r5:<invalid> r12:lr cr1:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00400E68:
	branch Test(NE,cond(r11_30 - -1)) l00400E7C
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r5:<invalid> r12:<invalid> cr1:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> r10:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00400E7C:
	Mem48[r31_31:word32] = Mem16[r31_31:word32] + 1
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r5:<invalid> r12:<invalid> cr1:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> r10:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00400E70:
	Mem45[r31_31:word32] = -1
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r5:<invalid> r12:<invalid> cr1:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> r10:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00400E88:
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r5:<invalid> r12:<invalid> cr1:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> r4:<invalid> r10:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

fn00400E04_exit:
// DataOut: r2 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:r31 r5:<invalid> r12:lr cr1:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r0:<invalid> r4:<invalid> lr:lr r10:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



void fn00400E9C(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r3
fn00400E9C_entry:
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) v3(32)

l00400E9C:
	Mem5[v3:word32] = r28
	Mem9[v3 + 4:word32] = r29
	Mem12[v3 + 8:word32] = r30
	Mem15[v3 + 12:word32] = r31
	word32 r28_24 = r3
	word32 r29_26 = r5
	word32 r30_28 = r6
	word32 r31_30 = r4 + -1
	branch Test(LE,cond(r4)) l00400EEC
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0048(32)

l00400ECC:
	r2 = fn00400E04(r0, r2, r28_24, r29_26, r30_28, r25, r26, r27, r28_24, r29_26, r30_28, cr0, lr, dwLoc40, out r25, out r26, out r27, out r28_24, out r29_26, out r30_28)
	r31_30 = r31_83 + -1
	word32 r31_83 = r31_30
	branch Test(GT,cond(r31_83)) l00400ECC
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r28:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> r27:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(32)

l00400EEC:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r28:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> r27:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -72(fp):fp 8(fp):lr

fn00400E9C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r4:<invalid> cr1:<invalid> r12:lr r28:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> lr:lr r6:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> r27:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -72(fp):fp 8(fp):lr



void fn00400F00(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00400F00_entry:
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) v3(32)

l00400F00:
	Mem5[v3:word32] = r28
	Mem9[v3 + 4:word32] = r29
	Mem12[v3 + 8:word32] = r30
	Mem15[v3 + 12:word32] = r31
	word32 r30_24 = r3
	word32 r28_26 = r5
	word32 r29_28 = r6
	word32 r31_30 = r4 + -1
	branch Test(LE,cond(r4)) l00400F60
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0048(32)

l00400F30:
	r2 = fn00400E04(r0, r2, (int32) (int8) Mem15[r30_24:byte], r28_26, r29_28, r25, r26, r27, r28_26, r29_28, r30_24 + 1, cr0, lr, dwLoc40, out r25, out r26, out r27, out r28_26, out r29_28, out r30_24)
	r31_30 = r31_88 + -1
	word32 r31_88 = r31_30
	branch Test(GT,cond(r31_88)) l00400F30
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r5:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> r27:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(32)

l00400F60:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r5:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> r27:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -72(fp):fp 8(fp):lr

fn00400F00_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r4:<invalid> cr1:<invalid> r12:lr r30:<invalid> r28:<invalid> r29:<invalid> r5:<invalid> r3:<invalid> lr:lr r6:<invalid> r7:<invalid> r11:<invalid> r10:<invalid> r27:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -72(fp):fp 8(fp):lr



void fn00400F74(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn00400F74_entry:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00400F74:
	Mem6[r3:word32] = Mem0[r3:word32] + 4
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00400F74_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r3:<invalid>



void fn00400F88(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn00400F88_entry:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00400F88:
	Mem6[r3:word32] = Mem0[r3:word32] + 4
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00400F88_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r3:<invalid>



word32 fn00400F9C(word32 r0, word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31
// LiveOut: r0 r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00400F9C_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00400F9C:
	word32 r3_22
	word32 r25_23
	word32 r26_24
	word32 r27_25
	word32 r28_26
	word32 r29_27
	word32 r30_28
	word32 r31_29
	word32 r2_30
	*r2Out = fn00400FC4(r0, r2, r3, Mem0[Mem0[r2 + 100:word32]:word32], r25, r26, r27, r28, r29, r30, r31, cr0, lr, dwLoc30, out r3_22, out r25_23, out r26_24, out r27_25, out r28_26, out r29_27, out r30_28, out r31_29)
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00400F9C_exit:
// DataOut: r0 r2 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r12:lr lr:lr r31:<invalid> r30:<invalid> cr1:<invalid> r3:<invalid> r11:<invalid> r2:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> r0:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -56(fp):fp 8(fp):lr



word32 fn00400FC4(word32 r0, word32 r2, word32 r3, word32 r4, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00400FC4_entry:
	*r25Out = r25
	*r26Out = r26
	*r27Out = r27
	*r28Out = r28
	*r29Out = r29
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) v3(32)

l00400FC4:
	Mem5[v3:word32] = r30
	Mem9[v3 + 4:word32] = r31
	word32 r30_14 = r4
	branch Test(LE,cond(r3 - -32)) l00400FF8
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l00400FF8:
	word32 r31_61 = r3 + 7 & -8
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r30:r4 r4:-32 cr1:cond(r3 - -32) r12:lr -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l00401004:
	word32 r3_74
	word32 r2_82 = fn0040105C(r0, r2, r31_61, r25, r26, r27, r28, r29, r30_14, r31_61, cr0, lr, dwLoc38, out r3_74, out r25, out r26, out r27, out r28, out r29, out r30_14, out r31_61)
	branch Test(NE,cond(r3_74)) l00401048
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r30:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00401014:
	branch Test(EQ,cond(r30_14)) l00401048
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r30:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00401048:
	return r2_82
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r30:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp 8(fp):lr

l0040101C:
	word32 r3_96
	r0 = fn004017F0(r2_82, r31_61, dwLoc38, out r2, out r3_96)
	branch Test(NE,cond(r3_96)) l00401004
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r30:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l00401030:
	word32 r3_108
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r30:<invalid> r4:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp 8(fp):lr

l00400FE8:
	word32 r3_51
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r30:r4 r4:-32 cr1:cond(r3 - -32) r12:lr -64(fp):fp 8(fp):lr

fn00400FC4_exit:
// DataOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r30:<invalid> r4:<invalid> cr1:<invalid> r12:lr r3:<invalid> lr:lr r11:<invalid> r2:<invalid> r0:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp 8(fp):lr



word32 fn0040105C(word32 r0, word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn0040105C_entry:
	*r25Out = r25
	*r26Out = r26
	*r27Out = r27
	*r28Out = r28
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) v5(32)

l0040105C:
	Mem8[v5:word32] = r29
	Mem12[v5 + 4:word32] = r30
	Mem15[v5 + 8:word32] = r31
	word32 r3_21 = fn00401F40(r2, r3)
	word32 r30_120 = r3
	word32 r31_103 = r3_21
	branch Test(NE,cond(r3_21)) l004010D8
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(32)

l00401088:
	word32 r3_114
	word32 r25_115
	word32 r26_116
	word32 r27_117
	word32 r28_118
	word32 r29_119
	fn00401ADC(r2, r3, r25, r26, r27, r28, r29, r3, r3_21, cr0, lr, dwLoc40, out r2, out r3_114, out r25_115, out r26_116, out r27_117, out r28_118, out r29_119, out r30_120)
	branch Test(EQ,cond(r3_114 - -1)) l004010C0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:r3 r3:<invalid> r0:r0 r31:<invalid> cr1:<invalid> r7:<invalid> r5:<invalid> r6:<invalid> r4:<invalid> r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(32)

l004010C0:
	word32 r3_141
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r7:<invalid> r6:<invalid> r8:<invalid> r2:<invalid> r10:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr

l0040109C:
	word32 r3_125 = fn00401F40(r2, r30_120)
	r31_103 = r3_125
	branch Test(NE,cond(r3_125)) l004010D8
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r7:<invalid> r6:<invalid> r8:<invalid> r2:<invalid> r10:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(32)

l004010B4:
	word32 r29_129
	r2 = fn00401AB4(r2, r29_119, r30_120, cr0, dwLoc40, out r29_129, out r30_120)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r7:<invalid> r6:<invalid> r8:<invalid> r2:<invalid> r10:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(0)

l004010D8:
	word32 r29_102 = -4
	branch Test(EQ,cond((Mem15[Mem15[r31_103:word32] + 4:word32] & -4) - (Mem15[r31_103 + 4:word32] & -4) - r30_120 - 0x00000008)) l00401128
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r11:<invalid> r2:<invalid> r25:<invalid> r28:<invalid> r4:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r7:<invalid> r6:<invalid> r8:<invalid> ctr:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(0)

l00401100:
	word32 r3_101
	r2 = fn0040115C(r2, r31_103, r30_120, -4, r30_120, r31_103, dwLoc40, out r3_101, out r29_102, out r31_103)
	branch Test(EQ,cond(r3_101)) l00401128
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r4:<invalid> r5:<invalid> r29:-4 r11:<invalid> r2:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r6:<invalid> r8:<invalid> ctr:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00401114:
	Mem110[r3_101 + 4:word32] = Mem15[r3_101 + 4:word32] & -3 | 0x00000001
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r4:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> r11:<invalid> r2:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> ctr:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00401128:
	word32 r5_80 = Mem15[r31_103:word32]
	word32 r6_81 = Mem15[r2 + 104:word32]
	word32 r4_82 = Mem15[r31_103 + 4:word32] & r29_102
	Mem83[r31_103 + 4:word32] = r4_82
	Mem84[r6_81 + 4:word32] = r5_80
	word32 r3_86
	*r3Out = (r4_82 & r29_102) + 8
	word32 r29_89
	*r29Out = dwLoc10
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> r4:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> r11:<invalid> r2:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> ctr:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr

fn0040105C_exit:
// DataOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r30:<invalid> r3:<invalid> r0:<invalid> r31:<invalid> cr1:<invalid> lr:lr r4:<invalid> r5:<invalid> r29:<invalid> r6:<invalid> r25:<invalid> r28:<invalid> r11:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr



word32 fn0040115C(word32 r2, word32 r3, word32 r4, word32 r29, word32 r30, word32 r31, word32 dwArg08, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r29 r3 r30 r31 r4
// LiveOut: r2 r29 r3 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6
// Preserved: lr r0 r1
fn0040115C_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) v3(32)

l0040115C:
	Mem5[v3:word32] = r29
	Mem9[v3 + 4:word32] = r30
	Mem12[v3 + 8:word32] = r31
	branch Test(LE,cond((Mem12[Mem12[r3:word32] + 4:word32] & -4) - (Mem12[r3 + 4:word32] & -4) + -8 - r4)) l004011E4
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0048(32)

l0040119C:
	word32 r3_68
	fn004019CC(r2, dwLoc40, out r2, out r3_68)
	branch Test(EQ,cond(r3_68)) l004011E4
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:r3 r29:r4 r4:<invalid> r5:<invalid> r30:-4 cr1:<invalid> r12:lr -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l004011E4:
	word32 r3_64
	*r3Out = 0
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:r3 r29:r4 r4:<invalid> r5:<invalid> r30:-4 cr1:<invalid> r12:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr

l004011AC:
	word32 r29_75 = (Mem12[r3 + 4:word32] & -4) + r4
	Mem77[r3_68 + 4:word32] = r29_75 + 8
	Mem78[r29_75 + 8:word32] = r3_68
	Mem81[r3_68:word32] = Mem78[r3:word32]
	Mem82[r3:word32] = r3_68
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:r3 r29:r4 r4:<invalid> r5:<invalid> r30:-4 cr1:<invalid> r12:<invalid> r0:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr

fn0040115C_exit:
// DataOut: r2 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r29:<invalid> r4:<invalid> r5:<invalid> r30:<invalid> cr1:<invalid> r12:lr r0:<invalid> lr:lr r3:<invalid> r6:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr



word32 fn004011FC(word32 r2, word32 r3, word32 r27, word32 r28, word32 r29, word32 r30, byte cr0, word32 dwArg08, ptr32 & r3Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r27 r28 r29 r3 r30
// LiveOut: r2 r27 r28 r29 r3 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r31
fn004011FC_entry:
	*r27Out = r27
	*r28Out = r28
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l004011FC:
	branch Test(NE,cond(r3)) l00401234
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0040(0)

l00401234:
	word32 r3_53
	word32 r29_54
	word32 r30_55
	word32 r31_56
	word32 r2_57 = fn004012B0(r2, r3, r29, r30, r3, cr0, dwLoc38, out r3_53, out r29_54, out r30_55, out r31_56)
	branch Test(EQ,cond(r3_53)) l0040125C
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 cr1:cond(r3) r12:lr -64(fp):fp -8(fp):r31 8(fp):lr
// LocalsOut: Local -0040(32)

l0040125C:
	branch Test(EQ,cr0) l00401298
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r4:<invalid> r29:<invalid> r5:0 r30:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr
// LocalsOut: Local -0040(32)

l00401298:
	word32 r3_87
	*r3Out = 0
	return r2_57
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r29:<invalid> r5:0 r30:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00401268:
	word32 r2_69
	word32 r3_70
	word32 r29_71
	word32 r30_72
	fn004020BC(r2_57, Mem0[r31_56 + 16:word32], r29_54, r30_55, r31_56, cr0, dwLoc38, out r2_69, out r3_70, out r29_71, out r30_72)
	word32 r3_76
	*r3Out = -1
	branch Test(NE,cond(r3_70)) l00401284
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r4:<invalid> r11:<invalid> r29:<invalid> r5:0 r30:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00401280:
	word32 r3_82
	*r3Out = 0
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> cr1:<invalid> r12:<invalid> r3:-1 r4:<invalid> r29:<invalid> r5:<invalid> r11:<invalid> r30:<invalid> r6:9 r7:0 r0:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00401284:
	return r2_69
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r4:<invalid> r29:<invalid> r5:<invalid> r11:<invalid> r30:<invalid> r6:9 r7:0 r0:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00401244:
	word32 r3_63
	*r3Out = -1
	return r2_57
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r11:<invalid> r4:<invalid> r29:<invalid> r5:0 r30:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00401218:
	word32 r3_39
	word32 r27_40
	word32 r28_41
	word32 r29_42
	word32 r30_43
	return fn00401380(r2, 0, r27, r28, r29, r30, r3, cr0, dwLoc38, out r3_39, out r27_40, out r28_41, out r29_42, out r30_43)
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 cr1:cond(r3) r12:lr -64(fp):fp -8(fp):r31 8(fp):lr

fn004011FC_exit:
// DataOut: r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:r31 cr1:<invalid> r12:lr r3:<invalid> lr:lr r4:<invalid> r29:<invalid> r5:<invalid> r11:<invalid> r30:<invalid> r6:<invalid> r7:<invalid> r0:<invalid> r27:<invalid> r28:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



word32 fn004012B0(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30 r31
// LiveOut: r2 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn004012B0_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) v3(32)

l004012B0:
	Mem5[v3:word32] = r29
	Mem9[v3 + 4:word32] = r30
	Mem12[v3 + 8:word32] = r31
	word32 r31_15 = r3
	word32 r29_23 = 0
	branch Test(NE,cond((Mem12[r3 + 12:word32] & 0x00000003) - 2)) l00401334
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(32)

l004012D8:
	branch Test(EQ,cr0) l00401334
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:r3 r11:<invalid> r12:lr r4:<invalid> cr1:<invalid> r29:0 -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(32)

l004012E0:
	word32 r4_58 = Mem12[r3 + 8:word32]
	word32 r30_60 = Mem12[r3:word32] - r4_58
	branch Test(LE,cr0) l00401334
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:r3 r11:<invalid> r12:lr r4:<invalid> cr1:<invalid> r29:0 -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0048(32)

l004012F0:
	word32 r3_66
	word32 r30_68
	fn00402248(r2, Mem12[r3 + 16:word32], r4_58, r30_60, 0, r30_60, r3, cr0, dwLoc40, out r2, out r3_66, out r29_23, out r30_68, out r31_15)
	branch Test(NE,cond(r3_66 - r30_68)) l00401324
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:r3 r11:<invalid> r12:lr r4:<invalid> cr1:<invalid> r29:0 r30:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00401324:
	Mem82[r31_15 + 12:word32] = Mem12[r31_15 + 12:word32] | 0x00000020
	r29_23 = -1
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> cr1:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00401308:
	word32 r11_73 = Mem12[r31_15 + 12:word32]
	branch Test(EQ,cr0) l00401334
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> cr1:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00401314:
	Mem78[r31_15 + 12:word32] = r11_73 & -3
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> cr1:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00401334:
	word32 r4_34 = Mem12[r31_15 + 8:word32]
	Mem38[r31_15 + 4:word32] = 0
	Mem39[r31_15:word32] = r4_34
	word32 r3_36
	*r3Out = r29_23
	word32 r29_42
	*r29Out = dwLoc10
	word32 r30_45
	*r30Out = dwLoc0C
	word32 r31_48
	*r31Out = dwLoc08
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> cr1:<invalid> r29:<invalid> r30:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -72(fp):fp 8(fp):lr

fn004012B0_exit:
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r11:<invalid> r12:lr r4:<invalid> cr1:<invalid> r29:<invalid> lr:lr r3:<invalid> r5:0 r30:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r9:<invalid> -72(fp):fp 8(fp):lr



void fn0040135C(word32 r2, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r27 r28 r29 r30 r31
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn0040135C_entry:
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l0040135C:
	word32 r3_16
	word32 r27_17
	word32 r28_18
	word32 r29_19
	word32 r30_20
	fn00401380(r2, 1, r27, r28, r29, r30, r31, cr0, dwLoc30, out r3_16, out r27_17, out r28_18, out r29_19, out r30_20)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040135C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r3:<invalid> lr:lr r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -56(fp):fp 8(fp):lr



word32 fn00401380(word32 r2, word32 r3, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r3Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r27 r28 r29 r3 r30 r31
// LiveOut: r2 r27 r28 r29 r3 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00401380_entry:
// DataOut: cr0 r2 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) v3(32)

l00401380:
	Mem5[v3:word32] = r27
	Mem9[v3 + 4:word32] = r28
	Mem12[v3 + 8:word32] = r29
	Mem15[v3 + 12:word32] = r30
	Mem18[v3 + 16:word32] = r31
	word32 r4_22 = Mem18[r2 + 72:word32]
	word32 r27_100 = Mem18[r2 + 108:word32]
	word32 r31_24 = r4_22
	word32 r30_103 = r3
	word32 r29_102 = 0
	word32 r28_101 = 0
	branch Test(LT,cond(Mem18[r27_100:word32] - r4_22)) l00401418
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013B4:
	branch Test(NE,cond(r30_103 - 1)) l004013E0
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013BC:
	branch Test(EQ,cr0) l004013E0
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013E0:
	branch Test(NE,cond(r30_103)) l00401408
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013E8:
	branch Test(EQ,cr0) l00401408
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013F4:
	word32 r3_99
	r2 = fn004011FC(r2, r31_24, r27_100, r28_101, r29_102, r30_103, cr0, dwLoc48, out r3_99, out r27_100, out r28_101, out r29_102, out r30_103)
	branch Test(NE,cond(r3_99 - -1)) l00401408
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l00401404:
	r28_101 = -1
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013C8:
	word32 r3_111
	r2 = fn004011FC(r2, r31_24, r27_100, r28_101, r29_102, r30_103, cr0, dwLoc48, out r3_111, out r27_100, out r28_101, out r29_102, out r30_103)
	branch Test(EQ,cond(r3_111 - -1)) l00401408
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l004013D8:
	r29_102 = r29_102 + 1
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l00401408:
	r31_24 = r31_24 + 32
	branch Test(GE,cond(Mem18[r27_100:word32] - r31_24)) l004013B4
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(0)

l00401418:
	word32 r3_43
	*r3Out = r29_102
	branch Test(EQ,cond(r30_103 - 1)) l00401428
// DataOut: cr0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00401424:
	word32 r3_69
	*r3Out = r28_101
// DataOut: cr0 r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00401428:
	word32 r27_48
	*r27Out = dwLoc18
	word32 r28_51
	*r28Out = dwLoc14
	word32 r29_54
	*r29Out = dwLoc10
	word32 r30_57
	*r30Out = dwLoc0C
	return r2
// DataOut: cr0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr

fn00401380_exit:
// DataOut: r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r27:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:lr r30:<invalid> r29:<invalid> r28:<invalid> r3:<invalid> lr:lr r11:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r0:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr



word32 fn00401474(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut: r3
// Trashed: crX cr1 r3 r4 r5
// Preserved: r1
fn00401474_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00401474:
	branch Test(GT,cond(Mem0[Mem0[r2 + 116:word32]:word32] - r3)) l00401490
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00401490:
	return (int32) (int8) Mem0[Mem0[r2 + 120:word32] + r3:byte] & 0x00000040
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r5:r3 cr1:<invalid>

l00401488:
	return 0
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r5:r3 cr1:<invalid>

fn00401474_exit:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r5:r3 cr1:<invalid> r3:<invalid>



void fn004014A4(word32 r2, word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3 r4 r5
// LiveOut:
// Trashed: crX cr1 ctr r10 r11 r3 r4 r5
// Preserved: r1
fn004014A4_entry:
// DataOut: r2 r3 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004014A4:
	word32 r3_42 = 0
	branch Test(EQ,cond(r3)) l004014C4
// DataOut: r10 r2 r3 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004014B4:
	branch Test(NE,cond(r5)) l004014C4
// DataOut: r10 r2 r3 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:cond(r3) r3:0

l004014C4:
	branch Test(NE,cond(r3)) l004014F4
// DataOut: r10 r2 r3 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:0

l004014F4:
	branch Test(LE,cond(r5)) l00401550
// DataOut: r10 r2 r3 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:cond(0) r3:0

l004014FC:
	word32 ctr_37 = r5
// DataOut: ctr r10 r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:cond(r5) r3:0

l00401500:
	word32 r11_43 = Mem0[r4:word16]
	branch Test(GE,cond(r11_43 - 0x00000100)) l00401538
// DataOut: ctr r10 r11 r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l00401538:
	Mem59[Mem0[r2 + 124:word32]:word32] = 42
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l0040150C:
	Mem49[r3 + r3_42:byte] = (byte) (int32) (int8) (r11_43 & 0x000000FF)
	r4 = r4 + 2
	branch Test(EQ,cond(Mem49[r4:word16])) l0040154C
// DataOut: ctr r10 r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l0040154C:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l0040152C:
	r3_42 = r3_42 + 1
	ctr_37 = ctr_37 - 0x00000001
	branch ctr_37 != 0x00000000 l00401500
// DataOut: ctr r10 r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l00401534:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l00401550:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> ctr:<invalid> r11:<invalid> r5:<invalid> r4:<invalid>

l004014CC:
	word32 r11_15 = r4
// DataOut: r11 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:cond(0) r3:0

l004014D0:
	r11_15 = r11_63 + 2
	word32 r11_63 = r11_15
	branch Test(NE,cond(Mem0[r11_63:word16])) l004014D0
// DataOut: r11 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:0 r11:<invalid> r5:<invalid>

l004014E4:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:0 r11:<invalid> r5:<invalid>

l004014BC:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:cond(r5) r3:0

fn004014A4_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:r3 cr1:<invalid> r3:<invalid> r11:<invalid> r5:<invalid> r4:<invalid> ctr:<invalid>



void fn00401554(word32 r2, word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3 r4
// LiveOut:
// Trashed: crX cr1 r3 r4 r5
// Preserved: r1
fn00401554_entry:
// DataOut: r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00401554:
	branch Test(NE,cond(r3)) l00401568
// DataOut: r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00401568:
	branch Test(LE,cond((r4 & 0x0000FFFF) - 0x000000FF)) l00401584
// DataOut: r2 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond(r3) r4:r4 & 0x0000FFFF

l00401584:
	Mem25[r3:byte] = (int32) (int8) (r4 & 0x0000FFFF & 0x000000FF)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond((r4 & 0x0000FFFF & 0x0000FFFF) - 0x000000FF) r4:r4 & 0x0000FFFF

l00401570:
	Mem19[Mem0[r2 + 124:word32]:word32] = 42
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond((r4 & 0x0000FFFF & 0x0000FFFF) - 0x000000FF) r4:r4 & 0x0000FFFF

l00401560:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond(r3) r4:r4 & 0x0000FFFF

fn00401554_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r3:<invalid> r5:42



word32 fn00401598(word32 r0, word32 r2, word32 r3, word32 r4, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00401598_entry:
	*r25Out = r25
	*r26Out = r26
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) v3(32)

l00401598:
	Mem5[v3:word32] = r27
	Mem9[v3 + 4:word32] = r28
	Mem12[v3 + 8:word32] = r29
	Mem15[v3 + 12:word32] = r30
	Mem18[v3 + 16:word32] = r31
	word32 r31_137 = r4
	word32 r10_22 = Mem18[r4 + 12:word32]
	word32 r27_118 = r3
	word32 r30_120 = Mem18[r4 + 16:word32]
	branch Test(EQ,cr0) l00401774
// DataOut: cr0 lr r0 r10 r11 r14 r16 r2 r22 r23 r25 r26 r27 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l004015C4:
	branch Test(NE,cr0) l00401774
// DataOut: cr0 lr r0 r10 r11 r14 r16 r2 r22 r23 r25 r26 r27 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401774:
	Mem66[r4 + 12:word32] = r10_22 | 0x00000020
	word32 r3_84
	*r3Out = -1
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> -80(fp):fp 8(fp):lr

l004015CC:
	branch Test(EQ,cr0) l00401620
// DataOut: cr0 lr r0 r10 r14 r16 r2 r22 r23 r25 r26 r27 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401620:
// DataOut: cr0 lr r0 r10 r14 r16 r2 r22 r23 r25 r26 r27 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l004015D4:
	word32 r4_261 = Mem18[r4 + 12:word32]
	Mem266[r4 + 4:word32] = 0
	branch Test(EQ,cr0) l00401608
// DataOut: cr0 lr r0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401608:
	Mem274[r4 + 12:word32] = r4_261 | 0x00000020
	word32 r3_287
	*r3Out = -1
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> r9:0 r5:<invalid> -80(fp):fp 8(fp):lr

l004015EC:
	word32 r10_267 = Mem266[r4 + 12:word32]
	Mem270[r4:word32] = Mem266[r4 + 8:word32]
	Mem272[r4 + 12:word32] = r10_267 & -2
	r10_22 = r10_267 & -2
// DataOut: cr0 lr r0 r10 r14 r16 r2 r22 r23 r25 r26 r27 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> r9:0 r5:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401624:
	word32 r10_102 = r10_22 | 0x00000002
	Mem103[r4 + 12:word32] = r10_102
	Mem106[r4 + 12:word32] = r10_102 & -17
	Mem108[r4 + 4:word32] = 0
	word32 r28_111 = 0
	branch Test(NE,cr0) l00401688
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> r9:0 r5:-2 -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l0040164C:
	word32 r11_240 = Mem108[r2 + 72:word32]
	branch Test(EQ,cond(r4 - (r11_240 + 32))) l00401668
// DataOut: cr0 lr r0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:-17 r27:r3 r30:<invalid> r9:0 r5:-2 r28:0 -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l0040165C:
	branch Test(NE,cond(r4 - (r11_240 + 64))) l0040167C
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> r9:0 r5:-2 r28:0 cr1:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401668:
	branch Test(NE,cond(fn00401474(r2, r30_120))) l00401688
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> r9:0 r5:-2 r28:0 cr1:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l0040167C:
	word32 r25_247
	r2 = fn0040298C(r0, r2, r4, r25, r26, r3, 0, r29, r30_120, cr0, lr, dwLoc48, out r25_247, out r26, out r27_118, out r28_111, out r30_120)
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:r3 r30:<invalid> r9:0 r5:<invalid> r28:0 cr1:<invalid> r3:<invalid> r0:r0 -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401688:
	word32 r29_135
	branch Test(EQ,cr0) l0040170C
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> cr1:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r7:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l0040170C:
	word32 r3_233
	word32 r30_235
	fn00402248(r2, r30_120, fp + -24, 1, 1, r30_120, r4, cr0, dwLoc48, out r2, out r3_233, out r29_135, out r30_235, out r31_137)
	r28_111 = r3_233
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> cr1:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r7:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l00401694:
	word32 r4_175 = Mem108[r4 + 8:word32]
	word32 r5_176 = Mem108[r4 + 24:word32]
	r29_135 = Mem108[r4:word32] - r4_175
	Mem180[r4:word32] = r4_175 + 1
	Mem182[r4 + 4:word32] = r5_176 + -1
	branch Test(LE,cr0) l004016D4
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> cr1:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r7:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l004016D4:
	branch Test(EQ,cr0) l004016FC
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r29:<invalid> cr1:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r7:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l004016E8:
	word32 r26_218
	r2 = fn004026B8(r0, r2, r30_120, 0, 2, r26, r27_118, r28_111, r29_135, r30_120, r4, cr0, dwLoc48, out r26_218, out r27_118, out r28_111, out r29_135, out r31_137)
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r29:<invalid> cr1:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r7:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l004016B8:
	word32 r3_202
	word32 r30_204
	fn00402248(r2, r30_120, Mem182[r4 + 8:word32], r29_135, r29_135, r30_120, r4, cr0, dwLoc48, out r2, out r3_202, out r29_135, out r30_204, out r31_137)
	r28_111 = r3_202
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:r4 r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r29:<invalid> cr1:<invalid> r3:<invalid> r0:<invalid> r6:<invalid> r2:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r7:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l004016FC:
	Mem196[Mem182[r31_137 + 8:word32]:byte] = (int32) (int8) r27_118
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:<invalid> r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r29:<invalid> r3:<invalid> r6:<invalid> r7:<invalid> cr1:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l00401730:
	branch Test(EQ,cond(r28_111 - r29_135)) l0040175C
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:<invalid> r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r3:<invalid> r6:<invalid> r29:<invalid> r7:<invalid> cr1:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l0040175C:
	word32 r3_159
	*r3Out = r27_118 & 0x000000FF
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:<invalid> r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r3:<invalid> r6:<invalid> r29:<invalid> r7:<invalid> cr1:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr

l00401738:
	Mem144[r31_137 + 12:word32] = Mem108[r31_137 + 12:word32] | 0x00000020
	word32 r3_157
	*r3Out = -1
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r31:<invalid> r10:<invalid> r12:<invalid> r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r9:<invalid> r5:<invalid> r28:<invalid> r3:<invalid> r6:<invalid> r29:<invalid> r7:<invalid> cr1:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr

fn00401598_exit:
// DataOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r10:<invalid> r12:lr r11:<invalid> r4:<invalid> r27:<invalid> r30:<invalid> r28:<invalid> r29:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> cr1:<invalid> r0:<invalid> lr:lr ctr:<invalid> r2:<invalid> r8:<invalid> r26:<invalid> r25:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr



void fn0040178C(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: r3 r4 r5
// Preserved: r1
fn0040178C_entry:
// DataOut: r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l0040178C:
	Mem7[Mem0[r2 + 128:word32]:word32] = r3
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040178C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r5:<invalid> r3:<invalid>



word32 fn004017F0(word32 r2, word32 r3, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut: r0 r2 r3
// Trashed: cr1 ctr r0 r11 r12 r2 r3 r4
// Preserved: lr r1
fn004017F0_entry:
	*r2Out = r2
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0024(0)

l004017F0:
	branch Test(EQ,cond(Mem0[Mem0[r2 + 128:word32]:word32])) l00401838
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0024(0) Local -0038(0)

l0040180C:
	r0 = fn00403F10(Mem0[Mem0[r2 + 128:word32]:word32], dwLoc24)
	word32 r2_36 = dwLoc24
	*r2Out = r2_36
	branch Test(EQ,cond(r3)) l00401838
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r4:<invalid> r12:lr cr1:<invalid> -56(fp):fp 8(fp):lr

l00401838:
	word32 r3_31
	*r3Out = 0
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r4:<invalid> r12:<invalid> cr1:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr

l00401824:
	word32 r3_42
	*r3Out = 1
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r4:<invalid> r12:<invalid> cr1:cond(r3) r11:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr

fn004017F0_exit:
// DataOut: r0 r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r12:lr cr1:<invalid> r11:<invalid> r2:<invalid> lr:lr r3:<invalid> r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr



word32 fn004019CC(word32 r2, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0 r2 r3
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r3 r4 r5
// Preserved: lr r1 r31
fn004019CC_entry:
	*r2Out = r2
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l004019CC:
	word32 r31_8 = Mem0[r2 + 104:word32]
	branch Test(NE,cond(Mem0[r31_8 + 8:word32])) l00401A10
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0040(0)

l004019EC:
	word32 r2_39
	word32 r3_40
	r0 = fn00401A34(r2, dwLoc38, out r2_39, out r3_40)
	branch Test(NE,cond(r3_40)) l00401A10
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r12:lr r4:<invalid> cr1:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00401A10:
	word32 r4_30 = Mem0[r31_8 + 8:word32]
	Mem34[r31_8 + 8:word32] = Mem0[r4_30:word32]
	word32 r3_35
	*r3Out = r4_30
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r12:<invalid> r4:<invalid> cr1:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l004019F8:
	word32 r3_47
	*r3Out = 0
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r12:<invalid> r4:<invalid> cr1:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

fn004019CC_exit:
// DataOut: r0 r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:r31 r12:lr r4:<invalid> cr1:<invalid> r5:<invalid> lr:lr r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



word32 fn00401A34(word32 r2, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0 r2 r3
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r3 r4
// Preserved: lr r1
fn00401A34_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0024(0)

l00401A34:
	word32 r0_10 = fn00404104(r2, dwLoc24)
	word32 r2_11
	*r2Out = dwLoc24
	branch Test(NE,cond(4096)) l00401A68
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00401A68:
	Mem33[Mem0[dwLoc24 + 104:word32] + 8:word32] = 4096
	word32 r10_32 = 0x00001000
	word32 r11_36 = 0x00001008
	branch Test(LE,cond(0x00000FF8)) l00401A98
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r12:<invalid> r3:4096 r2:<invalid> cr1:cond(4096) r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr

l00401A84:
	Mem48[r10_32:word32] = r11_52
	r10_32 = r11_52
	r11_36 = r11_52 + 8
	word32 r11_52 = r11_36
	branch Test(GT,cond(8184 - r11_52)) l00401A84
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r12:<invalid> r3:8184 r2:<invalid> cr1:<invalid> r4:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr

l00401A98:
	Mem44[8184:word32] = 0
	word32 r3_45
	*r3Out = 1
	return r0_10
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r12:<invalid> r3:8184 r2:<invalid> cr1:<invalid> r4:<invalid> r10:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr

l00401A54:
	word32 r3_26
	*r3Out = 0
	return r0_10
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r12:<invalid> r3:4096 r2:<invalid> cr1:cond(4096) r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr

fn00401A34_exit:
// DataOut: r0 r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r3:<invalid> r2:<invalid> cr1:<invalid> lr:lr r4:0 r10:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr



word32 fn00401AB4(word32 r2, word32 r29, word32 r30, byte cr0, word32 dwArg08, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r30
// LiveOut: r2 r29 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00401AB4_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00401AB4:
	word32 r29_13
	word32 r30_14
	return fn00402C4C(r2, 18, r29, r30, cr0, dwLoc30, out r29_13, out r30_14)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00401AB4_exit:
// DataOut: r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r3:<invalid> r0:<invalid> lr:lr r11:<invalid> r2:<invalid> r4:<invalid> cr1:<invalid> ctr:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r29:<invalid> r30:<invalid> -56(fp):fp 8(fp):lr



word32 fn00401ADC(word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r2 r25 r26 r27 r28 r29 r3 r30 r31
// LiveOut: r0 r2 r25 r26 r27 r28 r29 r3 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00401ADC_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) v3(32)

l00401ADC:
	Mem5[v3:word32] = r25
	Mem9[v3 + 4:word32] = r26
	Mem12[v3 + 8:word32] = r27
	Mem15[v3 + 12:word32] = r28
	Mem18[v3 + 16:word32] = r29
	Mem21[v3 + 20:word32] = r30
	Mem24[v3 + 24:word32] = r31
	word32 r25_27 = Mem24[r2 + 152:word32]
	word32 r28_230 = Mem24[r2 + 148:word32]
	word32 r11_32 = Mem24[r25_27 + 4:word32]
	word32 r30_232 = Mem24[r25_27 + 4:word32]
	word32 r27_166 = -1
	word32 r26_228 = r3 + 15 & -8
	branch Test(GE,cond(r11_32 - Mem24[r28_230:word32])) l00401BA0
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401B24:
	r31 = r11_32 << 0x04
	word32 r29_226 = Mem24[r2 + 140:word32]
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:lr cr1:<invalid> r26:r3 + 15 & -8 r27:-1 r5:-8 -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401B2C:
	branch Test(EQ,cond(Mem24[Mem24[Mem24[r29_226:word32]:word32] + r31:word32])) l00401B54
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401B40:
	word32 r3_258
	r2 = fn00401DD8(r2, r30_232, r26_228, r26_228, r27_166, r28_230, r29_226, r30_232, r31, cr0, lr, dwLoc50, out r3_258, out r26_228, out r27_166, out r28_230, out r29_226, out r30_232, out r31)
	*r2Out = r2
	branch Test(NE,cond(r3_258 - -1)) l00401B80
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401B80:
	Mem268[r25_27 + 4:word32] = r30_232
	word32 r3_286
	*r3Out = 0
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr

l00401B54:
	branch Test(EQ,cond(Mem24[Mem24[Mem24[r29_226:word32]:word32] + r31:word32])) l00401B9C
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401B9C:
	r27_166 = r30_232
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(32)

l00401B68:
	r30_232 = r30_232 + 1
	r31 = r31 + 16
	branch Test(LT,cond(r30_232 - Mem24[r28_230:word32])) l00401B2C
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401B7C:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(32)

l00401BA0:
	word32 r29_82 = Mem24[r2 + 140:word32]
	word32 r11_83 = Mem24[r28_230:word32]
	word32 r9_133 = Mem24[r29_82:word32]
	branch Test(NE,cond(r27_166 - -1)) l00401CC8
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r31:<invalid> r29:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(32)

l00401BB4:
	word32 r31_132 = r11_83 + 32 << 0x04
	branch Test(EQ,cond(r9_133)) l00401BD8
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401BC4:
	fn0040408C(r2, dwLoc44)
	r2 = dwLoc44
	r9_133 = Mem24[r29_82:word32]
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(32) Local -0058(32)

l00401BD8:
	branch Test(EQ,cond(r9_133)) l00401BF4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(32) Local -0058(32)

l00401BE0:
	branch Test(EQ,cond(Mem24[Mem24[Mem24[r2 + 152:word32]:word32]:word16])) l00401C74
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(32) Local -0058(32)

l00401BF4:
	word32 r0_172 = fn004040A4(r2, dwLoc44)
	word32 r2_173
	*r2Out = dwLoc44
	branch Test(NE,cond(r31_132)) l00401C24
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(0) Local -0058(0)

l00401C24:
	fn004040BC(dwLoc44, dwLoc44)
	branch Test(EQ,cond(Mem24[r29_82:word32])) l00401C6C
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0044(32) Local -0058(32)

l00401C3C:
	fn004040D4(dwLoc44, dwLoc44)
	fn004040EC(dwLoc44, dwLoc44)
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0058(32)

l00401C6C:
	Mem204[r29_82:word32] = r31_132
	r2 = dwLoc44
	r9_133 = Mem204[r29_82:word32]
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp -32(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0058(32)

l00401C74:
	r31 = r31_132
	word32 r11_148 = 0
	word32 r10_150 = (Mem24[r28_230:word32] << 0x04) + Mem24[r9_133:word32]
	word32 ctr_152 = 32
// DataOut: cr0 ctr lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp -32(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0058(32)

l00401C94:
	Mem156[r10_150 + r11_148:word32] = 0
	word32 r11_157 = r11_148 + 4
	Mem158[r10_150 + r11_157:word32] = 0
	Mem160[r10_150 + (r11_157 + 4):word32] = 0
	Mem162[r10_150 + (r11_157 + 8):word32] = 0
	r11_148 = r11_157 + 12
	ctr_152 = ctr_152 - 0x00000001
	branch ctr_152 != 0x00000000 l00401C94
// DataOut: cr0 ctr lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:0 r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> -88(fp):fp -32(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0058(32)

l00401CB8:
	word32 r4_165 = Mem162[r28_230:word32]
	Mem168[r28_230:word32] = r4_165 + 32
	r27_166 = r4_165
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:0 r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> -88(fp):fp -32(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0058(32)

l00401CC8:
	word32 r2_102
	word32 r3_103
	return fn00401CE8(r2, r27_166, r26_228, r26_228, r27_166, r28_230, r29_82, r30_232, r31, cr0, lr, dwLoc50, out r2_102, out r3_103)
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r10:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> -88(fp):fp -32(fp):<invalid> 8(fp):lr

l00401C0C:
	word32 r3_194
	*r3Out = -1
	return r0_172
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -88 r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:<invalid> cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> r6:<invalid> -88(fp):fp 8(fp):lr

fn00401ADC_exit:
// DataOut: r0 r2 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r25:<invalid> r28:<invalid> r11:<invalid> r4:<invalid> r30:<invalid> r12:lr cr1:<invalid> r26:<invalid> r27:<invalid> r5:<invalid> r29:<invalid> r9:<invalid> r3:<invalid> r31:<invalid> lr:lr r2:<invalid> r10:<invalid> r0:<invalid> ctr:<invalid> r7:<invalid> r8:<invalid> r6:<invalid> -88(fp):fp -32(fp):<invalid> 8(fp):lr



word32 fn00401CE8(word32 r2, word32 r3, word32 r4, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r2 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r0 r2 r3
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00401CE8_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0034(32) v3(32)

l00401CE8:
	Mem5[v3:word32] = r29
	Mem9[v3 + 4:word32] = r30
	Mem12[v3 + 8:word32] = r31
	word32 r31_137 = Mem12[Mem12[r2 + 144:word32]:word32] + 4095 & -4096
	branch Test(LE,cond(r4 - r31_137)) l00401D20
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0034(32) Local -0048(32)

l00401D1C:
	r31_137 = r4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:r4 r4:<invalid> r5:-4096 r12:lr r31:<invalid> cr1:<invalid> r30:r3 -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0034(32) Local -0048(32)

l00401D20:
	word32 r3_29 = r31_137 + 8
	word32 r0_116 = fn00404104(r2, dwLoc34)
	word32 r2_32
	*r2Out = dwLoc34
	branch Test(EQ,cond(r3_29)) l00401DC0
// DataOut: cr0 lr r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:r4 r4:<invalid> r5:-4096 r12:lr r31:<invalid> cr1:<invalid> r30:r3 -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(0)

l00401D38:
	word32 r8_133
	word32 r11_94 = Mem12[Mem12[Mem12[dwLoc34 + 140:word32]:word32]:word32]
	branch Test(EQ,cr0) l00401D6C
// DataOut: cr0 lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:r4 r4:<invalid> r5:-4096 r12:<invalid> r31:<invalid> cr1:<invalid> r30:r3 r3:<invalid> r2:<invalid> r10:<invalid> r0:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(0)

l00401D6C:
	Mem135[r11_94 + (r3 << 0x04):word32] = r3_29
	r8_133 = (r3 << 0x04) + r11_94
// DataOut: cr0 lr r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31 r8
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:r4 r4:<invalid> r5:<invalid> r12:<invalid> r31:<invalid> cr1:<invalid> r30:r3 r3:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(0)

l00401D50:
	Mem132[r11_94 + (r3 << 0x04):word32] = r3_29 + 7 & -8
	r8_133 = (r3 << 0x04) + r11_94
// DataOut: cr0 lr r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r27 r28 r29 r30 r31 r8
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:r4 r4:<invalid> r5:<invalid> r12:<invalid> r31:<invalid> cr1:<invalid> r30:r3 r3:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(0)

l00401D78:
	Mem100[r8_133 + 12:word32] = r3_29
	Mem101[r8_133 + 8:word32] = r31_137
	Mem103[r8_133 + 4:word32] = 0
	word32 r3_105
	word32 r26_106
	word32 r27_107
	word32 r28_108
	word32 r29_109
	word32 r30_110
	word32 r31_111
	word32 r2_112 = fn00401DD8(dwLoc34, r3, r4, r26, r27, r28, r4, r3, r31_137, cr0, lr, dwLoc40, out r3_105, out r26_106, out r27_107, out r28_108, out r29_109, out r30_110, out r31_111)
	*r2Out = r2_112
	branch Test(EQ,cond(r3_105)) l00401DA8
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:r4 r4:<invalid> r5:<invalid> r12:<invalid> r31:<invalid> cr1:<invalid> r30:r3 r3:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r0:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(32)

l00401DA8:
	word32 r3_127
	*r3Out = 0
	return r0_116
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r12:<invalid> r31:<invalid> cr1:<invalid> r30:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r7:<invalid> r28:<invalid> r0:<invalid> ctr:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -72(fp):fp 8(fp):lr

l00401D9C:
	word32 r2_115
	r0_116 = fn00401ED4(r2_112, r30_110, r30_110, r31_111, dwLoc40, out r2_115)
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r12:<invalid> r31:<invalid> cr1:<invalid> r30:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r7:<invalid> r28:<invalid> r0:<invalid> ctr:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32)

l00401DC0:
	word32 r3_88
	*r3Out = -1
	return r0_116
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r12:<invalid> r31:<invalid> cr1:<invalid> r30:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r0:<invalid> ctr:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r7:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -72(fp):fp 8(fp):lr

fn00401CE8_exit:
// DataOut: r0 r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r29:<invalid> r4:<invalid> r5:<invalid> r12:lr r31:<invalid> cr1:<invalid> r30:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> lr:lr r0:<invalid> ctr:<invalid> r9:<invalid> r11:<invalid> r8:<invalid> r7:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -72(fp):fp 8(fp):lr



word32 fn00401DD8(word32 r2, word32 r3, word32 r4, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r3Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r2 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r2 r26 r27 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00401DD8_entry:
	*r26Out = r26
	*r27Out = r27
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -003C(32) v3(32)

l00401DD8:
	Mem5[v3:word32] = r28
	Mem9[v3 + 4:word32] = r29
	Mem12[v3 + 8:word32] = r30
	Mem15[v3 + 12:word32] = r31
	word32 r29_18 = Mem15[r2 + 140:word32]
	word32 r5_24 = Mem15[Mem15[r29_18:word32]:word32]
	word32 r11_125 = r5_24 + (r3 << 0x04)
	word32 r8_27 = Mem15[r11_125 + 4:word32]
	word32 r9_28 = Mem15[r11_125 + 8:word32]
	word32 r30_29 = r4 + 7 & -8
	word32 r10_30 = r9_28 - r8_27
	word32 r8_144 = r8_27 + Mem15[r5_24 + (r3 << 0x04):word32]
	branch Test(LE,cond(r30_29 - r10_30)) l00401E88
// DataOut: cr0 lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -003C(32) Local -0050(32)

l00401E24:
	fn0040411C(r2, dwLoc3C)
	word32 r10_123 = Mem15[Mem15[r29_18:word32]:word32]
	r28 = r30_29 - r10_30 + r9_28 + 8 & -8
	r2 = dwLoc3C
	r11_125 = r10_123 + (r3 << 0x04)
	branch Test(EQ,cond(Mem15[Mem15[Mem15[dwLoc3C + 152:word32]:word32]:word16])) l00401E78
// DataOut: cr0 lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r29:<invalid> r31:r3 << 0x04 r5:<invalid> r30:r4 + 7 & -8 r7:-8 r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:lr r3:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401E78:
	Mem141[r11_125 + 8:word32] = r28
	r8_144 = Mem141[r11_125 + 4:word32] + Mem141[r10_123 + (r3 << 0x04):word32]
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r8
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r29:<invalid> r31:r3 << 0x04 r5:<invalid> r30:r4 + 7 & -8 r7:-8 r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r28:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401E88:
	Mem76[r11_125 + 4:word32] = Mem15[r11_125 + 4:word32] + r30_29
	word32 r3_80
	word32 r26_81
	word32 r27_82
	word32 r29_83
	word32 r30_84
	word32 r2_111 = fn00402CE0(r2, r8_144, r30_29, r26, r27, r28, r29_18, r30_29, r3 << 0x04, lr, dwLoc48, out r3_80, out r26_81, out r27_82, out r29_83, out r30_84)
	branch Test(EQ,cond(r3_80)) l00401EBC
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r29:<invalid> r31:r3 << 0x04 r5:<invalid> r30:r4 + 7 & -8 r7:-8 r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r28:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0050(32)

l00401EB4:
	word32 r29_109
	word32 r30_110
	r2_111 = fn00401AB4(r2_111, r29_83, r30_84, cr0, dwLoc48, out r29_109, out r30_110)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r29:<invalid> r31:<invalid> r5:<invalid> r30:<invalid> r7:<invalid> r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r28:<invalid> r2:<invalid> ctr:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l00401EBC:
	word32 r3_107
	*r3Out = 0
	return r2_111
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r29:<invalid> r31:<invalid> r5:<invalid> r30:<invalid> r7:<invalid> r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r4:<invalid> r0:<invalid> r28:<invalid> r2:<invalid> ctr:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr

l00401E60:
	word32 r3_139
	*r3Out = -1
	return dwLoc3C
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r29:<invalid> r31:r3 << 0x04 r5:<invalid> r30:r4 + 7 & -8 r7:-8 r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r28:<invalid> r4:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -80(fp):fp 8(fp):lr

fn00401DD8_exit:
// DataOut: r2 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r29:<invalid> r31:<invalid> r5:<invalid> r30:<invalid> r7:<invalid> r11:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> cr1:<invalid> r12:lr r3:<invalid> r28:<invalid> r4:<invalid> r2:<invalid> lr:lr r0:<invalid> ctr:<invalid> r26:<invalid> r27:<invalid> r6:<invalid> -80(fp):fp -24(fp):<invalid> 8(fp):lr



word32 fn00401ED4(word32 r2, word32 r3, word32 r30, word32 r31, word32 dwArg08, ptr32 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3 r30 r31
// LiveOut: r0 r2
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r3 r30 r31 r4
// Preserved: lr r1
fn00401ED4_entry:
	*r2Out = r2
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -002C(0) v3(32)

l00401ED4:
	Mem5[v3:word32] = r30
	Mem9[v3 + 4:word32] = r31
	word32 r30_12 = Mem9[r2 + 140:word32]
	word32 r11_15 = Mem9[r30_12:word32]
	branch Test(EQ,cond(Mem9[Mem9[r11_15:word32] + (r3 << 0x04):word32])) l00401F14
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -002C(0) Local -0040(0)

l00401F04:
	r0 = fn00404134(r2, dwLoc2C)
	word32 r2_48
	*r2Out = dwLoc2C
	r11_15 = Mem9[r30_12:word32]
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r30:<invalid> r31:r3 << 0x04 r11:<invalid> r12:lr r10:<invalid> r4:<invalid> cr1:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32)

l00401F14:
	word32 r11_29 = Mem9[r11_15:word32]
	Mem32[r11_29 + (r3 << 0x04):word32] = 0
	word32 r31_33 = r11_29 + (r3 << 0x04)
	Mem34[r31_33 + 4:word32] = 0
	Mem35[r31_33 + 8:word32] = 0
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r30:<invalid> r31:r3 << 0x04 r11:<invalid> r12:<invalid> r10:<invalid> r4:<invalid> cr1:<invalid> r3:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp 8(fp):lr

fn00401ED4_exit:
// DataOut: r0 r2
// DataOut (flags): crX
// SymbolicIn: r1:fp r30:<invalid> r31:<invalid> r11:<invalid> r12:lr r10:<invalid> r4:0 cr1:<invalid> r3:<invalid> r2:<invalid> lr:lr r0:<invalid> ctr:<invalid> -64(fp):fp 8(fp):lr



word32 fn00401F40(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut: r3
// Trashed: crX cr1 r10 r11 r12 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r13
fn00401F40_entry:
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00401F40:
	word32 r7_4 = Mem0[r2 + 104:word32]
	word32 r4_12 = 0
	word32 r11_106 = Mem0[r7_4 + 4:word32]
	branch Test(EQ,cond(Mem0[r7_4 + 4:word32] - (r7_4 + 12))) l00401FDC
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00401FDC:
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:<invalid> cr1:<invalid> r4:0 r11:<invalid> -16(fp):fp -4(fp):r13

l00401F64:
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:<invalid> cr1:<invalid> r4:0 r11:<invalid> -16(fp):fp -4(fp):r13

l00401F68:
	branch Test(NE,cond((Mem0[r11_106 + 4:word32] & 0x00000003) - 0x00000001)) l00401FC0
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401F78:
	word32 r10_110 = Mem0[r11_106:word32]
	word32 r9_112 = Mem0[r10_110 + 4:word32]
	branch Test(GE,cond((r9_112 & -4) - (Mem0[r11_106 + 4:word32] & -4) + -8 - r3)) l00401FD4
// DataOut: cr0 lr r0 r10 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401FD4:
	r4_12 = r11_106
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401F9C:
	branch Test(NE,cond((r9_112 & 0x00000003) - 0x00000001)) l00401FC0
// DataOut: cr0 lr r0 r10 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401FC0:
	r11_106 = Mem0[r11_106:word32]
	branch Test(NE,cond(r11_106 - (r7_4 + 12))) l00401F68
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401FD0:
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401FE0:
	word32 r11_34 = Mem0[r7_4:word32]
	branch Test(EQ,cond(Mem0[r7_4 + 4:word32] - r11_34)) l004020AC
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13

l00401FFC:
	branch Test(NE,cond((Mem0[r11_34 + 4:word32] & 0x00000003) - 0x00000001)) l00402064
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l0040200C:
	word32 r10_59 = Mem0[r11_34:word32]
	word32 r9_61 = Mem0[r10_59 + 4:word32]
	branch Test(GE,cond((r9_61 & -4) - (Mem0[r11_34 + 4:word32] & -4) + -8 - r3)) l00402078
// DataOut: cr0 lr r0 r10 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r7 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402078:
	r4_12 = r11_34
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402030:
	branch Test(NE,cond((r9_61 & 0x00000003) - 0x00000001)) l00402064
// DataOut: cr0 lr r0 r10 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r7 r8
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402064:
	r11_34 = Mem0[r11_34:word32]
	branch Test(NE,cond(Mem0[r7_4 + 4:word32] - r11_34)) l00401FFC
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402074:
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402040:
	Mem73[r11_34:word32] = Mem0[r10_59:word32]
	Mem75[r10_59:word32] = Mem73[r7_4 + 8:word32]
	Mem76[r7_4 + 8:word32] = r10_59
	branch Test(NE,cond(Mem76[r7_4 + 4:word32] - r10_59)) l0040200C
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402060:
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00402080:
	Mem79[r7_4 + 4:word32] = r11_34
	branch Test(LT,cond((Mem79[Mem79[r11_34:word32] + 4:word32] & -4) - (Mem79[r11_34 + 4:word32] & -4) + -8 - r3)) l004020AC
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l004020A8:
	r4_12 = r11_34
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:<invalid> cr1:<invalid> r4:0 r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l004020AC:
	return r4_12
// DataOut: cr0 lr r0 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:<invalid> cr1:<invalid> r4:<invalid> r11:<invalid> r8:<invalid> r10:<invalid> r9:<invalid> r12:<invalid> r13:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

fn00401F40_exit:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r7:<invalid> r5:<invalid> r6:<invalid> cr1:<invalid> r4:<invalid> r11:<invalid> r8:<invalid> r3:<invalid> r13:r13 r10:<invalid> r9:<invalid> r12:<invalid> -16(fp):fp -8(fp):<invalid> -4(fp):r13

l00401FA8:
	Mem122[r11_106:word32] = Mem0[r10_110:word32]
	Mem124[r10_110:word32] = Mem122[r7_4 + 8:word32]
	Mem125[r7_4 + 8:word32] = r10_110
// DataOut: cr0 lr r0 r11 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r7
// DataOut (flags): crX
// SymbolicIn: r1:fp + -16 r7:<invalid> r5:<invalid> r6:-4 cr1:<invalid> r4:0 r11:<invalid> r10:<invalid> r9:<invalid> r8:<invalid> -16(fp):fp -4(fp):r13



word32 fn004020BC(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30 r31
// LiveOut: r0 r2 r29 r3 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004020BC_entry:
	*r2Out = r2
// DataOut: cr0 r0 r2 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) v5(32)

l004020BC:
	word32 r4_7 = Mem0[Mem0[r2 + 116:word32]:word32]
	Mem9[v5:word32] = r29
	Mem13[v5 + 4:word32] = r30
	Mem16[v5 + 8:word32] = r31
	branch Test(GE,cond(r3 - r4_7)) l00402220
// DataOut: cr0 r0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l004020E4:
	branch Test(EQ,cr0) l00402220
// DataOut: cr0 r0 r11 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00402220:
	word32 r5_54 = Mem16[r2 + 164:word32]
	Mem67[Mem16[r2 + 124:word32]:word32] = 9
	Mem69[r5_54:word32] = 0
	word32 r3_70
	*r3Out = -1
	return r0
// DataOut: cr0 r0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r11:<invalid> -152(fp):fp 8(fp):lr

l004020F8:
	branch Test(NE,cr0) l00402210
// DataOut: cr0 r0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r11:<invalid> -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00402210:
	word32 r3_181
	*r3Out = 0
	return r0
// DataOut: cr0 r0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r11:<invalid> -152(fp):fp 8(fp):lr

l00402100:
	word32 r11_86 = 0
	word32 ctr_100 = 5
// DataOut: cr0 ctr r11 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r11:<invalid> -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00402114:
	Mem92[fp + -96 + r11_86:word32] = 0
	word32 r11_93 = r11_86 + 4
	Mem94[fp + -96 + r11_93:word32] = 0
	Mem96[fp + -96 + (r11_93 + 4):word32] = 0
	Mem98[fp + -96 + (r11_93 + 8):word32] = 0
	r11_86 = r11_93 + 12
	ctr_100 = ctr_100 - 0x00000001
	branch ctr_100 != 0x00000000 l00402114
// DataOut: cr0 ctr r11 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00402138:
	word32 r0_109 = fn00404074(r2, dwLoc84)
	word32 r2_110
	*r2Out = dwLoc84
	branch Test(EQ,cond(fp + -96)) l00402184
// DataOut: cr0 r0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00402184:
	word32 r11_128 = 0
	word32 ctr_130 = 5
// DataOut: cr0 ctr r11 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 << 0x02 cr1:cond(fp + -96) r12:<invalid> r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r3:fp + -96 r0:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00402190:
	Mem133[fp + -96 + r11_128:word32] = 0
	word32 r11_134 = r11_128 + 4
	Mem135[fp + -96 + r11_134:word32] = 0
	Mem137[fp + -96 + (r11_134 + 4):word32] = 0
	Mem139[fp + -96 + (r11_134 + 8):word32] = 0
	r11_128 = r11_134 + 12
	ctr_130 = ctr_130 - 0x00000001
	branch ctr_130 != 0x00000000 l00402190
// DataOut: cr0 ctr r11 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 << 0x02 cr1:cond(fp + -96) r12:<invalid> r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r3:fp + -96 r0:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l004021B4:
	word32 r0_147 = fn00403F3C(dwLoc84, dwLoc84)
	word32 r2_148
	*r2Out = dwLoc84
	branch Test(EQ,cond(fp + -96)) l004021F8
// DataOut: cr0 r0 r2 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 << 0x02 cr1:cond(fp + -96) r12:<invalid> r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r3:fp + -96 r0:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l004021F8:
	word32 r3_172
	*r3Out = 0
	return r0_147
// DataOut: cr0 r0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:fp + -96 << 0x01 r5:r3 << 0x02 cr1:cond(fp + -96) r12:<invalid> r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r3:fp + -96 r0:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr

l004021D8:
	fn00403104(dwLoc84, fp + -96)
	word32 r3_161
	*r3Out = -1
	return r0_147
// DataOut: cr0 r0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:fp + -96 << 0x01 r5:r3 << 0x02 cr1:cond(fp + -96) r12:<invalid> r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r3:fp + -96 r0:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr

l00402160:
	Mem124[Mem98[dwLoc84 + 124:word32]:word32] = 5
	word32 r3_125
	*r3Out = -1
	return r0_109
// DataOut: cr0 r0 r2 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 << 0x02 cr1:cond(fp + -96) r12:<invalid> r11:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r3:fp + -96 r0:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -72(fp):<invalid> 8(fp):lr

fn004020BC_exit:
// DataOut: r0 r2 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r29:<invalid> r5:<invalid> cr1:<invalid> r12:lr r11:<invalid> r30:<invalid> r31:<invalid> r6:9 r7:0 r3:<invalid> r9:<invalid> ctr:<invalid> r0:<invalid> r2:<invalid> lr:lr r8:<invalid> r10:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr



word32 fn00402248(word32 r2, word32 r3, word32 r4, word32 r5, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30 r31 r4 r5
// LiveOut: r0 r2 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00402248_entry:
	*r2Out = r2
	*r29Out = r29
	*r30Out = r30
	*r31Out = r31
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) v11(32)

l00402248:
	byte cr1_9 = cond(r3 - Mem0[Mem0[r2 + 116:word32]:word32])
	Mem16[v11:word32] = r29
	Mem20[v11 + 4:word32] = r30
	Mem23[v11 + 8:word32] = r31
	branch Test(GE,cr1_9) l00402374
// DataOut: cr0 r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l00402270:
	word32 r11_149 = (int32) (int8) Mem23[Mem23[r2 + 120:word32] + r3:byte]
	branch Test(EQ,cr0) l00402374
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 r7:r3 cr1:<invalid> r12:lr -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l00402284:
	branch Test(NE,cr0) l00402374
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 r7:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l00402374:
	word32 r5_58 = Mem23[r2 + 164:word32]
	Mem61[Mem23[r2 + 124:word32]:word32] = 9
	Mem63[r5_58:word32] = 0
	word32 r3_64
	*r3Out = -1
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 r7:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr

l0040228C:
	word32 r3_145
	word32 r0_141
	branch Test(EQ,cr0) l004022E4
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 r7:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l004022E4:
	branch Test(EQ,cr0) l00402320
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 r7:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l00402320:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:lr r11:<invalid> r31:fp + -96 r9:0 -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -50(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l00402314:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:lr r11:<invalid> r31:fp + -96 r9:0 -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -50(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0038(32) Local -008C(32) Local -00A0(32)

l00402324:
	r3_145 = fp + -96
	r0_141 = fn0040405C(r2, dwLoc8C)
	r11_149 = dwLoc38
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:lr r11:<invalid> r31:fp + -96 r9:0 r4:2 -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -52(fp):<invalid> -50(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00402294:
	word32 r31_131 = Mem23[Mem23[r2 + 156:word32] + (r3 << 0x02):word32]
	word32 r30_133 = Mem23[r31_131 + 4:word32]
	Mem135[r31_131 + 16:word32] = r4
	Mem136[r31_131 + 12:word32] = r5
	r0_141 = fn00403F10(Mem136[r30_133 + 16:word32], dwLoc8C)
	r3_145 = (int32) (int16) r31_131
	branch Test(EQ,cr0) l004022D8
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 r7:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l004022D8:
	r11_149 = r5 - Mem136[r31_131 + 12:word32]
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r31:<invalid> r29:r5 r30:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l004022D0:
	r3_145 = (int32) Mem136[r31_131 + 2:int16]
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r31:<invalid> r29:r5 r30:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00402334:
	word32 r2_92
	*r2Out = dwLoc8C
	branch Test(NE,cond(r3_145)) l00402354
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r31:<invalid> r29:r5 r30:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r9:0 r4:2 -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -52(fp):<invalid> -50(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00402354:
	fn00403104(dwLoc8C, r3_145)
	word32 r29_120
	*r29Out = dwLoc10
	word32 r30_122
	*r30Out = dwLoc0C
	word32 r31_124
	*r31Out = dwLoc08
	word32 r3_128
	*r3Out = -1
	return r0_141
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r31:<invalid> r29:r5 r30:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r9:0 r4:2 -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -52(fp):<invalid> -50(fp):0 8(fp):lr

l0040233C:
	word32 r3_103
	*r3Out = r11_149
	word32 r29_107
	*r29Out = dwLoc10
	word32 r30_110
	*r30Out = dwLoc0C
	word32 r31_113
	*r31Out = dwLoc08
	return r0_141
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r6:<invalid> r10:r3 << 0x02 r7:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r31:<invalid> r29:r5 r30:<invalid> r3:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r9:0 r4:2 -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -52(fp):<invalid> -50(fp):0 8(fp):lr

fn00402248_exit:
// DataOut: r0 r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r6:<invalid> r10:<invalid> r7:<invalid> cr1:<invalid> r12:lr r11:<invalid> r4:<invalid> r5:<invalid> r3:<invalid> r31:<invalid> r29:<invalid> r30:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> lr:lr r8:<invalid> r9:<invalid> -160(fp):fp -72(fp):<invalid> -64(fp):r4 -60(fp):r5 -52(fp):<invalid> -50(fp):0 8(fp):lr



void fn00402398(word32 r2, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r28 r29 r30 r31
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00402398_entry:
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) v3(32)

l00402398:
	Mem5[v3:word32] = r29
	Mem9[v3 + 4:word32] = r30
	Mem12[v3 + 8:word32] = r31
	word32 r4_16 = Mem12[r2 + 72:word32]
	word32 r29_15 = Mem12[r2 + 108:word32]
	word32 r31_18 = r4_16 + 96
	word32 r30_22 = 0
	branch Test(LT,cond(Mem12[r29_15:word32] - (r4_16 + 96))) l004023EC
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0048(32)

l004023C4:
	word32 r3_56
	word32 r31_60
	r2 = fn00403170(r2, r31_18, r28, r29_15, r30_22, r31_18, cr0, dwLoc40, out r3_56, out r28, out r29_15, out r30_22, out r31_60)
	branch Test(EQ,cond(r3_56 - -1)) l004023DC
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(32)

l004023D8:
	r30_22 = r30_22 + 1
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(32)

l004023DC:
	r31_18 = r31_60 + 32
	branch Test(GE,cond(Mem12[r29_15:word32] - (r31_60 + 32))) l004023C4
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0048(32)

l004023EC:
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r29:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:<invalid> r30:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr

fn00402398_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r29:<invalid> r4:<invalid> r5:<invalid> r31:<invalid> cr1:<invalid> r12:lr r30:<invalid> r3:<invalid> lr:lr r0:<invalid> r11:<invalid> r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr



word32 fn00402404(word32 r2, word32 r29, word32 r30, word32 r31, word32 dwArg08, ptr32 & r2Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r29 r30 r31
// LiveOut: r0 r2 r29 r30
// Trashed: cr1 ctr r0 r12 r2 r29 r3 r30 r4 r5
// Preserved: lr r1 r31
fn00402404_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32)

l00402404:
	word32 r29_16
	word32 r30_17
	word32 r31_18
	word32 r2_19 = fn0040262C(Mem0[r2 + 168:word32], Mem0[r2 + 172:word32], r29, r30, r31, dwLoc38, out r29_16, out r30_17, out r31_18)
	word32 r29_22
	word32 r30_23
	word32 r31_24
	fn00404044(fn0040262C(Mem0[r2_19 + 176:word32], Mem0[r2_19 + 180:word32], r29_16, r30_17, r31_18, dwLoc38, out r29_22, out r30_23, out r31_24), dwLoc2C)
	word32 r0_34 = fn00404044(dwLoc2C, dwLoc2C)
	branch Test(EQ,cond(0xFFFFF90E)) l00402480
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -002C(0) Local -0040(0)

l00402458:
	r0_34 = fn00403F9C(dwLoc2C, dwLoc2C)
	branch Test(NE,cond(0x73797376)) l00402480
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:<invalid> r3:-22369 r4:1 r2:<invalid> r31:0xFFFFA1AD cr1:cond(0xFFFFF90E) r30:<invalid> r29:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp -4(fp):r31 8(fp):lr
// LocalsOut: Local -0008(32)

l00402474:
	Mem60[Mem0[dwLoc2C + 184:word32]:word32] = dwLoc08
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:<invalid> r3:0x73797376 r4:fp + -8 r2:<invalid> r31:0xFFFFA1AD cr1:cond(0x73797376) r0:<invalid> ctr:<invalid> r30:<invalid> r29:<invalid> -64(fp):fp -4(fp):r31 8(fp):lr

l00402480:
	word32 r2_39
	*r2Out = dwLoc2C
	return r0_34
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:<invalid> r3:<invalid> r4:<invalid> r2:<invalid> r31:0xFFFFA1AD cr1:<invalid> r5:<invalid> r0:<invalid> ctr:<invalid> r30:<invalid> r29:<invalid> -64(fp):fp -4(fp):r31 8(fp):lr

fn00402404_exit:
// DataOut: r0 r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r3:0 r4:<invalid> r2:<invalid> r31:r31 cr1:<invalid> lr:lr r5:<invalid> r0:<invalid> ctr:<invalid> r30:<invalid> r29:<invalid> -64(fp):fp -4(fp):r31 8(fp):lr



word32 fn004024F0(word32 r2, word32 r3, word32 r4, word32 r5, word32 r29, word32 r30, word32 r31, word32 dwArg08, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r29 r3 r30 r31 r4 r5
// LiveOut: r29 r30 r31
// Trashed: cr1 ctr r0 r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r0 r1
fn004024F0_entry:
// DataOut: r2 r29 r3 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) v8(32)

l004024F0:
	word32 r4_8 = Mem0[r2 + 112:word32]
	Mem12[v8:word32] = r30
	Mem16[v8 + 4:word32] = r31
	Mem25[r4_8:byte] = (int32) (int8) r5
	word32 r30_19 = r3
	word32 r31_21 = r5
	branch Test(NE,cond(r4)) l00402544
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l0040251C:
	word32 r3_63 = Mem25[Mem25[r2 + 188:word32]:word32]
	branch Test(EQ,cond(r3_63)) l00402538
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:cond(r4) r12:lr r4:<invalid> r30:r3 r31:r5 r5:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l0040252C:
	r2 = fn0040262C(r3_63, Mem25[Mem25[r2 + 192:word32]:word32], r29, r3, r5, dwLoc38, out r29, out r30_19, out r31_21)
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:lr r4:<invalid> r30:r3 r31:r5 r5:<invalid> r3:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l00402538:
	r2 = fn0040262C(Mem25[r2 + 196:word32], Mem25[r2 + 200:word32], r29, r30_19, r31_21, dwLoc38, out r29, out r30_19, out r31_21)
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> r29:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(0)

l00402544:
	word32 r29_34
	word32 r30_35
	word32 r31_36
	word32 r2_37 = fn0040262C(Mem25[r2 + 204:word32], Mem25[r2 + 208:word32], r29, r30_19, r31_21, dwLoc38, out r29_34, out r30_35, out r31_36)
	branch Test(NE,cond(r31_36)) l00402574
// DataOut: r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> r29:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00402558:
	word32 r11_57 = Mem25[Mem25[r2_37 + 212:word32]:word32]
	branch Test(EQ,cond(r11_57)) l0040256C
// DataOut: r11 r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> r29:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00402568:
	Mem61[r11_57 + 14:word32] = r30_35
// DataOut: r2 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> r11:<invalid> r29:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l0040256C:
	fn00403248(r2_37, dwLoc38)
// DataOut: r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> r11:<invalid> r29:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00402574:
	word32 r30_47
	*r30Out = dwLoc08
	word32 r31_50
	*r31Out = dwLoc04
	return r29_34
// DataOut: r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> r29:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp 8(fp):lr

fn004024F0_exit:
// DataOut: r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r12:lr r4:<invalid> r30:<invalid> r31:<invalid> r5:<invalid> r3:<invalid> lr:lr r29:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> -64(fp):fp 8(fp):lr



word32 fn0040262C(word32 r3, word32 r4, word32 r29, word32 r30, word32 r31, word32 dwArg08, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r29 r3 r30 r31 r4
// LiveOut: r2 r29 r30 r31
// Trashed: cr1 ctr r0 r12 r2 r29 r30 r31 r4
// Preserved: lr r1
fn0040262C_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) v3(32)

l0040262C:
	Mem5[v3:word32] = r29
	Mem9[v3 + 4:word32] = r30
	Mem12[v3 + 8:word32] = r31
	word32 r30_15 = r3
	branch Test(LE,cond(r4 - r3)) l0040267C
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l0040264C:
	word32 r31_49 = Mem12[r30_15:word32]
	branch Test(EQ,cond(r31_49)) l00402670
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:<invalid> r29:r4 cr1:<invalid> r12:<invalid> r31:<invalid> r4:-1 r0:<invalid> ctr:<invalid> r2:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00402658:
	branch Test(EQ,cond(r31_49 - -1)) l00402670
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:<invalid> r29:r4 cr1:<invalid> r12:<invalid> r31:<invalid> r4:-1 r0:<invalid> ctr:<invalid> r2:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00402664:
	fn00403F10(r31_49, dwLoc34)
	r2 = dwLoc34
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:<invalid> r29:r4 cr1:<invalid> r12:<invalid> r31:<invalid> r4:-1 r0:<invalid> ctr:<invalid> r2:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00402670:
	r30_15 = r30_15 + 4
	branch Test(GT,cond(r4 - r30_15)) l0040264C
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:<invalid> r29:r4 cr1:<invalid> r12:<invalid> r31:<invalid> r4:-1 r0:<invalid> ctr:<invalid> r2:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l0040267C:
	word32 r29_31
	*r29Out = dwLoc10
	word32 r30_34
	*r30Out = dwLoc0C
	word32 r31_37
	*r31Out = dwLoc08
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:<invalid> r29:r4 cr1:<invalid> r12:<invalid> r31:<invalid> r4:-1 r0:<invalid> ctr:<invalid> r2:<invalid> -72(fp):fp 8(fp):lr

fn0040262C_exit:
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r30:<invalid> r29:<invalid> cr1:<invalid> r12:lr r31:<invalid> lr:lr r4:-1 r0:<invalid> ctr:<invalid> r2:<invalid> -72(fp):fp 8(fp):lr



word32 fn004026B8(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r0 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5
// LiveOut: r2 r26 r27 r28 r29 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn004026B8_entry:
	*r26Out = r26
	*r27Out = r27
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -004C(32) Local -008C(32) v3(32)

l004026B8:
	Mem5[v3:word32] = r26
	Mem9[v3 + 4:word32] = r27
	Mem12[v3 + 8:word32] = r28
	Mem15[v3 + 12:word32] = r29
	Mem18[v3 + 16:word32] = r30
	Mem21[v3 + 20:word32] = r31
	branch Test(LE,cond(Mem21[Mem21[r2 + 116:word32]:word32] - r3)) l00402964
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l004026E4:
	branch Test(EQ,cr0) l00402964
// DataOut: cr0 r0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:lr -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l004026F8:
	branch Test(NE,cr0) l00402964
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l00402964:
	word32 r5_70 = Mem21[r2 + 164:word32]
	Mem86[Mem21[r2 + 124:word32]:word32] = 9
	Mem88[r5_70:word32] = 0
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr

l00402700:
	word32 r3_120
	branch Test(EQ,cond(r5)) l00402738
// DataOut: cr0 r0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:lr r11:<invalid> -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l00402738:
	r3_120 = 0
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5) r12:lr r11:r5 -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l0040270C:
	branch Test(EQ,cond(r5 - 1)) l00402744
// DataOut: cr0 r11 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5) r12:lr r11:r5 -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l00402744:
	word32 r11_297 = 0
	word32 ctr_299 = 5
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 1) r12:lr r11:r5 -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -008C(32) Local -00A0(32)

l00402758:
	Mem303[fp + -104 + r11_297:word32] = 0
	word32 r11_304 = r11_297 + 4
	Mem305[fp + -104 + r11_304:word32] = 0
	Mem307[fp + -104 + (r11_304 + 4):word32] = 0
	Mem309[fp + -104 + (r11_304 + 8):word32] = 0
	r11_297 = r11_304 + 12
	ctr_299 = ctr_299 - 0x00000001
	branch ctr_299 != 0x00000000 l00402758
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 1) r12:lr r11:<invalid> r31:fp + -104 r9:5 ctr:<invalid> r30:0 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -003A(32) Local -008C(32) Local -00A0(32)

l0040277C:
	fn00403FE4(r2, dwLoc8C)
	r3_120 = fp + -104
	r2 = dwLoc8C
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 1) r12:lr r11:<invalid> r31:fp + -104 r9:5 ctr:<invalid> r30:0 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l00402714:
	branch Test(EQ,cond(r5 - 2)) l004027A8
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 1) r12:lr r11:r5 -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l004027A8:
	word32 r11_270 = 0
	word32 ctr_272 = 5
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 2) r12:lr r11:r5 -160(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l004027BC:
	Mem276[fp + -104 + r11_270:word32] = 0
	word32 r11_277 = r11_270 + 4
	Mem278[fp + -104 + r11_277:word32] = 0
	Mem280[fp + -104 + (r11_277 + 4):word32] = 0
	Mem282[fp + -104 + (r11_277 + 8):word32] = 0
	r11_270 = r11_277 + 12
	ctr_272 = ctr_272 - 0x00000001
	branch ctr_272 != 0x00000000 l004027BC
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 2) r12:lr r11:<invalid> r31:fp + -104 r9:5 ctr:<invalid> r30:0 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -004C(32) Local -008C(32) Local -00A0(32)

l004027E0:
	fn00403FFC(r2, dwLoc8C)
	r3_120 = fp + -104
	r2 = dwLoc8C
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 2) r12:lr r11:<invalid> r31:fp + -104 r9:5 ctr:<invalid> r30:0 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l00402808:
	branch Test(NE,cond(r3_120)) l00402920
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:<invalid> r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l00402810:
	word32 r11_178 = 0
	word32 ctr_180 = 5
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:<invalid> r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l00402820:
	Mem183[fp + -104 + r11_178:word32] = 0
	word32 r11_184 = r11_178 + 4
	Mem185[fp + -104 + r11_184:word32] = 0
	Mem187[fp + -104 + (r11_184 + 4):word32] = 0
	Mem189[fp + -104 + (r11_184 + 8):word32] = 0
	r11_178 = r11_184 + 12
	ctr_180 = ctr_180 - 0x00000001
	branch ctr_180 != 0x00000000 l00402820
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:fp + -104 r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l00402844:
	fn00404014(r2, dwLoc8C)
	r3_120 = fp + -104
	r2 = dwLoc8C
	branch Test(NE,cond(fp + -65)) l00402920
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:r3 r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:fp + -104 r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l0040287C:
	word32 r11_207 = 0
	word32 ctr_209 = 5
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:cond(fp + -65) r12:<invalid> r11:<invalid> r3:fp + -104 r30:0 r31:fp + -104 r9:5 ctr:<invalid> r27:<invalid> r26:1 r0:<invalid> r2:<invalid> r5:r3 << 0x02 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l00402888:
	Mem212[fp + -104 + r11_207:word32] = 0
	word32 r11_213 = r11_207 + 4
	Mem214[fp + -104 + r11_213:word32] = 0
	Mem216[fp + -104 + (r11_213 + 4):word32] = 0
	Mem218[fp + -104 + (r11_213 + 8):word32] = 0
	r11_207 = r11_213 + 12
	ctr_209 = ctr_209 - 0x00000001
	branch ctr_209 != 0x00000000 l00402888
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:cond(fp + -65) r12:<invalid> r11:<invalid> r3:fp + -104 r30:0 r31:fp + -104 r9:5 ctr:<invalid> r27:<invalid> r26:1 r0:<invalid> r2:<invalid> r5:r3 << 0x02 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(0) Local -00A0(0)

l004028AC:
	fn0040402C(dwLoc8C, dwLoc8C)
	r3_120 = fp + -104
	r2 = dwLoc8C
	branch Test(NE,cond(fp + -104)) l00402920
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:cond(fp + -65) r12:<invalid> r11:<invalid> r3:fp + -104 r30:0 r31:fp + -104 r9:5 ctr:<invalid> r27:<invalid> r26:1 r0:<invalid> r2:<invalid> r5:r3 << 0x02 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(32) Local -00A0(32)

l004028D0:
	word32 r11_230 = 0
	word32 ctr_232 = 5
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:cond(fp + -104) r12:<invalid> r11:<invalid> r3:fp + -104 r30:0 r31:fp + -104 r9:5 ctr:<invalid> r27:<invalid> r26:1 r0:<invalid> r2:<invalid> r5:r3 << 0x02 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(32) Local -00A0(32)

l004028DC:
	Mem235[fp + -104 + r11_230:word32] = 0
	word32 r11_236 = r11_230 + 4
	Mem237[fp + -104 + r11_236:word32] = 0
	Mem239[fp + -104 + (r11_236 + 4):word32] = 0
	Mem241[fp + -104 + (r11_236 + 8):word32] = 0
	r11_230 = r11_236 + 12
	ctr_232 = ctr_232 - 0x00000001
	branch ctr_232 != 0x00000000 l004028DC
// DataOut: cr0 ctr r11 r14 r16 r2 r22 r23 r25 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:cond(fp + -104) r12:<invalid> r11:<invalid> r3:fp + -104 r30:0 r31:fp + -104 r9:5 ctr:<invalid> r27:<invalid> r26:1 r0:<invalid> r2:<invalid> r5:r3 << 0x02 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -008C(32) Local -00A0(32)

l00402900:
	fn00404014(dwLoc8C, dwLoc8C)
	r3_120 = fp + -104
	r2 = dwLoc8C
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:cond(fp + -104) r12:<invalid> r11:<invalid> r3:fp + -104 r30:0 r31:fp + -104 r9:5 ctr:<invalid> r27:<invalid> r26:1 r0:<invalid> r2:<invalid> r5:r3 << 0x02 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00402920:
	branch Test(EQ,cond(r3_120)) l00402948
// DataOut: cr0 r0 r14 r16 r2 r22 r23 r25 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:<invalid> r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> r27:<invalid> r26:1 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00402948:
	word32 r26_164
	*r26Out = dwLoc18
	word32 r27_166
	*r27Out = dwLoc14
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:<invalid> r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> r27:<invalid> r26:1 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr

l00402928:
	fn00403104(r2, r3_120)
	word32 r26_142
	*r26Out = dwLoc18
	word32 r27_145
	*r27Out = dwLoc14
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:<invalid> r4:<invalid> r28:<invalid> r6:r3 cr1:<invalid> r12:<invalid> r11:<invalid> r3:<invalid> r30:0 r31:<invalid> r9:5 ctr:<invalid> r5:r3 << 0x02 r0:<invalid> r2:<invalid> r27:<invalid> r26:1 -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr

l0040271C:
	Mem267[Mem21[r2 + 124:word32]:word32] = 22
	return r2
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -160 r29:r4 r4:<invalid> r28:r3 r6:r3 cr1:cond(r5 - 2) r12:lr r11:r5 -160(fp):fp 8(fp):lr

fn004026B8_exit:
// DataOut: r2 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r29:<invalid> r4:<invalid> r28:<invalid> r6:<invalid> cr1:<invalid> r12:lr r11:<invalid> r5:<invalid> r30:<invalid> r31:<invalid> r7:0 r3:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r0:<invalid> r26:<invalid> r27:<invalid> lr:lr ctr:<invalid> r2:<invalid> -160(fp):fp -104(fp):0 -100(fp):0 -96(fp):0 -92(fp):0 -80(fp):<invalid> -76(fp):<invalid> -60(fp):1 -58(fp):<invalid> 8(fp):lr



word32 fn0040298C(word32 r0, word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, byte cr0, word32 lr, word32 dwArg08, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r2 r25 r26 r27 r28 r29 r3 r30
// LiveOut: r2 r25 r26 r27 r28 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r31
fn0040298C_entry:
// DataOut: cr0 lr r0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l0040298C:
	word32 r4_4 = Mem0[r2 + 76:word32]
	Mem16[r4_4:word32] = Mem0[r4_4:word32] + 1
	word32 r2_27
	word32 r3_28
	word32 r25_29
	word32 r26_30
	word32 r27_31
	word32 r28_32
	word32 r29_33
	word32 r30_34
	word32 r31_35
	fn00400F9C(r0, r2, 4096, r25, r26, r27, r28, r29, r30, r3, cr0, lr, dwLoc38, out r2_27, out r3_28, out r25_29, out r26_30, out r27_31, out r28_32, out r29_33, out r30_34, out r31_35)
	Mem40[r31_35 + 8:word32] = r3_28
	branch Test(EQ,cond(r3_28)) l004029E4
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004029E4:
	word32 r4_61 = Mem40[r31_35 + 12:word32]
	Mem63[r31_35 + 8:word32] = r31_35 + 20
	Mem65[r31_35 + 12:word32] = r4_61 | 0x00000004
	Mem67[r31_35 + 24:word32] = 1
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r4:<invalid> r12:<invalid> r5:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> cr1:<invalid> r30:<invalid> r11:<invalid> r2:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l004029CC:
	word32 r4_55 = Mem40[r31_35 + 12:word32]
	Mem57[r31_35 + 24:word32] = 4096
	Mem59[r31_35 + 12:word32] = r4_55 | 0x00000008
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r4:<invalid> r12:<invalid> r5:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> cr1:<invalid> r30:<invalid> r11:<invalid> r2:<invalid> r29:<invalid> r6:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00402A00:
	word32 r4_43 = Mem40[r31_35 + 8:word32]
	Mem46[r31_35 + 4:word32] = 0
	Mem47[r31_35:word32] = r4_43
	return r2_27
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r26 r27 r28 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r4:<invalid> r12:<invalid> r5:<invalid> r31:<invalid> r3:<invalid> r0:<invalid> cr1:<invalid> r6:<invalid> r30:<invalid> r11:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

fn0040298C_exit:
// DataOut: r2 r25 r26 r27 r28 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r12:lr r5:0 r31:r31 r3:<invalid> r0:<invalid> cr1:<invalid> r6:<invalid> lr:lr r30:<invalid> r11:<invalid> r2:<invalid> r29:<invalid> ctr:<invalid> r25:<invalid> r28:<invalid> r26:<invalid> r27:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r10:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



void fn00402A24(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r11, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00402A24_entry:
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0244(0) v3(32)

l00402A24:
	word32 r31_116
	word32 r30_124
	word32 r29_123
	word32 r2_125
	Mem5[v3:word32] = r27
	Mem9[v3 + 4:word32] = r28
	Mem12[v3 + 8:word32] = r29
	Mem15[v3 + 12:word32] = r30
	Mem18[v3 + 16:word32] = r31
	word32 r28_136 = r4
	word32 r27_135 = r3
	word32 r29_137 = r5
	branch Test(EQ,cond(Mem18[Mem18[r2 + 212:word32]:word32])) l00402AB0
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0244(0) Local -0258(0)

l00402AB0:
	fn00403F9C(r2, dwLoc0244)
	branch Test(NE,cond(0x61646472)) l00402B04
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:<invalid> r12:lr r27:r3 cr1:<invalid> r29:r5 -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(0) Local -0258(0)

l00402AD0:
	fn00403FB4(dwLoc0244, dwLoc0244)
	branch Test(NE,cond(fp + -544)) l00402AF4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:fp + -544 r12:<invalid> r27:r3 cr1:cond(0x61646472) r29:r5 r31:fp + -544 r3:0x61646472 r2:<invalid> r0:<invalid> ctr:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(32) Local -0258(32)

l00402AF4:
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:29 r12:<invalid> r27:r3 cr1:cond(fp + -544) r29:r5 r31:fp + -544 r3:fp + -544 r2:<invalid> r0:<invalid> ctr:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(32) Local -0258(32)

l00402AE8:
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:29 r12:<invalid> r27:r3 cr1:cond(fp + -544) r29:r5 r31:fp + -544 r3:fp + -544 r2:<invalid> r0:<invalid> ctr:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(32) Local -0258(32)

l00402B04:
	branch Test(EQ,cr0) l00402B4C
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:<invalid> r12:<invalid> r27:r3 cr1:<invalid> r29:r5 r31:fp + -544 r3:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r11:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(32) Local -0258(32)

l00402B4C:
	word32 r3_180
	word32 r29_181
	word32 r30_182
	word32 r31_183
	word32 r2_184 = fn004032FC(dwLoc0244, Mem18[dwLoc0244 + 216:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r3, r4, r5, r30, fp + -536, cr0, lr, dwLoc0250, dwLoc0240, dwLoc023C, dwLoc0238, dwLoc0234, dwLoc0230, dwLoc022C, dwLoc0228, dwLoc0224, out r3_180, out r29_181, out r30_182, out r31_183)
	word32 r3_190
	fn00402248(r2_184, 2, r31_183, r3_180, r29_181, r30_182, r31_183, cr0, dwLoc0250, out r2_125, out r3_190, out r29_123, out r30_124, out r31_116)
// DataOut: cr0 lr r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:<invalid> r12:<invalid> r27:r3 cr1:<invalid> r29:r5 r31:fp + -544 r3:<invalid> r2:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0258(32)

l00402B0C:
	word32 r3_163
	word32 r2_167 = fn004032FC(dwLoc0244, Mem18[dwLoc0244 + 216:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r3, r4, r5, r30, fp + -536, cr0, lr, dwLoc0250, dwLoc0240, dwLoc023C, dwLoc0238, dwLoc0234, dwLoc0230, dwLoc022C, dwLoc0228, dwLoc0224, out r3_163, out r29_123, out r30_124, out r31_116)
	fn004032AC(r31_116, cr0)
	fn00403FCC(r2_167, dwLoc0244)
	r2_125 = dwLoc0244
// DataOut: cr0 lr r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:<invalid> r12:<invalid> r27:r3 cr1:<invalid> r29:r5 r31:fp + -544 r3:<invalid> r2:<invalid> r11:<invalid> r0:<invalid> ctr:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0258(32)

l00402A50:
	word32 r31_138 = Mem18[r2 + 72:word32]
	branch Test(NE,cr0) l00402A7C
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:<invalid> r12:lr r27:r3 cr1:<invalid> r29:r5 -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(32) Local -0258(32)

l00402A60:
	r2 = fn00403450(r2, r31_138 + 64, 0, 4, 0, r25, r26, r3, r4, r5, r30, r31_138, cr0, lr, dwLoc0250, out r25, out r26, out r27_135, out r28_136, out r29_137, out r31_138)
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:r4 r4:<invalid> r12:lr r27:r3 cr1:<invalid> r29:r5 r31:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0244(32) Local -0258(32)

l00402A7C:
	word32 r30_89 = r31_138 + 64
	word32 r27_112
	word32 r28_113
	word32 r29_114
	word32 r30_115
	word32 r2_117 = fn004033C4(r0, r2, r30_89, Mem18[r2 + 216:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27_135, r28_136, r29_137, r30_89, r31_138, cr0, lr, dwLoc0250, dwLoc0240, dwLoc023C, dwLoc0238, dwLoc0234, dwLoc0230, dwLoc022C, dwLoc0228, dwLoc0224, out r27_112, out r28_113, out r29_114, out r30_115, out r31_116)
	word32 r3_120
	word32 r27_121
	word32 r28_122
	r2_125 = fn004011FC(r2_117, r30_115, r27_112, r28_113, r29_114, r30_115, cr0, dwLoc0250, out r3_120, out r27_121, out r28_122, out r29_123, out r30_124)
// DataOut: cr0 lr r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:<invalid> r4:<invalid> r12:<invalid> r27:<invalid> cr1:<invalid> r29:<invalid> r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r30:<invalid> r11:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> r9:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> -600(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0258(32)

l00402B84:
	fn0040326C(r2_125, r29_123, r30_124, r31_116, cr0, lr, dwLoc0250)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp + -600 r28:<invalid> r4:<invalid> r12:<invalid> r27:<invalid> cr1:<invalid> r29:<invalid> r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> r30:<invalid> r2:<invalid> r11:<invalid> ctr:<invalid> r10:<invalid> r23:<invalid> r22:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r9:<invalid> r8:<invalid> -600(fp):fp 8(fp):lr

fn00402A24_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r28:<invalid> r4:<invalid> r12:lr r27:<invalid> cr1:<invalid> r29:<invalid> r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r0:<invalid> r7:<invalid> r30:<invalid> lr:lr r2:<invalid> r11:<invalid> ctr:<invalid> r10:<invalid> r23:<invalid> r22:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> r9:<invalid> -600(fp):fp 8(fp):lr



word32 fn00402BA0(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30 r31
// LiveOut: r2 r29 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00402BA0_entry:
	*r29Out = r29
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) v7(32)

l00402BA0:
	Mem10[v7:word32] = r30
	Mem14[v7 + 4:word32] = r31
	branch Test(EQ,cond(r3)) l00402C38
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00402BB8:
	word32 r31_49 = Mem14[r3 + -8:word32]
	word32 r30_51 = -4
	branch Test(EQ,cond((Mem14[r31_49 + 4:word32] & -4) - (r3 + -8))) l00402BD8
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:cond(r3) r12:lr -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00402BD0:
	word32 r29_82
	r2 = fn00401AB4(r2, r29, -4, cr0, dwLoc38, out r29_82, out r30_51)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:lr r31:<invalid> r3:r3 + -8 r30:-4 r4:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00402BD8:
	word32 r10_60 = Mem14[r2 + 220:word32]
	word32 r11_63 = Mem14[r31_49 + 4:word32] & -3 | 0x00000001
	Mem64[r31_49 + 4:word32] = r11_63
	word32 r10_65 = Mem64[r10_60:word32]
	branch Test(EQ,cond(r10_65 - -1)) l00402C38
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r31:<invalid> r3:<invalid> r30:<invalid> r4:<invalid> r0:<invalid> r11:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00402C00:
	word32 r9_68 = Mem64[r2 + 104:word32]
	branch Test(LE,cond(Mem64[Mem64[r9_68 + 4:word32] + 4:word32] - r11_63)) l00402C38
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r31:<invalid> r3:<invalid> r30:<invalid> r4:<invalid> r0:<invalid> r10:<invalid> r5:-3 r11:<invalid> r6:-1 r2:<invalid> ctr:<invalid> r8:<invalid> r9:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00402C14:
	branch Test(LT,cond((Mem64[Mem64[r31_49:word32] + 4:word32] & r30_51) - (r11_63 & r30_51) + -8 - r10_65)) l00402C38
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r31:<invalid> r3:<invalid> r30:<invalid> r4:<invalid> r0:<invalid> r10:<invalid> r5:-3 r11:<invalid> r6:-1 r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00402C34:
	Mem79[r9_68 + 4:word32] = r31_49
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r31:<invalid> r3:<invalid> r30:<invalid> r4:<invalid> r0:<invalid> r10:<invalid> r5:-3 r11:<invalid> r6:-1 r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00402C38:
	word32 r30_39
	*r30Out = dwLoc08
	word32 r31_42
	*r31Out = dwLoc04
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 cr1:<invalid> r12:<invalid> r31:<invalid> r3:<invalid> r30:<invalid> r4:<invalid> r0:<invalid> r10:<invalid> r5:-3 r11:<invalid> r6:-1 r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp 8(fp):lr

fn00402BA0_exit:
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r12:lr r30:<invalid> r31:<invalid> lr:lr r3:<invalid> r4:<invalid> r0:<invalid> r10:<invalid> r5:-3 r11:<invalid> r6:-1 r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp 8(fp):lr



word32 fn00402C4C(word32 r2, word32 r3, word32 r29, word32 r30, byte cr0, word32 dwArg08, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30
// LiveOut: r2 r29 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r31
fn00402C4C_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -002C(32)

l00402C4C:
	word32 r2_16
	word32 r29_17
	word32 r30_18
	word32 r31_19
	fn004035CC(r2, r29, r30, r3, cr0, dwLoc38, out r2_16, out r29_17, out r30_18, out r31_19)
	word32 r29_23
	word32 r30_24
	word32 r31_25
	fn00403F10(Mem0[Mem0[fn00403618(r2_16, r31_19, r29_17, r30_18, r31_19, cr0, dwLoc38, out r29_23, out r30_24, out r31_25) + 224:word32]:word32], dwLoc2C)
	return dwLoc2C
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00402C4C_exit:
// DataOut: r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r31:r31 r0:<invalid> r3:255 r11:<invalid> r2:<invalid> lr:lr r4:<invalid> cr1:<invalid> ctr:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r29:<invalid> r30:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



word32 fn00402CE0(word32 r2, word32 r3, word32 r4, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, word32 dwArg08, ptr32 & r3Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r2 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r2 r26 r27 r29 r3 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00402CE0_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) v5(32)

l00402CE0:
	Mem7[v5:word32] = r26
	Mem11[v5 + 4:word32] = r27
	Mem14[v5 + 8:word32] = r28
	Mem17[v5 + 12:word32] = r29
	Mem20[v5 + 16:word32] = r30
	Mem23[v5 + 20:word32] = r31
	word32 r3_41
	word32 r2_136
	fn004019CC(r2, dwLoc68, out r2_136, out r3_41)
	word32 dwLoc28_124 = fp + -56
	branch Test(EQ,cond(r3_41)) l00403014
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32) Local -0038(32) Local -0070(32)

l00402D30:
	word32 r3_137
	fn004019CC(r2_136, dwLoc68, out r2_136, out r3_137)
	branch Test(EQ,cond(r3_137)) l00403014
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):0 -48(fp):0 -44(fp):0 -40(fp):fp + -56 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32) Local -0038(32) Local -0070(32)

l00402D48:
	word32 r3_144
	fn004019CC(r2_136, dwLoc68, out r2_136, out r3_144)
	branch Test(EQ,cond(r3_144)) l00403014
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):0 -44(fp):0 -40(fp):fp + -56 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32) Local -0038(32)

l00402D60:
	word32 r30_159
	word32 r3_153 = fn004036B0(r2_136, r3, fp + -36)
	branch Test(NE,cond(r3_153)) l00402D9C
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r2:<invalid> r10:<invalid> r11:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):fp + -56 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32) Local -0038(32)

l00402D9C:
	dwLoc28_124 = fp + -52
	r30_159 = r3_41
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:fp + -36 r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):fp + -56 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32)

l00402D7C:
	branch Test(NE,cond((Mem23[dwLoc24 + 4:word32] & 0x00000003) - 0x00000002)) l00403014
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:fp + -36 r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):fp + -56 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32)

l00402D90:
	r30_159 = dwLoc24
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):fp + -56 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32)

l00402DB0:
	word32 r31_175
	Mem162[r30_159 + 4:word32] = r3
	Mem166[r30_159 + 4:word32] = r3 & -3 | 0x00000001
	Mem167[r3:word32] = r30_159
	branch Test(GE,cond(r3_153 - 0x00000001)) l00402DFC
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32)

l00402DFC:
	branch Test(NE,cond((Mem167[dwLoc24 + 4:word32] & 0x00000003) - 0x00000002)) l00403014
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32) Local -0028(32)

l00403014:
	word32 r11_125 = Mem23[dwLoc28_124:word32]
	branch Test(EQ,cond(r11_125)) l00403058
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r9:<invalid> r2:<invalid> r30:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0028(32)

l00403024:
	word32 r4_122 = Mem23[r2_136 + 104:word32]
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r11:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r9:<invalid> r2:<invalid> r30:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0028(32)

l0040302C:
	Mem127[r11_125:word32] = Mem23[r4_122 + 8:word32]
	Mem133[r4_122 + 8:word32] = Mem127[dwLoc28_124:word32]
	word32 r5_130 = dwLoc28_124 + 4
	r11_125 = Mem133[r5_130:word32]
	dwLoc28_124 = r5_130
	branch Test(NE,cond(r11_125)) l0040302C
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r11:<invalid> r10:<invalid> r6:<invalid> r3:<invalid> r29:fp + -36 r9:<invalid> r2:<invalid> r30:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0028(32)

l00403058:
	word32 r3_120
	*r3Out = -1
	return r2_136
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r11:<invalid> r3:<invalid> r10:<invalid> r6:<invalid> r29:fp + -36 r9:<invalid> r2:<invalid> r30:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr

l00402E10:
	r31_175 = Mem167[r2_136 + 104:word32]
	word32 r5_234 = Mem167[dwLoc24:word32]
	branch Test(NE,cond(r5_234 - (r31_175 + 12))) l00402E4C
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30 r31 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32)

l00402E4C:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30 r31 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> r6:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32)

l00402E28:
	word32 r11_258 = (Mem167[r30_159 + 4:word32] & -4) + r4
	branch Test(GE,cond(Mem167[r31_175 + 16:word32] - r11_258)) l00402E50
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30 r31 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> r6:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32)

l00402E44:
	Mem260[r31_175 + 16:word32] = r11_258
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30 r31 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:-4 r10:<invalid> r11:<invalid> r30:<invalid> r6:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32) Local -0024(32)

l00402E50:
	fn00403070(r30_159, r4, r5_234, fp + -40)
	fn00403070(dwLoc24, (Mem167[Mem167[dwLoc24:word32] + 4:word32] & -4) - (Mem167[dwLoc24 + 4:word32] & -4), r30_159, fp + -40)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:-4 r10:<invalid> r11:<invalid> r30:<invalid> r6:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32)

l00402DD4:
	fn00402DEC(r3_153 + 3 << 0x02, lr)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32)

l00402E94:
	r31_175 = Mem167[r2_136 + 104:word32]
	Mem221[r31_175 + 16:word32] = r4 + r3
	fn00403070(r30_159, r4, r31_175 + 12, fp + -40)
	Mem223[r31_175 + 4:word32] = r30_159
	Mem224[r31_175:word32] = r30_159
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:fp + -56 r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:fp + -36 r10:<invalid> r11:<invalid> r30:<invalid> lr:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32)

l00402FB8:
	branch Test(LE,cond((Mem167[Mem167[r31_175 + 4:word32] + 4:word32] & -4) - r3)) l00402FFC
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:-4 r10:<invalid> r11:<invalid> r30:<invalid> lr:<invalid> r6:-4 r9:<invalid> r7:<invalid> r8:<invalid> r28:fp + -40 r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> -32(fp):fp + -40 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32)

l00402FCC:
	branch Test(LT,cond((Mem167[Mem167[r30_159:word32] + 4:word32] & -4) - (Mem167[r30_159 + 4:word32] & -4) + -8 - Mem167[Mem167[r2_136 + 220:word32]:word32])) l00402FFC
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:-4 r10:<invalid> r11:<invalid> r30:<invalid> lr:<invalid> r6:-4 r9:<invalid> r7:<invalid> r8:<invalid> r28:fp + -40 r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> -32(fp):fp + -40 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32)

l00402FF8:
	Mem212[r31_175 + 4:word32] = r30_159
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:<invalid> r10:<invalid> r11:<invalid> r30:<invalid> lr:<invalid> r6:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r28:fp + -40 r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> -32(fp):fp + -40 8(fp):lr
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0018(32) Local -001C(32)

l00402FFC:
	word32 r3_201
	*r3Out = 0
	return r2_136
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r12:<invalid> r26:r3 r27:r4 r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r3:<invalid> r29:<invalid> r10:<invalid> r11:<invalid> r30:<invalid> lr:<invalid> r6:<invalid> r9:<invalid> r7:<invalid> r8:<invalid> r28:fp + -40 r2:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> -32(fp):fp + -40 8(fp):lr

fn00402CE0_exit:
// DataOut: r2 r26 r27 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r26:<invalid> r27:<invalid> r31:<invalid> r5:<invalid> r4:<invalid> r0:<invalid> cr1:<invalid> r11:<invalid> r28:<invalid> r29:<invalid> r30:<invalid> lr:lr r3:<invalid> r10:<invalid> r6:<invalid> r9:<invalid> r2:<invalid> r7:<invalid> r8:<invalid> ctr:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0 -40(fp):<invalid> -32(fp):fp + -40 8(fp):lr



void fn00402DEC(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r11
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00402DEC_entry:
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00402DEC:
	return
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00402DEC_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r0:lr + r11 lr:lr + r11



void fn00403070(word32 r3, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3 r4 r5 r6
// LiveOut:
// Trashed: crX cr1 r10 r11 r3 r4 r6 r7 r8 r9
// Preserved: r1
fn00403070_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r3 r30 r31 r4 r5 r6
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403070:
	word32 r9_4 = Mem0[r3 + 4:word32]
	branch Test(EQ,cond((r9_4 & 0x00000003) - 0x00000002)) l004030FC
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r3 r30 r31 r4 r5 r6 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403080:
	word32 r10_25 = Mem0[r5 + 4:word32]
	branch Test(NE,cond((r10_25 & 0x00000003) - 0x00000002)) l004030B4
// DataOut: cr0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r3 r30 r31 r4 r5 r6 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp r9:<invalid> r7:<invalid> cr1:<invalid>

l004030B4:
	word32 r4_39 = (r9_4 & -4) + r4
	branch Test(EQ,cond((r10_25 & -4) - r4_39)) l004030FC
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r3 r30 r31 r5 r6
// DataOut (flags): crX
// SymbolicIn: r1:fp r9:<invalid> r7:<invalid> cr1:<invalid> r10:<invalid>

l004030D0:
	word32 r4_43 = Mem0[r6:word32]
	word32 r8_45 = Mem0[r4_43:word32]
	Mem48[r6:word32] = r4_43 + 4
	Mem49[r8_45 + 4:word32] = r4_39
	Mem51[r8_45 + 4:word32] = r4_39 & -2 | 0x00000002
	Mem52[r3:word32] = r8_45
	r3 = r8_45
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r3 r30 r31 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp r9:<invalid> r7:-4 cr1:<invalid> r10:<invalid> r4:<invalid> r11:<invalid>

l00403090:
	word32 r4_31 = (r9_4 & -4) + r4
	Mem32[r5 + 4:word32] = r4_31
	Mem36[r5 + 4:word32] = r4_31 & -2 | 0x00000002
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r3 r30 r31 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp r9:<invalid> r7:<invalid> cr1:<invalid> r10:<invalid>

l004030FC:
	Mem24[r3:word32] = r5
	return
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r9:<invalid> r7:<invalid> cr1:<invalid> r10:<invalid> r6:-4 r4:<invalid> r11:<invalid> r8:<invalid> r3:<invalid>

fn00403070_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r9:<invalid> r7:<invalid> cr1:<invalid> r10:<invalid> r6:-4 r4:<invalid> r11:<invalid> r8:<invalid> r3:<invalid>



void fn00403104(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: cr1 r10 r11 r3 r4 r5 r8 r9
// Preserved: r1
fn00403104_entry:
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403104:
	word32 r8_5 = Mem0[r2 + 228:word32]
	word32 r3_8 = (int32) (int16) r3
	Mem12[Mem0[r2 + 164:word32]:word32] = r3_8
	word32 r10_13 = 0
	word32 r11_14 = r8_5
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403128:
	branch Test(EQ,cond((int32) Mem12[r11_14:int16] - r3_8)) l00403148
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403148:
	Mem35[Mem12[r2 + 124:word32]:word32] = Mem12[r8_5 + 2 + (r10_13 << 0x02):word16]
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403134:
	r11_14 = r11_14 + 4
	r10_13 = r10_13 + 1
	branch Test(LT,cond(r11_14 - (r8_5 + 184))) l00403128
// DataOut: cr0 r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403144:
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403160:
	Mem30[Mem12[r2 + 124:word32]:word32] = 22
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l0040316C:
	return
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

fn00403104_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r8:<invalid> r3:<invalid> r9:<invalid> r5:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>



word32 fn00403170(word32 r2, word32 r3, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r3Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r28 r29 r3 r30 r31
// LiveOut: r2 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00403170_entry:
	*r28Out = r28
	*r29Out = r29
// DataOut: cr0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) v3(32)

l00403170:
	Mem5[v3:word32] = r30
	Mem9[v3 + 4:word32] = r31
	word32 r31_105 = r3
	word32 r30_104 = -1
	branch Test(EQ,cr0) l004031AC
// DataOut: cr0 r11 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l004031AC:
	branch Test(EQ,cr0) l00403228
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r11:<invalid> r12:lr r4:<invalid> r30:-1 -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l004031B4:
	word32 r3_87
	word32 r29_88
	word32 r30_89
	word32 r31_90
	word32 r2_91 = fn004012B0(r2, r3, r29, -1, r3, cr0, dwLoc38, out r3_87, out r29_88, out r30_89, out r31_90)
	word32 r29_95
	word32 r30_96
	word32 r2_97 = fn00403A0C(r2_91, r31_90, r29_88, r3_87, cr0, dwLoc38, out r29_95, out r30_96)
	word32 r3_101
	word32 r28_102
	word32 r29_103
	word32 r0_106 = fn00403898(r0, r2_97, Mem9[r31_90 + 16:word32], r28, r29_95, r30_96, r31_90, cr0, dwLoc38, out r2, out r3_101, out r28_102, out r29_103, out r30_104, out r31_105)
	branch Test(GE,cond(r3_101)) l004031F0
// DataOut: cr0 r0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r11:<invalid> r12:lr r4:<invalid> r30:-1 -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l004031F0:
	word32 r3_111 = Mem9[r31_105 + 28:word32]
	branch Test(EQ,cond(r3_111)) l00403228
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00403228:
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l004031FC:
	word32 r2_113
	word32 r3_114
	word32 r29_115
	word32 r31_117
	word32 r30_116
	fn00403744(r0_106, r2, r3_111, r29_103, r30_104, r31_105, cr0, dwLoc38, out r2_113, out r3_114, out r29_115, out r30_116, out r31_117)
	branch Test(EQ,cond(r3_114)) l00403210
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l0040320C:
	r30_116 = -1
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0040(32)

l00403210:
	word32 r29_123
	r2 = fn00402BA0(r2_113, Mem9[r31_117 + 28:word32], r29_115, r30_116, r31_117, cr0, dwLoc38, out r29_123, out r30_104, out r31_105)
	Mem129[r31_105 + 28:word32] = 0
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l004031E4:
	r30_104 = -1
// DataOut: cr0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l0040322C:
	Mem69[r31_105 + 12:word32] = 0
	word32 r3_67
	*r3Out = r30_104
	return r2
// DataOut: cr0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:0 r12:<invalid> r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr

l00403194:
	Mem41[r3 + 12:word32] = 0
	word32 r3_50
	*r3Out = -1
	return r2
// DataOut: cr0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r11:<invalid> r12:lr r4:<invalid> r30:-1 -64(fp):fp 8(fp):lr

fn00403170_exit:
// DataOut: r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:<invalid> r11:<invalid> r12:lr r4:<invalid> r30:<invalid> r3:<invalid> cr1:<invalid> r29:<invalid> r5:<invalid> r0:<invalid> lr:lr r28:<invalid> r6:<invalid> r7:<invalid> r10:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -64(fp):fp 8(fp):lr



word32 fn00403248(word32 r2, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: lr r1
fn00403248_entry:
// DataOut: r2 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0024(32)

l00403248:
	return fn00403F84(r2, dwLoc24)
// DataOut: r0 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403248_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r2:<invalid> lr:lr r0:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr



void fn0040326C(word32 r2, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r2 r29 r30 r31
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn0040326C_entry:
// DataOut: cr0 lr r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l0040326C:
	word32 r29_14
	word32 r30_15
	word32 r31_16
	word32 r2_17 = fn00403618(r2, 10, r29, r30, r31, cr0, dwLoc30, out r29_14, out r30_15, out r31_16)
	word32 r2_21
	word32 r29_22
	word32 r30_23
	word32 r31_24
	fn00403B08(r2_17, 22, r29_14, r30_15, r31_16, lr, dwLoc30, out r2_21, out r29_22, out r30_23, out r31_24)
	word32 r30_28
	word32 r31_29
	fn004035A0(r2_21, 3, r29_22, r30_23, r31_24, dwLoc30, out r30_28, out r31_29)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040326C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r3:<invalid> r0:<invalid> lr:lr r4:<invalid> r5:<invalid> r30:<invalid> r11:<invalid> cr1:<invalid> r31:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r29:<invalid> r6:<invalid> r7:<invalid> ctr:<invalid> r2:<invalid> -56(fp):fp 8(fp):lr



void fn004032AC(word32 r3, byte cr0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r3
// LiveOut:
// Trashed: crX cr1 r10 r11 r4 r9
// Preserved: r1
fn004032AC_entry:
// DataOut: cr0 lr r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004032AC:
	branch Test(EQ,cond(r3)) l004032F8
// DataOut: cr0 lr r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004032B4:
	branch Test(EQ,cr0) l004032F8
// DataOut: cr0 lr r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond(r3)

l004032C0:
	word32 r11_21 = r3 + 1
	word32 r10_22 = Mem0[r3:byte]
// DataOut: cr0 lr r0 r10 r11 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond(r3) r4:<invalid>

l004032C8:
	word32 r4_25 = Mem0[r11_21 + 0:byte]
	r11_21 = r11_21 + 1
	Mem27[r11_21:byte] = r10_22
	r10_22 = r4_25
	branch Test(NE,cond(r4_25)) l004032C8
// DataOut: cr0 lr r0 r10 r11 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r11:<invalid> r10:<invalid>

l004032DC:
	word32 r10_30 = r11_21 - r3
	word32 r9_32 = 255
	branch Test(GE,cond(r10_30 - 255)) l004032F0
// DataOut: cr0 lr r0 r10 r2 r28 r29 r3 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r11:<invalid> r10:<invalid>

l004032EC:
	r9_32 = r10_30
// DataOut: cr0 lr r0 r2 r28 r29 r3 r30 r31 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> r9:255

l004032F0:
	Mem36[r3:byte] = (int32) (int8) r9_32
// DataOut: cr0 lr r0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> r9:<invalid>

l004032F8:
	return
// DataOut: cr0 lr r0 r2 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> r9:<invalid>

fn004032AC_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r4:<invalid> r11:<invalid> r10:<invalid> r9:<invalid>



word32 fn004032FC(word32 r2, word32 r4, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4
// LiveOut: r2 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn004032FC_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) v13(32)

l004032FC:
	Mem24[v13:word32] = r30
	Mem28[v13 + 4:word32] = r31
	word32 r25_64
	word32 r26_65
	word32 r27_66
	word32 r28_67
	word32 r29_68
	word32 r30_69
	word32 r31_70
	word32 r2_121
	word32 r0_71 = fn004004B4(r2, fp + -40, r4, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, fp + -40, cr0, lr, dwLoc58, dwLoc40, out r2_121, out r25_64, out r26_65, out r27_66, out r28_67, out r29_68, out r30_69, out r31_70)
	word32 r4_73 = Mem28[r31_70 + 4:word32]
	Mem78[r31_70 + 4:word32] = r4_73 + -1
	word32 r30_119 = 0x00000000
	branch Test(LE,cond(r4_73)) l0040339C
// DataOut: cr0 lr r0 r2 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32)

l0040339C:
	word32 r3_113
	word32 r25_114
	word32 r26_115
	word32 r27_116
	word32 r28_117
	word32 r29_118
	word32 r31_120
	r2_121 = fn00401598(r0_71, r2_121, 0, r31_70, r25_64, r26_65, r27_66, r28_67, r29_68, 0x00000000, r31_70, cr0, lr, dwLoc58, out r3_113, out r25_114, out r26_115, out r27_116, out r28_117, out r29_118, out r30_119, out r31_120)
// DataOut: cr0 r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -96 r12:<invalid> r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r0:<invalid> r4:<invalid> r30:<invalid> cr1:<invalid> r23:<invalid> r22:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r29:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -96(fp):fp -40(fp):r3 -36(fp):<invalid> -32(fp):r3 -28(fp):66 8(fp):lr 24(fp):r3 28(fp):r4 32(fp):r5 36(fp):r6 40(fp):r7 44(fp):r8 48(fp):r9 52(fp):r10
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l00403380:
	Mem107[Mem78[r31_70:word32]:byte] = 0
	Mem110[r31_70:word32] = Mem107[r31_70:word32] + 1
// DataOut: cr0 r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -96 r12:<invalid> r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r0:<invalid> r4:<invalid> r30:<invalid> cr1:<invalid> r23:<invalid> r22:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r29:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -96(fp):fp -40(fp):r3 -36(fp):<invalid> -32(fp):r3 -28(fp):66 8(fp):lr 24(fp):r3 28(fp):r4 32(fp):r5 36(fp):r6 40(fp):r7 44(fp):r8 48(fp):r9 52(fp):r10
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l004033AC:
	word32 r3_91
	*r3Out = r30_119
	word32 r30_95
	*r30Out = dwLoc08
	word32 r31_98
	*r31Out = dwLoc04
	return r2_121
// DataOut: cr0 r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -96 r12:<invalid> r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r0:<invalid> r4:<invalid> r30:<invalid> cr1:<invalid> r23:<invalid> r22:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r29:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -96(fp):fp -40(fp):<invalid> -36(fp):<invalid> -32(fp):r3 -28(fp):66 8(fp):lr 24(fp):r3 28(fp):r4 32(fp):r5 36(fp):r6 40(fp):r7 44(fp):r8 48(fp):r9 52(fp):r10

fn004032FC_exit:
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r31:<invalid> r3:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r0:<invalid> r4:<invalid> r30:<invalid> cr1:<invalid> lr:lr r23:<invalid> r22:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r29:<invalid> r10:<invalid> r11:<invalid> r9:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> -96(fp):fp -40(fp):<invalid> -36(fp):<invalid> -32(fp):r3 -28(fp):66 8(fp):lr 24(fp):r3 28(fp):r4 32(fp):r5 36(fp):r6 40(fp):r7 44(fp):r8 48(fp):r9 52(fp):r10



word32 fn004033C4(word32 r0, word32 r2, word32 r3, word32 r4, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// LiveOut: r2 r27 r28 r29 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r3
fn004033C4_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) v13(32)

l004033C4:
	Mem24[v13:word32] = r29
	Mem28[v13 + 4:word32] = r30
	Mem31[v13 + 8:word32] = r31
	word32 r3_44
	word32 r25_45
	word32 r26_46
	word32 r27_47
	word32 r28_48
	word32 r29_49
	word32 r31_50
	word32 r2_51 = fn004002F8(r0, r2, r3, r25, r26, r27, r28, r29, r30, r3, cr0, lr, dwLoc40, out r3_44, out r25_45, out r26_46, out r27_47, out r28_48, out r29_49, out r31_50)
	word32 r2_71
	word32 r25_72
	word32 r26_73
	word32 r27_74
	word32 r28_75
	word32 r29_76
	word32 r30_77
	word32 r31_78
	fn004004B4(r2_51, r31_50, r4, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25_45, r26_46, r27_47, r28_48, r29_49, r3_44, r31_50, cr0, lr, dwLoc40, dwLoc28, out r2_71, out r25_72, out r26_73, out r27_74, out r28_75, out r29_76, out r30_77, out r31_78)
	word32 r29_92
	*r29Out = dwLoc10
	word32 r30_95
	*r30Out = dwLoc0C
	word32 r31_98
	*r31Out = dwLoc08
	word32 r29_84
	return fn00400430(r2_71, r30_77, r31_78, 0x00000000, r30_77, cr0, dwLoc40, out r29_84)
// DataOut: cr0 r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004033C4_exit:
// DataOut: r2 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r31:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r30:<invalid> r5:<invalid> r29:<invalid> lr:lr cr1:<invalid> r23:<invalid> r22:<invalid> r6:<invalid> r13:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> r11:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> ctr:<invalid> r9:<invalid> r8:<invalid> -72(fp):fp 8(fp):lr 24(fp):r3 28(fp):r4 32(fp):r5 36(fp):r6 40(fp):r7 44(fp):r8 48(fp):r9 52(fp):r10



word32 fn00403450(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// LiveOut: r2 r25 r26 r27 r28 r29 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00403450_entry:
	*r25Out = r25
	*r26Out = r26
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) v3(32)

l00403450:
	Mem5[v3:word32] = r27
	Mem9[v3 + 4:word32] = r28
	Mem12[v3 + 8:word32] = r29
	Mem15[v3 + 12:word32] = r30
	Mem18[v3 + 16:word32] = r31
	word32 r28_116 = r6
	branch Test(EQ,cond(r5 - 4)) l004034B4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l0040347C:
	branch Test(EQ,cond(r6)) l004034A4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:r5 cr1:cond(r5 - 4) r12:lr r31:r3 r29:r4 r28:r6 r27:0 -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l00403484:
	branch Test(GT,cond(r6 - 0x7FFFFFFF)) l004034A4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:r5 cr1:cond(r6) r12:lr r31:r3 r29:r4 r28:r6 r27:0 -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l00403494:
	branch Test(EQ,cond(r5)) l004034B4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:r5 cr1:cond(r6 - 0x7FFFFFFF) r12:lr r31:r3 r29:r4 r28:r6 r27:0 r4:0x7FFFFFFF -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l0040349C:
	branch Test(EQ,cond(r5 - 64)) l004034B4
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:r5 cr1:cond(r5) r12:lr r31:r3 r29:r4 r28:r6 r27:0 r4:0x7FFFFFFF -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l004034B4:
	word32 r3_62
	word32 r29_63
	word32 r30_64
	word32 r31_119
	word32 r2_66 = fn004012B0(r2, r3, r4, r5, r3, cr0, dwLoc48, out r3_62, out r29_63, out r30_64, out r31_119)
	word32 r30_71
	word32 r29_117
	word32 r2_109 = fn00403A0C(r2_66, r31_119, r29_63, r30_64, cr0, dwLoc48, out r29_117, out r30_71)
	word32 r11_76 = Mem18[r31_119 + 12:word32]
	Mem79[r31_119 + 12:word32] = r11_76 & -14605
	branch Test(EQ,cr0) l004034F8
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:r5 cr1:<invalid> r12:lr r31:r3 r29:r4 r28:r6 r27:0 r4:0x7FFFFFFF -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l004034F8:
	branch Test(NE,cond(r29_117)) l00403540
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:r6 r27:0 r3:<invalid> r0:<invalid> r11:<invalid> r4:-14605 r5:0 r6:-9 r10:<invalid> r7:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -0050(32)

l00403540:
	Mem156[r31_119 + 12:word32] = r11_76 & -14605 | 0x00000100
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:r6 r27:0 r3:<invalid> r0:<invalid> r11:<invalid> r4:-14605 r5:0 r6:-9 r10:<invalid> r7:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00403500:
	word32 r3_135
	word32 r25_136
	word32 r26_137
	word32 r27_138
	word32 r29_140
	word32 r30_141
	fn00400F9C(r0, r2_109, r6, r25, r26, 0, r6, r29_117, r30_71 & 0x00000004, r31_119, cr0, lr, dwLoc48, out r2_109, out r3_135, out r25_136, out r26_137, out r27_138, out r28_116, out r29_140, out r30_141, out r31_119)
	r29_117 = r3_135
	branch Test(NE,cond(r3_135)) l00403530
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:r6 r27:0 r3:<invalid> r0:<invalid> r11:<invalid> r4:-14605 r5:0 r6:-9 r10:<invalid> r7:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00403530:
	Mem154[r31_119 + 12:word32] = Mem79[r31_119 + 12:word32] | 0x00000008
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:<invalid> r27:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> r9:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00403518:
	word32 r4_147 = Mem79[r2_109 + 76:word32]
	Mem151[r4_147:word32] = Mem79[r4_147:word32] + 1
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:<invalid> r27:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> r9:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32)

l004034E4:
	Mem127[r31_119 + 12:word32] = r11_76 & -14605 | 0x00000004
	r29_117 = r31_119 + 20
	r28_116 = 1
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:r6 r27:0 r3:<invalid> r0:<invalid> r11:<invalid> r4:-14605 r5:0 r6:-9 r10:<invalid> r7:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00403548:
	Mem121[r31_119 + 8:word32] = r29_117
	Mem122[r31_119 + 24:word32] = r28_116
	Mem123[r31_119:word32] = r29_117
	Mem125[r31_119 + 4:word32] = 0
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:<invalid> r27:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32)

l0040355C:
	return r2_109
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:<invalid> cr1:<invalid> r12:<invalid> r31:<invalid> r29:<invalid> r28:<invalid> r27:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> r4:<invalid> r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> r9:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr

l004034A4:
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -80 r30:r5 cr1:<invalid> r12:lr r31:r3 r29:r4 r28:r6 r27:0 r4:0x7FFFFFFF -80(fp):fp 8(fp):lr

fn00403450_exit:
// DataOut: r2 r25 r26 r27 r28 r29 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r30:<invalid> cr1:<invalid> r12:lr r31:<invalid> r29:<invalid> r28:<invalid> r27:<invalid> r4:<invalid> r3:<invalid> r0:<invalid> r11:<invalid> lr:lr r5:<invalid> r6:<invalid> r10:<invalid> r7:<invalid> r2:<invalid> r9:<invalid> ctr:<invalid> r25:<invalid> r26:<invalid> r8:<invalid> -80(fp):fp 8(fp):lr



void fn00403574(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r29 r3 r30 r31
// LiveOut:
// Trashed: cr1 ctr r0 r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r0 r1
fn00403574_entry:
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00403574:
	word32 r30_15
	word32 r31_16
	fn004024F0(r2, r3, 0, 0, r29, r30, r31, dwLoc30, out r30_15, out r31_16)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403574_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r4:<invalid> r5:<invalid> r0:<invalid> lr:lr cr1:<invalid> r30:<invalid> r31:<invalid> r3:<invalid> r29:<invalid> r11:<invalid> r2:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr



word32 fn004035A0(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, word32 dwArg08, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r29 r3 r30 r31
// LiveOut: r29 r30 r31
// Trashed: cr1 ctr r0 r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r0 r1
fn004035A0_entry:
// DataOut: r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l004035A0:
	word32 r30_15
	word32 r31_16
	return fn004024F0(r2, r3, 1, 0, r29, r30, r31, dwLoc30, out r30_15, out r31_16)
// DataOut: r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004035A0_exit:
// DataOut: r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r4:<invalid> r5:<invalid> r0:<invalid> lr:lr cr1:<invalid> r30:<invalid> r31:<invalid> r3:<invalid> r29:<invalid> r11:<invalid> r2:<invalid> ctr:<invalid> -56(fp):fp 8(fp):lr



word32 fn004035CC(word32 r2, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r2Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r30 r31
// LiveOut: r0 r2 r29 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004035CC_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0024(32)

l004035CC:
	word32 r29_14
	word32 r30_15
	word32 r31_16
	word32 r2_17 = fn00403618(r2, 252, r29, r30, r31, cr0, dwLoc30, out r29_14, out r30_15, out r31_16)
	branch Test(EQ,cond(Mem0[Mem0[r2_17 + 232:word32]:word32])) l00403600
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0024(32) Local -0038(0)

l004035F0:
	r0 = fn00403F10(Mem0[Mem0[r2_17 + 232:word32]:word32], dwLoc24)
	r2_17 = dwLoc24
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r12:<invalid> r3:<invalid> r4:<invalid> cr1:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r0:<invalid> r31:<invalid> r29:<invalid> r30:<invalid> ctr:<invalid> r2:<invalid> -56(fp):fp 8(fp):lr
// LocalsOut: Local -0038(0)

l00403600:
	word32 r29_28
	word32 r30_29
	word32 r31_30
	word32 r2_31
	*r2Out = fn00403618(r2_17, 255, r29_14, r30_15, r31_16, cr0, dwLoc30, out r29_28, out r30_29, out r31_30)
	return r0
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -56 r12:<invalid> r3:<invalid> r4:<invalid> cr1:<invalid> r11:<invalid> r2:<invalid> r0:<invalid> ctr:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r31:<invalid> r29:<invalid> r30:<invalid> -56(fp):fp 8(fp):lr

fn004035CC_exit:
// DataOut: r0 r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r3:<invalid> r4:<invalid> cr1:<invalid> r11:<invalid> r2:<invalid> lr:lr r0:<invalid> ctr:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r31:<invalid> r29:<invalid> r30:<invalid> -56(fp):fp 8(fp):lr



word32 fn00403618(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30 r31
// LiveOut: r2 r29 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00403618_entry:
	*r29Out = r29
	*r30Out = r30
	*r31Out = r31
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00403618:
	word32 r8_6 = Mem0[r2 + 236:word32]
	word32 r10_12 = 0
	word32 r11_13 = r8_6
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0040(32)

l00403638:
	branch Test(EQ,cond(Mem0[r11_13:word32] - r3)) l00403654
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: Local -0040(32)

l00403644:
	r11_13 = r11_13 + 8
	r10_12 = r10_12 + 1
	branch Test(LT,cond(r11_13 - (r8_6 + 88))) l00403638
// DataOut: cr0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r8 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: Local -0040(32)

l00403654:
	word32 r11_20 = r10_12 << 0x03
	branch Test(NE,cond(Mem0[r8_6 + r11_20:word32] - r3)) l004036A0
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r8
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: Local -0040(32)

l00403664:
	word32 r4_48 = Mem0[r8_6 + 4 + r11_20:word32]
	word32 r5_52 = 0
	branch Test(EQ,cond(Mem0[r4_48:byte])) l00403694
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> -64(fp):fp 8(fp):lr
// LocalsOut: Local -0040(32)

l00403684:
	r5_52 = r5_52 + 1
	branch Test(NE,cond(Mem0[r4_48 + r5_52:byte])) l00403684
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4 r5
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> r5:<invalid> r6:<invalid> -64(fp):fp -8(fp):<invalid> 8(fp):lr
// LocalsOut: Local -0040(32)

l00403694:
	word32 r3_61
	word32 r29_62
	word32 r30_63
	word32 r31_64
	fn00402248(r2, 2, r4_48, r5_52, r29, r30, r31, cr0, dwLoc38, out r2, out r3_61, out r29_62, out r30_63, out r31_64)
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> r5:<invalid> r6:<invalid> -64(fp):fp -8(fp):<invalid> 8(fp):lr

l004036A0:
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r12:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r7:<invalid> r0:<invalid> r31:<invalid> r29:<invalid> r30:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp -8(fp):<invalid> 8(fp):lr

fn00403618_exit:
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r4:<invalid> cr1:<invalid> lr:lr r5:<invalid> r6:<invalid> r3:<invalid> r7:<invalid> r0:<invalid> r31:<invalid> r29:<invalid> r30:<invalid> ctr:<invalid> r2:<invalid> -64(fp):fp -8(fp):<invalid> 8(fp):lr



word32 fn004036B0(word32 r2, word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3 r4
// LiveOut: r3
// Trashed: cr1 r10 r11 r3 r5 r9
// Preserved: r1
fn004036B0_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004036B0:
	word32 r10_4 = Mem0[r2 + 104:word32]
	word32 r11_5 = Mem0[r10_4:word32]
	branch Test(NE,cond(r11_5 - (r10_4 + 12))) l004036CC
// DataOut: cr0 lr r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004036CC:
	branch Test(LE,cond((Mem0[r11_5 + 4:word32] & -4) - r3)) l004036E8
// DataOut: cr0 lr r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid>

l004036E8:
	branch Test(GT,cond((Mem0[r10_4 + 16:word32] & -4) - r3)) l00403700
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l00403700:
	word32 r10_26 = r11_5
// DataOut: cr0 lr r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l00403704:
	word32 r11_28 = Mem0[r10_26:word32]
	branch Test(GT,cond((Mem0[r11_28 + 4:word32] & -4) - r3)) l00403720
// DataOut: cr0 lr r0 r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l00403720:
	Mem33[r4:word32] = r10_26
	word32 r11_36 = 0
	branch Test(EQ,cond((Mem33[r10_26 + 4:word32] & -4) - r3)) l0040373C
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l00403738:
	r11_36 = 1
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:0 r5:<invalid> cr1:<invalid> r9:<invalid>

l0040373C:
	return r11_36
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:<invalid>

l00403718:
	r10_26 = r11_28
// DataOut: cr0 lr r0 r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l004036F8:
	return -2
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l004036E0:
	return -1
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r9:-4

l004036C4:
	return -3
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid>

fn004036B0_exit:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r10:<invalid> r11:<invalid> r5:<invalid> cr1:<invalid> r3:<invalid> r9:<invalid>



word32 fn00403744(word32 r0, word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r0 r2 r29 r3 r30 r31
// LiveOut: r0 r2 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r8 r9
// Preserved: lr r1
fn00403744_entry:
	*r29Out = r29
	*r30Out = r30
	*r31Out = r31
	*r2Out = r2
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) v9(32)

l00403744:
	Mem14[v9:word32] = r29
	Mem18[v9 + 4:word32] = r30
	Mem21[v9 + 8:word32] = r31
	branch Test(EQ,cr0) l00403880
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l00403760:
	word32 r11_149 = 0
	branch Test(EQ,cond(Mem21[r3:byte])) l00403780
// DataOut: cr0 r0 r11 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr -408(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l00403770:
	r11_149 = r11_149 + 1
	branch Test(NE,cond(Mem21[r3 + r11_149:byte])) l00403770
// DataOut: cr0 r0 r11 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> -408(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l00403780:
	branch Test(GE,cond(r11_149 - 0x00000100)) l00403880
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> -408(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l00403880:
	Mem53[Mem21[r2 + 124:word32]:word32] = 2
	word32 r3_54
	*r3Out = -1
	return r0
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> -408(fp):fp 8(fp):lr

l00403788:
	word32 r11_66 = 0
// DataOut: cr0 r0 r11 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> -408(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l00403790:
	word32 r4_68 = Mem21[r3 + r11_66:byte]
	Mem70[fp + -352 + r11_66:byte] = (byte) r4_68
	r11_66 = r11_66 + 1
	branch Test(NE,cond(r4_68)) l00403790
// DataOut: cr0 r0 r11 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> r29:fp + -352 -408(fp):fp -352(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l004037A4:
	fn004032AC(fp + -352, cr0)
	word32 r11_75 = 0
	word32 ctr_77 = 5
// DataOut: cr0 ctr r11 r2 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> r29:fp + -352 -408(fp):fp -352(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l004037C4:
	Mem81[fp + -96 + r11_75:word32] = 0
	word32 r11_82 = r11_75 + 4
	Mem83[fp + -96 + r11_82:word32] = 0
	Mem85[fp + -96 + (r11_82 + 4):word32] = 0
	Mem87[fp + -96 + (r11_82 + 8):word32] = 0
	r11_75 = r11_82 + 12
	ctr_77 = ctr_77 - 0x00000001
	branch ctr_77 != 0x00000000 l004037C4
// DataOut: cr0 ctr r11 r2 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> r29:fp + -352 r3:fp + -352 r0:r0 r31:fp + -96 r9:5 ctr:<invalid> r30:0 r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(0) Local -0198(0)

l004037E8:
	word32 r0_101 = fn00403F54(r2, dwLoc0184)
	branch Test(NE,cond(fp + -96)) l00403840
// DataOut: cr0 r0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:lr r11:<invalid> cr1:<invalid> r29:fp + -352 r3:fp + -352 r0:r0 r31:fp + -96 r9:5 ctr:<invalid> r30:0 r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(32) Local -0198(32)

l00403800:
	word32 r11_131 = 0
	word32 ctr_133 = 5
// DataOut: cr0 ctr r11 r2 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:<invalid> r11:<invalid> cr1:cond(fp + -96) r29:fp + -352 r3:fp + -96 r0:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r2:<invalid> r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(32) Local -0198(32)

l0040380C:
	Mem136[fp + -96 + r11_131:word32] = 0
	word32 r11_137 = r11_131 + 4
	Mem138[fp + -96 + r11_137:word32] = 0
	Mem140[fp + -96 + (r11_137 + 4):word32] = 0
	Mem142[fp + -96 + (r11_137 + 8):word32] = 0
	r11_131 = r11_137 + 12
	ctr_133 = ctr_133 - 0x00000001
	branch ctr_133 != 0x00000000 l0040380C
// DataOut: cr0 ctr r11 r2 r28
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:<invalid> r11:<invalid> cr1:cond(fp + -96) r29:fp + -352 r3:fp + -96 r0:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r2:<invalid> r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0184(32) Local -0198(32)

l00403830:
	r0_101 = fn00403F6C(dwLoc0184, dwLoc0184)
// DataOut: cr0 r0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:<invalid> r11:<invalid> cr1:cond(fp + -96) r29:fp + -352 r3:fp + -96 r0:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r2:<invalid> r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00403840:
	word32 r2_100
	*r2Out = dwLoc0184
	branch Test(EQ,cond(fp + -96)) l00403868
// DataOut: cr0 r0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:<invalid> r11:<invalid> cr1:cond(fp + -96) r29:fp + -352 r3:fp + -96 r0:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r2:<invalid> r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00403868:
	word32 r29_122
	*r29Out = dwLoc10
	word32 r30_124
	*r30Out = dwLoc0C
	word32 r31_126
	*r31Out = dwLoc08
	word32 r3_130
	*r3Out = 0
	return r0_101
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:<invalid> r11:<invalid> cr1:cond(fp + -96) r29:fp + -352 r3:fp + -96 r0:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r2:<invalid> r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr

l00403848:
	fn00403104(dwLoc0184, fp + -96)
	word32 r29_108
	*r29Out = dwLoc10
	word32 r30_111
	*r30Out = dwLoc0C
	word32 r31_114
	*r31Out = dwLoc08
	word32 r3_118
	*r3Out = -1
	return r0_101
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -408 r4:<invalid> r12:<invalid> r11:<invalid> cr1:cond(fp + -96) r29:fp + -352 r3:fp + -96 r0:<invalid> r31:fp + -96 r9:5 ctr:<invalid> r30:0 r2:<invalid> r10:<invalid> -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr

fn00403744_exit:
// DataOut: r0 r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r12:lr r5:<invalid> r3:<invalid> r11:<invalid> cr1:<invalid> r29:<invalid> r0:<invalid> r31:<invalid> r9:<invalid> ctr:<invalid> r30:<invalid> r2:<invalid> r8:<invalid> r10:<invalid> lr:lr -408(fp):fp -352(fp):<invalid> -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):fp + -352 8(fp):lr



word32 fn00403898(word32 r0, word32 r2, word32 r3, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 dwArg08, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r0 r2 r28 r29 r3 r30 r31
// LiveOut: r0 r2 r28 r29 r3 r30 r31
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00403898_entry:
	*r2Out = r2
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(0) v5(32)

l00403898:
	word32 r4_7 = Mem0[Mem0[r2 + 116:word32]:word32]
	Mem9[v5:word32] = r28
	Mem13[v5 + 4:word32] = r29
	Mem16[v5 + 8:word32] = r30
	Mem19[v5 + 12:word32] = r31
	word32 r3_113 = 0
	branch Test(LE,cond(r4_7 - r3)) l004039E4
// DataOut: cr0 r0 r2 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l004038C4:
	word32 r28_92 = r3 + Mem19[r2 + 120:word32]
	branch Test(EQ,cr0) l004039E4
// DataOut: cr0 r0 r11 r2 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l004039E4:
	word32 r5_63 = Mem19[r2 + 164:word32]
	Mem79[Mem19[r2 + 124:word32]:word32] = 9
	Mem81[r5_63:word32] = 0
	word32 r3_82
	*r3Out = -1
	return r0
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 r28:<invalid> r11:<invalid> -152(fp):fp 8(fp):lr

l004038DC:
	branch Test(NE,cr0) l0040399C
// DataOut: cr0 r0 r2 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 r28:<invalid> r11:<invalid> -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l0040399C:
// DataOut: cr0 r0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 r28:<invalid> r11:<invalid> -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l004038E4:
	word32 r10_145 = Mem19[r2 + 156:word32]
	branch Test(NE,cond(Mem19[r10_145 + (r3 << 0x02):word32] - -1)) l00403904
// DataOut: cr0 r0 r10 r11 r2 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 r28:<invalid> r11:<invalid> -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(0) Local -0098(0)

l00403904:
	word32 r0_159 = fn00403F24(r2, dwLoc84)
	word32 r2_160
	*r2Out = dwLoc84
	branch Test(EQ,cond(fp + -96)) l0040394C
// DataOut: cr0 r0 r2 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 r28:<invalid> r11:<invalid> r10:<invalid> r9:0x00000000 -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(32) Local -0098(32)

l0040394C:
	word32 r11_176 = 0
	word32 ctr_178 = 5
// DataOut: cr0 ctr r11 r2 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:cond(fp + -96) r12:<invalid> r3:fp + -96 r28:<invalid> r11:<invalid> r10:<invalid> r9:0x00000000 r31:fp + -96 r30:0 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -78(fp):0 -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(32) Local -0098(32)

l00403958:
	Mem181[fp + -96 + r11_176:word32] = 0
	word32 r11_182 = r11_176 + 4
	Mem183[fp + -96 + r11_182:word32] = 0
	Mem185[fp + -96 + (r11_182 + 4):word32] = 0
	Mem187[fp + -96 + (r11_182 + 8):word32] = 0
	r11_176 = r11_182 + 12
	ctr_178 = ctr_178 - 0x00000001
	branch ctr_178 != 0x00000000 l00403958
// DataOut: cr0 ctr r11 r2 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:cond(fp + -96) r12:<invalid> r3:fp + -96 r28:<invalid> r11:<invalid> r10:<invalid> r9:5 r31:fp + -96 r30:0 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):0 -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0084(32) Local -0098(32)

l0040397C:
	r3_113 = fp + -96
	r0 = fn00403F3C(dwLoc84, dwLoc84)
	*r2Out = dwLoc84
// DataOut: cr0 r0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:cond(fp + -96) r12:<invalid> r3:fp + -96 r28:<invalid> r11:<invalid> r10:<invalid> r9:5 r31:fp + -96 r30:0 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):0 -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l0040392C:
	fn00403104(dwLoc84, fp + -96)
	word32 r3_175
	*r3Out = -1
	return r0_159
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:cond(fp + -96) r12:<invalid> r3:fp + -96 r28:<invalid> r11:<invalid> r10:<invalid> r9:0x00000000 r31:fp + -96 r30:0 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -78(fp):0 -72(fp):<invalid> 8(fp):lr

l004038F8:
	Mem150[r10_145:word32] = 0
// DataOut: cr0 r0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:r3 r5:r3 cr1:<invalid> r12:lr r3:0 r28:<invalid> r11:<invalid> r10:<invalid> r9:0x00000000 -152(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l004039A0:
	Mem115[r28_92:byte] = 0
	branch Test(EQ,cond(r3_113)) l004039CC
// DataOut: cr0 r0 r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:<invalid> r5:r3 cr1:<invalid> r12:<invalid> r3:<invalid> r28:<invalid> r11:<invalid> r30:0 r10:<invalid> r9:<invalid> r31:fp + -96 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l004039CC:
	word32 r3_144
	*r3Out = 0
	return r0
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:<invalid> r5:r3 cr1:<invalid> r12:<invalid> r3:<invalid> r28:<invalid> r11:<invalid> r30:0 r10:<invalid> r9:<invalid> r31:fp + -96 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr

l004039AC:
	fn00403104(r2, r3_113)
	word32 r3_129
	*r3Out = -1
	return r0
// DataOut: cr0 r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -152 r4:<invalid> r29:<invalid> r5:r3 cr1:<invalid> r12:<invalid> r3:<invalid> r28:<invalid> r11:<invalid> r30:0 r10:<invalid> r9:<invalid> r31:fp + -96 r0:<invalid> ctr:<invalid> r2:<invalid> -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr

fn00403898_exit:
// DataOut: r0 r2 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r29:<invalid> r5:<invalid> cr1:<invalid> r12:lr r3:<invalid> r28:<invalid> r11:<invalid> r30:<invalid> r31:<invalid> r6:9 r7:0 r10:<invalid> r9:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r8:<invalid> lr:lr -152(fp):fp -96(fp):0 -92(fp):0 -88(fp):0 -84(fp):0 -78(fp):0 -74(fp):<invalid> -72(fp):<invalid> 8(fp):lr



word32 fn00403A0C(word32 r2, word32 r3, word32 r29, word32 r30, byte cr0, word32 dwArg08, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 r2 r29 r3 r30
// LiveOut: r2 r29 r30
// Trashed: crX cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r31
fn00403A0C_entry:
	*r29Out = r29
	*r30Out = r30
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00403A0C:
	branch Test(EQ,cr0) l00403A60
// DataOut: cr0 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: Local -0040(32)

l00403A2C:
	branch Test(EQ,cr0) l00403A60
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r11:<invalid> r12:lr r4:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr
// LocalsOut: Local -0040(32)

l00403A34:
	word32 r29_42
	word32 r30_43
	word32 r31_44
	r2 = fn00402BA0(r2, Mem0[r3 + 8:word32], r29, r30, r3, cr0, dwLoc38, out r29_42, out r30_43, out r31_44)
	word32 r4_47 = Mem0[r31_44 + 12:word32]
	Mem49[r31_44:word32] = 0
	Mem50[r31_44 + 8:word32] = 0
	Mem51[r31_44 + 4:word32] = 0
	Mem54[r31_44 + 12:word32] = r4_47 & -9
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:r3 r11:<invalid> r12:lr r4:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

l00403A60:
	return r2
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -64 r31:<invalid> r11:<invalid> r12:<invalid> r4:<invalid> r3:<invalid> cr1:<invalid> r30:<invalid> r0:<invalid> r5:0 r6:-9 r10:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr

fn00403A0C_exit:
// DataOut: r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r31:r31 r11:<invalid> r12:lr r4:<invalid> lr:lr r3:<invalid> cr1:<invalid> r30:<invalid> r0:<invalid> r5:0 r6:-9 r10:<invalid> r9:<invalid> r2:<invalid> ctr:<invalid> r8:<invalid> r7:<invalid> r29:<invalid> -64(fp):fp -8(fp):r31 8(fp):lr



word32 fn00403B08(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, word32 lr, word32 dwArg08, ptr32 & r2Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r2 r29 r3 r30 r31
// LiveOut: r0 r2 r29 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r1
fn00403B08_entry:
	*r29Out = r29
	*r2Out = r2
// DataOut: lr r0 r2 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) v3(32)

l00403B08:
	Mem5[v3:word32] = r29
	Mem9[v3 + 4:word32] = r30
	Mem12[v3 + 8:word32] = r31
	branch Test(GE,cond(r3 - 0x00000017)) l00403B94
// DataOut: lr r0 r11 r2 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00403B94:
	return r0
// DataOut: r0 r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:r3 r11:r3 + -2 cr1:cond(r3 - 0x00000017) r12:lr -72(fp):fp 8(fp):lr

l00403B28:
	word32 r0_38 = fn00403B84(r3 + -2 << 0x02, lr)
// DataOut: r0 r2 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:r3 r11:r3 + -2 cr1:cond(r3 - 0x00000017) r12:lr -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00403BAC:
	word32 r3_41 = fn00403C20(r2, r3)
	word32 r31_43 = Mem12[r3_41 + 8:word32]
	word32 r29_42 = r3_41
	branch Test(NE,cond(r31_43 - 0x00000001)) l00403BDC
// DataOut: r0 r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:r3 r11:r3 + -2 << 0x02 cr1:cond(r3 - 0x00000017) r12:lr r0:<invalid> lr:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00403BDC:
	branch Test(NE,cond(r31_43)) l00403BF0
// DataOut: r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:r3 r11:<invalid> cr1:<invalid> r12:lr r3:<invalid> r29:<invalid> r31:<invalid> r0:<invalid> lr:<invalid> r4:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00403BE4:
	word32 r30_84
	r29_42 = fn004035A0(r2, 3, r3_41, r3, r31_43, dwLoc40, out r30_84, out r31_43)
// DataOut: r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:r3 r11:<invalid> cr1:<invalid> r12:lr r3:<invalid> r29:<invalid> r31:<invalid> r0:<invalid> lr:<invalid> r4:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0034(32) Local -0048(32)

l00403BF0:
	Mem67[r29_42 + 8:word32] = 0
	word32 r2_70
	*r2Out = dwLoc34
	word32 r29_73
	*r29Out = dwLoc10
	return fn00403F10(r31_43, dwLoc34)
// DataOut: r0 r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:<invalid> r11:<invalid> cr1:<invalid> r12:<invalid> r3:<invalid> r29:<invalid> r31:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> lr:<invalid> r10:<invalid> r2:<invalid> ctr:<invalid> -72(fp):fp 8(fp):lr

l00403BC4:
	word32 r29_48
	*r29Out = dwLoc10
	return r0_38
// DataOut: r0 r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp + -72 r30:r3 r11:<invalid> cr1:<invalid> r12:lr r3:<invalid> r29:<invalid> r31:<invalid> r0:<invalid> lr:<invalid> r4:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr

fn00403B08_exit:
// DataOut: r0 r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp r30:<invalid> r11:<invalid> cr1:<invalid> r12:lr r31:<invalid> lr:lr r3:<invalid> r29:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> r10:<invalid> -72(fp):fp 8(fp):lr



word32 fn00403B84(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr r11
// LiveOut: r0
// Trashed: lr r0
// Preserved: r1
fn00403B84_entry:
// DataOut: lr r11 r2 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403B84:
	return lr + r11
// DataOut: r0 r2 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403B84_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r0:lr + r11 lr:lr + r11



word32 fn00403C20(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut: r3
// Trashed: cr1 r10 r11 r3 r4
// Preserved: r1
fn00403C20_entry:
// DataOut: r0 r2 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403C20:
	word32 r10_5 = Mem0[r2 + 244:word32]
	word32 r11_10 = r10_5 + 4
	word32 r10_9 = Mem0[Mem0[r2 + 240:word32]:word32] * 12 + r10_5
// DataOut: r0 r10 r11 r2 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403C38:
	branch Test(EQ,cond(Mem0[r11_10 + 0:word32] - r3)) l00403C50
// DataOut: r0 r10 r11 r2 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403C44:
	r11_10 = r11_10 + 12
	branch Test(GT,cond(r10_9 - r11_10)) l00403C38
// DataOut: r0 r10 r11 r2 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403C50:
	word32 r10_16 = r11_10
	branch Test(EQ,cond(Mem0[r11_10 + 4:word32] - r3)) l00403C64
// DataOut: r0 r10 r2 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403C60:
	r10_16 = 0
// DataOut: r0 r10 r2 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

l00403C64:
	return r10_16
// DataOut: r0 r2 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid>

fn00403C20_exit:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> r10:<invalid> r11:<invalid> cr1:<invalid> r3:<invalid>



void Win32CrtStartup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
Win32CrtStartup_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00403C6C:
	Mem13[Mem0[r2 + 340:word32]:word32] = fn00403DD8()
	fn00403CA0(r2, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, cr0, lr, dwLoc30)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

Win32CrtStartup_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:lr r0:<invalid> r4:<invalid> lr:lr r3:<invalid> cr1:<invalid> r29:<invalid> r31:<invalid> r5:<invalid> r6:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r30:<invalid> r2:<invalid> ctr:<invalid> r23:<invalid> r22:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> -56(fp):fp 8(fp):lr



void fn00403CA0(word32 r2, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, byte cr0, word32 lr, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// LiveOut:
// Trashed: crX cr1 ctr r0 r10 r11 r12 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1 r13
fn00403CA0_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) v5(8)

l00403CA0:
	word32 r4_7 = Mem0[Mem0[r2 + 212:word32]:word32]
	Mem9[v5:word32] = r29
	Mem13[v5 + 4:word32] = r30
	Mem16[v5 + 8:word32] = r31
	word32 r29_21 = Mem16[r2 + 344:word32]
	Mem26[r29_21:word32] = 0
	branch Test(NE,cond(r4_7)) l00403D38
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32) Local -0070(32)

l00403CD0:
	Mem112[Mem26[r2 + 348:word32]:word32] = 1
	r13 = Mem112[0x0000092C:word32]
	fn00403D7C(fp + -56)
	Mem134[Mem112[r2 + 352:word32]:word32] = fp + -24
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r4:<invalid> cr1:<invalid> r12:lr r29:<invalid> r31:0 -112(fp):fp -16(fp):r13 8(fp):lr
// LocalsOut: fp(32) Local -0070(32)

l00403D38:
	word32 r31_61 = Mem26[r2 + 352:word32]
	word32 r2_63
	word32 r29_64
	word32 r30_65
	word32 r0_66 = fn00402404(r2, r29_21, Mem26[r2 + 348:word32], r31_61, dwLoc68, out r2_63, out r29_64, out r30_65)
	word32 r3_89
	word32 r29_90
	word32 r30_91
	word32 r31_92
	word32 r2_93 = fn00400220(r0_66, r2_63, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29_64, r30_65, r31_61, cr0, lr, dwLoc68, dwLoc58, dwLoc54, out r3_89, out r29_90, out r30_91, out r31_92)
	fn00403574(r2_93, r3_89, r29_90, r30_91, r31_92, dwLoc68)
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp + -112 r4:<invalid> cr1:<invalid> r12:<invalid> r29:<invalid> r31:0 r5:<invalid> r6:<invalid> r3:fp + -56 r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r13:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp + -56 -20(fp):0 -16(fp):r13 8(fp):lr

fn00403CA0_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r4:<invalid> cr1:<invalid> r12:lr r29:<invalid> r31:<invalid> r5:<invalid> r6:<invalid> r3:<invalid> r7:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> r13:r13 r30:<invalid> r0:<invalid> lr:lr r2:<invalid> ctr:<invalid> r23:<invalid> r22:<invalid> r14:<invalid> r15:<invalid> r16:<invalid> r17:<invalid> r18:<invalid> r19:<invalid> r20:<invalid> r21:<invalid> r24:<invalid> r25:<invalid> r26:<invalid> r27:<invalid> r28:<invalid> -112(fp):fp -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp + -56 -20(fp):0 -16(fp):r13 8(fp):lr



void fn00403D7C(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: cr1 r10 r11 r4 r8 r9
// Preserved: r1
fn00403D7C_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403D7C:
	branch Test(EQ,cond(r3)) l00403DCC
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403D84:
	word32 r8_16 = Mem0[r3:byte]
	branch Test(EQ,cond(r8_16)) l00403DCC
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r8
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:cond(r3)

l00403D90:
	word32 r11_18 = r8_16
	word32 r10_21 = r3
	branch Test(EQ,cond(r8_16)) l00403DC4
// DataOut: cr0 lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid>

l00403DA4:
	word32 r10_28 = r3 + -1 + 1
	word32 r9_29 = r3 + 1
// DataOut: cr0 lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid> r11:<invalid> r9:r3 + 1 r10:r3

l00403DAC:
	Mem37[r10_28 + 0:byte] = (byte) Mem0[r9_29 + 0:byte]
	r11_18 = r11_18 + -1
	r9_29 = r9_29 + 1
	r10_28 = r10_28 + 1
	branch Test(NE,cond(r11_18)) l00403DAC
// DataOut: cr0 lr r10 r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r9
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r4:<invalid>

l00403DC0:
	r10_21 = r10_28 + 1
// DataOut: cr0 lr r10 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r4:<invalid>

l00403DC4:
	Mem27[r10_21:byte] = 0
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r4:<invalid>

l00403DCC:
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r4:0

fn00403D7C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp cr1:<invalid> r8:<invalid> r11:<invalid> r9:<invalid> r10:<invalid> r4:0



word32 fn00403DD8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r3
// Trashed: r3
// Preserved: r1
fn00403DD8_entry:
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp
// LocalsOut: fp(32)

l00403DD8:
	return fp
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403DD8_exit:
// DataOut: r3
// DataOut (flags): crX
// SymbolicIn: r1:fp r3:fp



void fn00403ED4(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r3
// LiveOut:
// Trashed: r5
// Preserved: r1
fn00403ED4_entry:
// DataOut: r2 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403ED4:
	Mem6[Mem0[r2 + 356:word32] + 4:word32] = r3
	return
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403ED4_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r5:<invalid>



word32 fn00403F10(word32 r12, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12
// LiveOut: r0
// Trashed: ctr r0 r2
// Preserved: r1
fn00403F10_entry:
// DataOut: cr0 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F10:
	word32 r0_4 = Mem0[r12:word32]
	word32 r1_9
	word32 r0_10
	word32 r12_11
	word32 r2_12
	word32 ctr_13
	call r0_4 (retsize: 0;)
		uses: ctr_7,r0_4,r1_1,r12,r2_8
		defs: ctr_13,r0_10,r1_9,r12_11,r2_12
	return r0_10
// DataOut: cr0 r0 r11 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F10_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403F24(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403F24_entry:
// DataOut: cr0 r2 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F24:
	word32 r12_4 = Mem0[r2 + 336:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F24_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403F3C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403F3C_entry:
// DataOut: cr0 r2 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F3C:
	word32 r12_4 = Mem0[r2 + 284:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F3C_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403F54(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403F54_entry:
// DataOut: cr0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F54:
	word32 r12_4 = Mem0[r2 + 332:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F54_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403F6C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403F6C_entry:
// DataOut: cr0 r2 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F6C:
	word32 r12_4 = Mem0[r2 + 328:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F6C_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403F84(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403F84_entry:
// DataOut: r2 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F84:
	word32 r12_4 = Mem0[r2 + 260:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: r0 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F84_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403F9C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403F9C_entry:
// DataOut: cr0 lr r11 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403F9C:
	word32 r12_4 = Mem0[r2 + 296:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 lr r0 r11 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403F9C_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn00403FB4(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403FB4_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403FB4:
	word32 r12_4 = Mem0[r2 + 324:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403FB4_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn00403FCC(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403FCC_entry:
// DataOut: cr0 lr r2 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403FCC:
	word32 r12_4 = Mem0[r2 + 320:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403FCC_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403FE4(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403FE4_entry:
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403FE4:
	word32 r12_4 = Mem0[r2 + 316:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r14 r16 r22 r23 r25 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403FE4_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00403FFC(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00403FFC_entry:
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00403FFC:
	word32 r12_4 = Mem0[r2 + 312:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r14 r16 r22 r23 r25 r28 r29 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00403FFC_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00404014(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00404014_entry:
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00404014:
	word32 r12_4 = Mem0[r2 + 308:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r14 r16 r22 r23 r25 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00404014_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn0040402C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn0040402C_entry:
// DataOut: cr0 r14 r16 r2 r22 r23 r25 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l0040402C:
	word32 r12_4 = Mem0[r2 + 304:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r14 r16 r22 r23 r25 r27 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040402C_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00404044(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00404044_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00404044:
	word32 r12_4 = Mem0[r2 + 300:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00404044_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn0040405C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn0040405C_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

l0040405C:
	word32 r12_4 = Mem0[r2 + 292:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r3
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040405C_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00404074(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00404074_entry:
// DataOut: cr0 r2 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00404074:
	word32 r12_4 = Mem0[r2 + 288:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r27 r28 r29
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00404074_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn0040408C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn0040408C_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l0040408C:
	word32 r12_4 = Mem0[r2 + 276:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040408C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn004040A4(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn004040A4_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004040A4:
	word32 r12_4 = Mem0[r2 + 264:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r26 r28 r29 r3 r30
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004040A4_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn004040BC(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn004040BC_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004040BC:
	word32 r12_4 = Mem0[r2 + 256:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004040BC_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn004040D4(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn004040D4_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004040D4:
	word32 r12_4 = Mem0[r2 + 272:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004040D4_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn004040EC(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn004040EC_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l004040EC:
	word32 r12_4 = Mem0[r2 + 268:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r26 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn004040EC_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00404104(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00404104_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00404104:
	word32 r12_4 = Mem0[r2 + 252:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 lr r0 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00404104_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



void fn0040411C(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn0040411C_entry:
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l0040411C:
	word32 r12_4 = Mem0[r2 + 280:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return
// DataOut: cr0 lr r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn0040411C_exit:
// DataOut:
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



word32 fn00404134(word32 r2, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r0
// Trashed: ctr r0 r12 r2
// Preserved: r1
fn00404134_entry:
// DataOut: cr0 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

l00404134:
	word32 r12_4 = Mem0[r2 + 248:word32]
	word32 r0_5 = Mem0[r12_4:word32]
	word32 r1_9
	word32 r12_10
	word32 r2_11
	word32 r0_12
	word32 ctr_13
	call r0_5 (retsize: 0;)
		uses: ctr_7,r0_5,r1_1,r12_4,r2_8
		defs: ctr_13,r0_12,r1_9,r12_10,r2_11
	return r0_12
// DataOut: cr0 r0 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r30 r31
// DataOut (flags): crX
// SymbolicIn: r1:fp

fn00404134_exit:
// DataOut: r0
// DataOut (flags): crX
// SymbolicIn: r1:fp r12:<invalid> r0:<invalid> ctr:<invalid> r2:<invalid> 20(fp):r2



