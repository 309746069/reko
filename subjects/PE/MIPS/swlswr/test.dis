void fn00011000(word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r4 r5 r6 r8 ra sp
// Preserved:
fn00011000_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -001C(0) Local -001F(0) Local -0024(32)

l00011000:
	memset(fp + -20, 0x00000000, 5)
	memcpy(calloc(1, 5), fp + 0xFFFFFFE4, 5)
	Mem31[dwLoc24:byte] = 0x0C
	Mem35[dwLoc24 + 1:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFF4 r6:5 r5:fp + 0xFFFFFFE4 r4:12 r2:0x00000000 r8:0x00000000 ra:<invalid> -32(fp):0x42 -31(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000000 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6 12(fp):r7



DWORD Win32CrtStartup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: r2 r4 r5 r6 r8 r9
// Preserved: r4 r5 r6 r7 ra sp
Win32CrtStartup_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000110A0:
	fn000111C4(r2)
	fn000110E8(dwLoc18, dwLoc14, dwLoc10, dwLoc0C)
	return r2
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

Win32CrtStartup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r7:r7 r6:<invalid> r5:<invalid> r4:<invalid> ra:ra r8:<invalid> r2:0x00000000 r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6 12(fp):r7



void fn000110E8(word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r4 r5 r6 r8 r9
// Preserved: r30 r5 r6 r7 ra sp
fn000110E8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000110E8:
	fn000114E4()
	fn00011000(dwLoc28, dwLoc24, dwLoc20, dwLoc1C)
	fn00011278(0x00000000, r4)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011154:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r30:fp + -40 r7:r7 r6:<invalid> r5:<invalid> r4:<invalid> r8:<invalid> r2:0x00000000 ra:<invalid> r9:<invalid> -24(fp):<invalid> -8(fp):r30 -4(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6 12(fp):r7

fn000110E8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r30:r30 r7:r7 r6:<invalid> r5:<invalid> r4:<invalid> ra:ra r8:<invalid> r2:0x00000000 r9:<invalid> -24(fp):<invalid> -8(fp):r30 -4(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6 12(fp):r7



void fn0001116C(word32 r2, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2 r4
// LiveOut:
// Trashed: r4 r5 r8
// Preserved: r30 ra sp
fn0001116C_entry:
// DataOut: r2 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001116C:
	Mem10[r2 + 0xFFFFFFEC:word32] = r4
	Mem12[r2 + 0xFFFFFFF0:word32] = Mem10[r2 + 0xFFFFFFEC:word32]
	Mem16[r2 + 0xFFFFFFF4:word32] = Mem12[Mem12[Mem12[r2 + 0xFFFFFFEC:word32]:word32]:word32]
	word32 r8_17 = Mem16[r2 + 0xFFFFFFF4:word32]
	Mem18[r2 + 0xFFFFFFE8:word32] = r8_17
	word32 sp_21
	word32 r30_22
	word32 ra_23
	word32 r2_24
	word32 r4_25
	word32 r8_26
	word32 r5_27
	call XcptFilter (retsize: 0; depth: 24)
		uses: dwLoc04_6,dwLoc08_4,r2,r30_8,r4_20,r5_19,r8_17,ra,sp_2
		defs: r2_24,r30_22,r4_25,r5_27,r8_26,ra_23,sp_21
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0001116C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r30:r30 r8:<invalid> r5:<invalid> r4:<invalid> ra:ra -8(fp):r30 -4(fp):ra



void fn000111C4(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: r8 r9
// Preserved: ra sp
fn000111C4_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000111C4:
	word32 r8_7 = Mem0[0x00013030:word32]
	branch r8_7 == 0x00000000 l000111C4_ds_t
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -000C(32)

l000111C4_ds_t:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:<invalid> -12(fp):<invalid> -8(fp):ra

l000111C4_ds_f:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:<invalid> -12(fp):<invalid> -8(fp):ra
// LocalsOut: Local -000C(32)

l000111E4:
	branch r8_7 == 0x0000B064 l000111E4_ds_t
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:<invalid> -12(fp):<invalid> -8(fp):ra
// LocalsOut: Local -000C(32)

l000111E4_ds_t:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:0x0000B064 r9:<invalid> -12(fp):<invalid> -8(fp):ra

l0001120C:
	word32 sp_20
	word32 ra_21
	word32 r8_22
	word32 r9_23
	word32 r2_24
	call COREDLL.dll!Ordinal_2696 (retsize: 0; depth: 32)
		uses: dwLoc08_4,dwLoc0C_8,dwLoc10,r2,r8_9,r9,ra,sp_2
		defs: r2_24,r8_22,r9_23,ra_21,sp_20
	word32 r8_32 = r2_24 >>u 0x10 ^ r2_24 + 0x0000FFFF
	word32 dwLoc0C_33 = r8_32
	branch r8_32 != 0x00000000 l0001120C_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:<invalid> r9:<invalid> -12(fp):<invalid> -8(fp):ra
// LocalsOut: Local -000C(32)

l0001120C_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:r2 >>u 0x10 ^ r2 + 0x0000FFFF r9:r2 >>u 0x10 -16(fp):r2 + 0x0000FFFF -12(fp):r2 >>u 0x10 ^ r2 + 0x0000FFFF -8(fp):ra
// LocalsOut: Local -000C(32)

l0001120C_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:r2 >>u 0x10 ^ r2 + 0x0000FFFF r9:r2 >>u 0x10 -16(fp):r2 + 0x0000FFFF -12(fp):r2 >>u 0x10 ^ r2 + 0x0000FFFF -8(fp):ra

l00011244:
	dwLoc0C_33 = 0x0000B064
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:r2 >>u 0x10 ^ r2 + 0x0000FFFF r9:r2 >>u 0x10 -16(fp):r2 + 0x0000FFFF -12(fp):r2 >>u 0x10 ^ r2 + 0x0000FFFF -8(fp):ra
// LocalsOut: Local -000C(32)

l0001124C:
	Mem38[0x00013030:word32] = dwLoc0C_33
	Mem42[0x00013034:word32] = ~dwLoc0C_33
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:<invalid> r9:r2 >>u 0x10 -16(fp):r2 + 0x0000FFFF -12(fp):<invalid> -8(fp):ra

l000111E4_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:0x0000B064 r9:<invalid> -12(fp):<invalid> -8(fp):ra
// LocalsOut: Local -000C(32)

l000111F4:
	Mem50[0x00013034:word32] = ~r8_7
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:0x0000B064 r9:<invalid> -12(fp):<invalid> -8(fp):ra

l00011268:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 r8:0x00010000 r9:<invalid> -16(fp):r2 + 0x0000FFFF -12(fp):<invalid> -8(fp):ra

fn000111C4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:0x00010000 r9:<invalid> ra:ra -16(fp):r2 + 0x0000FFFF -12(fp):<invalid> -8(fp):ra



void fn00011278(word32 r4, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4
// LiveOut:
// Trashed: r4 r5 r6 r8 r9
// Preserved: r4 ra sp
fn00011278_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011278:
	fn000112A8(r4, 0x00000000, 0x00000000, dwLoc18, dwLoc14, dwLoc10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011278_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:0x00000000 r5:<invalid> r4:<invalid> ra:ra r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4



void fn000112A8(word32 r4, word32 r5, word32 r6, word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5 r6
// LiveOut:
// Trashed: r4 r5 r8 r9
// Preserved: ra sp
fn000112A8_entry:
// DataOut: r4 r5 r6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000112A8:
	Mem15[0x00013038:byte] = (byte) (r6 << 0x18 >> 0x18)
	branch r5 != 0x00000000 l000112A8_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32)

l000112A8_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r5 r9:r6 << 0x18 >> 0x18 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32)

l0001138C:
	fn0001147C(0x00012018, 0x0001201C, dwLoc18, dwLoc14)
	branch r6 != 0x00000000 l0001138C_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r5 r9:r6 << 0x18 >> 0x18 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32) Stack +0000(32)

l0001138C_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r6 r9:<invalid> r5:0x0001201C r4:0x00012018 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l000113C8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r6 r9:<invalid> r5:0x0001201C r4:0x00012018 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

fn000112A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:r6 r9:<invalid> r5:0x0001201C r4:0x00012018 ra:ra -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l0001138C_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r6 r9:<invalid> r5:0x0001201C r4:0x00012018 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32) Stack +0000(32)

l000113B0:
	fn00011460()
	TerminateProcess(66, r4)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r6 r9:<invalid> r5:0x0001201C r4:0x00012018 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l000112A8_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r5 r9:r6 << 0x18 >> 0x18 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l000112DC:
	branch Mem15[0x00013040:word32] == 0x00000000 l000112DC_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:r5 r9:r6 << 0x18 >> 0x18 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l000112DC_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:r6 << 0x18 >> 0x18 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l000112DC_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:r6 << 0x18 >> 0x18 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l000112EC:
	Mem29[0x0001303C:word32] = Mem15[0x0001303C:word32] + -4
	word32 r9_31 = Mem29[0x0001303C:word32]
	branch (word32) (r9_31 <u Mem29[0x00013040:word32]) != 0x00000000 l000112EC_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l000112EC_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l0001134C:
	free(Mem29[0x00013040:word32])
	Mem53[0x0001303C:word32] = 0x00000000
	Mem57[0x00013040:word32] = Mem53[0x0001303C:word32]
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l00011374:
	fn0001147C(0x00012010, 0x00012014, r4, r5)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:0x00010000 -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l000112EC_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l0001131C:
	branch Mem29[Mem29[0x0001303C:word32]:word32] == 0x00000000 l0001131C_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l0001131C_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l00011344:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6
// LocalsOut: fp(32)

l0001131C_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6

l00011330:
	word32 r8_40 = Mem29[Mem29[0x0001303C:word32]:word32]
	word32 sp_41
	word32 ra_42
	word32 r6_43
	word32 r5_44
	word32 r4_45
	word32 r8_46
	word32 r9_47
	word32 r2_48
	call r8_40 (retsize: 0; depth: 24)
		uses: dwLoc08_4,r4,r5,r6,r8_40,r9_31,ra,sp_2
		defs: r2_48,r4_45,r5_44,r6_43,r8_46,r9_47,ra_42,sp_41
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4 4(fp):r5 8(fp):r6



void fn000113D8(word32 r4, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4
// LiveOut:
// Trashed: r4 r5 r6 r8 r9
// Preserved: r4 ra sp
fn000113D8_entry:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000113D8:
	fn000112A8(r4, 1, 0x00000000, dwLoc18, dwLoc14, dwLoc10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000113D8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:0x00000000 r5:<invalid> r4:<invalid> ra:ra r8:<invalid> r9:<invalid> -8(fp):ra 0(fp):r4



void fn00011408()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r4 r5 r6 r8 r9
// Preserved: ra sp
fn00011408_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011408:
	fn000112A8(0x00000000, 0x00000000, 1, dwLoc18, dwLoc14, dwLoc10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011408_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:1 r5:<invalid> r4:<invalid> ra:ra r8:<invalid> r9:<invalid> -8(fp):ra



void fn00011434()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r4 r5 r6 r8 r9
// Preserved: ra sp
fn00011434_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011434:
	fn000112A8(0x00000000, 1, 1, dwLoc18, dwLoc14, dwLoc10)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011434_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r6:1 r5:<invalid> r4:<invalid> ra:ra r8:<invalid> r9:<invalid> -8(fp):ra



void fn00011460()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r8
// Preserved: sp
fn00011460_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l00011460:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00011460_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:66 r2:66 -8(fp):66



void fn0001147C(word32 r4, word32 r5, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut:
// Trashed: r8 r9
// Preserved: ra sp
fn0001147C_entry:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001147C:
	word32 dwArg00_26 = r4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0000(32) Stack +0004(32)

l0001148C:
	branch (word32) (dwArg00_26 <u r5) == 0x00000000 l0001147C_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5
// LocalsOut: Stack +0000(32) Stack +0004(32)

l0001147C_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5

l000114D4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5

fn0001147C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r9:<invalid> r8:<invalid> ra:ra -8(fp):ra 0(fp):<invalid> 4(fp):r5

l0001147C_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5
// LocalsOut: Stack +0000(32) Stack +0004(32)

l000114A0:
	branch Mem0[dwArg00_26:word32] == 0x00000000 l000114A0_ds_t
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5
// LocalsOut: Stack +0000(32) Stack +0004(32)

l000114A0_ds_t:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5
// LocalsOut: Stack +0000(32) Stack +0004(32)

l000114C0:
	dwArg00_26 = dwArg00_26 + 4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5
// LocalsOut: Stack +0000(32) Stack +0004(32)

l000114A0_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5
// LocalsOut: Stack +0000(32)

l000114B0:
	word32 r8_17 = Mem0[dwArg00_26:word32]
	word32 sp_18
	word32 ra_19
	word32 r5_20
	word32 r4_21
	word32 r9_22
	word32 r8_23
	call r8_17 (retsize: 0; depth: 24)
		uses: dwLoc08_4,r4,r5,r8_17,r9_10,ra,sp_2
		defs: r4_21,r5_20,r8_23,r9_22,ra_19,sp_18
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -24 r9:<invalid> r8:<invalid> -8(fp):ra 0(fp):<invalid> 4(fp):r5



void fn000114E4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r4 r5 r8 r9
// Preserved: ra sp
fn000114E4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000114E4:
	fn0001147C(0x00012008, 0x0001200C, dwLoc18, dwLoc14)
	fn0001147C(0x00012000, 0x00012004, dwLoc18, dwLoc14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn000114E4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r8:<invalid> r5:0x00012004 r4:0x00012000 ra:ra r9:<invalid> -8(fp):ra



word32 fn0001152C(word32 r2, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut: r2
// Trashed: r2 r4 r5 r8 r9 ra sp
// Preserved: ra sp
fn0001152C_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l0001152C:
	word32 r8_10 = Mem0[0x00013040:word32]
	word32 sp_111 = fp + -56
	word32 dwLoc20_138 = 0x00000000
	word32 r8_19 = Mem0[0x0001303C:word32] - r8_10
	branch r8_19 >= 0x00000000 l0001152C_ds_t
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -001C(32) Local -0020(32) Local -0028(32)

l0001152C_ds_t:
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -001C(32) Local -0020(32) Local -0028(32)

l00011588:
	branch r8_10 == 0x00000000 l00011588_ds_t
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0014(32) Local -001C(32) Local -0020(32)

l00011588_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0014(32) Local -001C(32) Local -0020(32)

l00011588_ds_f:
// DataOut: r2 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0014(32) Local -001C(32)

l000115A0:
	word32 ra_132
	word32 r4_133
	word32 r8_134
	word32 r9_135
	word32 r2_136
	word32 r5_137
	call msize (retsize: 0; depth: 56)
		uses: dwLoc08_4,dwLoc0C,dwLoc10_14,dwLoc14_41,dwLoc18,dwLoc1C_11,dwLoc20_15,dwLoc24_7,dwLoc28_20,r2,r4_129,r5,r8_42,r9_17,ra,sp_2
		defs: r2_136,r4_133,r5_137,r8_134,r9_135,ra_132,sp_131
	dwLoc20_138 = r2_136
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0014(32) Local -001C(32) Local -0020(32)

l000115B0:
	branch (word32) (dwLoc20_138 <u r8_19 + 4) == 0x00000000 l000115B0_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -001C(32) Local -0020(32)

l000115B0_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l000115B0_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -001C(32) Local -0020(32)

l000115C4:
	branch r8_10 != 0x00000000 l000115C4_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -001C(32) Local -0020(32)

l000115C4_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -001C(32) Local -0020(32)

l000115E8:
	word32 dwLoc18_100 = dwLoc20_138 << 0x01
	branch (word32) (dwLoc20_138 <u 513) != 0x00000000 l000115E8_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0018(32) Local -001C(32) Local -0020(32)

l000115E8_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0018(32) Local -001C(32) Local -0020(32)

l000115E8_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -001C(32) Local -0020(32)

l00011604:
	dwLoc18_100 = dwLoc20_138 + 512
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0018(32) Local -001C(32) Local -0020(32)

l00011610:
	branch (word32) (dwLoc20_138 <u dwLoc18_100) == 0x00000000 l00011610_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0018(32) Local -001C(32)

l00011610_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011610_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32) Local -0018(32) Local -001C(32)

l00011624:
	realloc(r8_10, dwLoc18_100)
	sp_111 = fp + 0xFFFFFFC4
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011638:
	branch Mem0[sp_111 + 0x00000014:word32] != 0x00000000 l00011638_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011638_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011638_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011644:
	branch (word32) (Mem0[sp_111 + 0x00000018:word32] <u Mem0[sp_111 + 0x00000024:word32]) == 0x00000000 l00011644_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011644_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011644_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011658:
	sp_111 = sp_111 + 0xFFFFFFFC
	Mem120[sp_111 + 0x00000014:word32] = realloc(Mem0[sp_111 + 0x0000001C:word32], Mem0[sp_111 + 0x00000024:word32])
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r5:<invalid> r2:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l000115C4_ds_f:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4
// LocalsOut: fp(32)

l000115D0:
	malloc(16)
	sp_111 = fp + 0xFFFFFFC4
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> r4:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l0001166C:
	branch Mem0[sp_111 + 0x00000014:word32] != 0x00000000 l0001166C_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l0001166C_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011688:
	Mem91[sp_111 + 0x00000028:word32] = Mem0[sp_111 + 0x00000014:word32] + ((Mem0[sp_111 + 0x00000028:word32] - Mem0[sp_111 + 0x0000001C:word32] >> 0x02) << 0x02)
	Mem93[sp_111 + 0x0000001C:word32] = Mem91[sp_111 + 0x00000014:word32]
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l000116B0:
	Mem60[Mem0[sp_111 + 0x00000028:word32]:word32] = Mem0[sp_111 + 0x00000038:word32]
	Mem63[sp_111 + 0x00000028:word32] = Mem60[sp_111 + 0x00000028:word32] + 4
	Mem66[0x0001303C:word32] = Mem63[sp_111 + 0x00000028:word32]
	Mem69[0x00013040:word32] = Mem66[sp_111 + 0x0000001C:word32]
	Mem71[sp_111 + 0x0000002C:word32] = Mem69[sp_111 + 0x00000038:word32]
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l0001166C_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011678:
	Mem83[sp_111 + 0x0000002C:word32] = 0x00000000
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):ra 0(fp):r4

l0001152C_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -8(fp):ra 0(fp):r4

l00011578:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -56 r8:<invalid> r9:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -8(fp):ra 0(fp):r4

l000116E8:
	return Mem0[sp_111 + 0x0000002C:word32]
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r4:<invalid> r2:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):ra 0(fp):r4

fn0001152C_exit:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r8:<invalid> r9:<invalid> r2:<invalid> ra:<invalid> r4:<invalid> r5:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):ra 0(fp):r4



void fn000116FC(word32 r2, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2
// LiveOut:
// Trashed: r2 r4 r5 r8 r9 ra sp
// Preserved: r4 ra sp
fn000116FC_entry:
// DataOut: r2
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32)

l000116FC:
	branch fn0001152C(r2, dwLoc20) == 0x00000000 l000116FC_ds_t
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000116FC_ds_t:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r8:<invalid> r9:<invalid> r2:<invalid> ra:<invalid> r5:<invalid> -8(fp):ra 0(fp):r4

l00011728:
	Mem19[fp + 0xFFFFFFF4:word32] = -1
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r8:<invalid> r9:<invalid> r2:<invalid> ra:<invalid> r5:<invalid> -8(fp):ra 0(fp):r4

l000116FC_ds_f:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r8:<invalid> r9:<invalid> r2:<invalid> ra:<invalid> r5:<invalid> -8(fp):ra 0(fp):r4

l0001171C:
	Mem17[fp + 0xFFFFFFF4:word32] = 0x00000000
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r8:<invalid> r9:<invalid> r2:<invalid> ra:<invalid> r5:<invalid> -8(fp):ra 0(fp):r4

l00011730:
	Mem13[fp + 0xFFFFFFF0:word32] = Mem0[fp + 0xFFFFFFF4:word32]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r8:<invalid> r9:<invalid> r2:<invalid> ra:<invalid> r5:<invalid> -12(fp):<invalid> -8(fp):ra 0(fp):r4

fn000116FC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r8:<invalid> r2:<invalid> ra:<invalid> r9:<invalid> r5:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):ra 0(fp):r4



