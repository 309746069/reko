// fn00100000
// Return size: 0
void fn00100000()
fn00100000_entry:
	// succ:  l00100000
l00100000:
	fn0010002B(0x00000009)
	fn0010002B(0x00000008)
	fn00100057(fp - 0x00000064, 0x00000064)
	return
	// succ:  fn00100000_exit
fn00100000_exit:

// fn0010002B
// Return size: 0
word32 fn0010002B(word32 dwArg04)
fn0010002B_entry:
	// succ:  l0010002B
l0010002B:
	branch dwArg04 >= 0x00000001 l0010003C
	// succ:  l00100035 l0010003C
l00100035:
	return 0x00000001
	// succ:  fn0010002B_exit
l0010003C:
	return fn0010002B(dwArg04 - 0x00000001) + fn0010002B(dwArg04 - 0x00000002)
	// succ:  fn0010002B_exit
fn0010002B_exit:

// fn00100057
// Return size: 0
void fn00100057(word32 dwArg08, word32 dwArg0C)
fn00100057_entry:
	// succ:  l00100057
l00100057:
	word32 ecx_25 = dwArg08
	word32 edi_9 = dwArg08 - 0x00000001 + dwArg0C
	branch dwArg08 >=u edi_9 l00100095
	// succ:  l00100068 l00100095
l00100068:
	word32 esi_38 = dwLoc02
	// succ:  l00100073
l00100073:
	word32 edx_43 = SLICE(esi_38 *u 0xCCCCCCCD, word32, 32)
	Mem52[ecx_25 + 0x00000000:byte] = (byte) (esi_38 - ((edx_43 >>u 0x00000003) + (edx_43 >>u 0x00000003) * 0x00000004) * 0x00000002) + 0x30
	ecx_25 = ecx_25 + 0x00000001
	esi_38 = edx_43 >>u 0x00000003
	branch ecx_25 <u edi_9 l00100073
	// succ:  l00100093 l00100073
l00100093:
	// succ:  l00100095
l00100095:
	Mem30[ecx_25 + 0x00000000:byte] = 0x00
	return
	// succ:  fn00100057_exit
fn00100057_exit:

// Equivalence classes ////////////
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr (struct))
  OrigDataType: (ptr (struct "Globals"))
T_2: (in fn0010002B : ptr32)
  Class: Eq_2
  DataType: (ptr (fn T_6 (T_5)))
  OrigDataType: (ptr (fn T_6 (T_5)))
T_3: (in signature of fn0010002B : void)
  Class: Eq_2
  DataType: 
  OrigDataType: 
T_4: (in dwArg04 : word32)
  Class: Eq_4
  DataType: int32
  OrigDataType: int32
T_5: (in 0x00000009 : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_6: (in fn0010002B(0x00000009) : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in fn0010002B : ptr32)
  Class: Eq_2
  DataType: (ptr (fn T_9 (T_8)))
  OrigDataType: (ptr (fn T_9 (T_8)))
T_8: (in 0x00000008 : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_9: (in fn0010002B(0x00000008) : word32)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10: (in fn00100057 : ptr32)
  Class: Eq_10
  DataType: (ptr (fn T_18 (T_16, T_17)))
  OrigDataType: (ptr (fn T_18 (T_16, T_17)))
T_11: (in signature of fn00100057 : void)
  Class: Eq_10
  DataType: 
  OrigDataType: 
T_12: (in dwArg08 : word32)
  Class: Eq_12
  DataType: up32
  OrigDataType: up32
T_13: (in dwArg0C : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_14: (in fp : ptr32)
  Class: Eq_14
  DataType: ptr32
  OrigDataType: ptr32
T_15: (in 0x00000064 : word32)
  Class: Eq_15
  DataType: ui32
  OrigDataType: ui32
T_16: (in fp - 0x00000064 : word32)
  Class: Eq_12
  DataType: ptr32
  OrigDataType: ptr32
T_17: (in 0x00000064 : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_18: (in fn00100057(fp - 0x00000064, 0x00000064) : void)
  Class: Eq_18
  DataType: void
  OrigDataType: void
T_19: (in eax : word32)
  Class: Eq_19
  DataType: word32
  OrigDataType: word32
T_20: (in 0x00000001 : word32)
  Class: Eq_4
  DataType: int32
  OrigDataType: int32
T_21: (in dwArg04 >= 0x00000001 : bool)
  Class: Eq_21
  DataType: bool
  OrigDataType: bool
T_22: (in fn0010002B : ptr32)
  Class: Eq_2
  DataType: (ptr (fn T_25 (T_24)))
  OrigDataType: (ptr (fn T_25 (T_24)))
T_23: (in 0x00000001 : word32)
  Class: Eq_23
  DataType: int32
  OrigDataType: int32
T_24: (in dwArg04 - 0x00000001 : word32)
  Class: Eq_4
  DataType: int32
  OrigDataType: int32
T_25: (in fn0010002B(dwArg04 - 0x00000001) : word32)
  Class: Eq_25
  DataType: word32
  OrigDataType: word32
T_26: (in fn0010002B : ptr32)
  Class: Eq_2
  DataType: (ptr (fn T_29 (T_28)))
  OrigDataType: (ptr (fn T_29 (T_28)))
T_27: (in 0x00000002 : word32)
  Class: Eq_27
  DataType: int32
  OrigDataType: int32
T_28: (in dwArg04 - 0x00000002 : word32)
  Class: Eq_4
  DataType: int32
  OrigDataType: int32
T_29: (in fn0010002B(dwArg04 - 0x00000002) : word32)
  Class: Eq_29
  DataType: word32
  OrigDataType: word32
T_30: (in fn0010002B(dwArg04 - 0x00000001) + fn0010002B(dwArg04 - 0x00000002) : word32)
  Class: Eq_19
  DataType: word32
  OrigDataType: word32
T_31: (in 0x00000001 : word32)
  Class: Eq_19
  DataType: word32
  OrigDataType: word32
T_32: (in ecx_25 : word32)
  Class: Eq_12
  DataType: (ptr (struct 0001 (0 byte b0000)))
  OrigDataType: (ptr (struct 0001 (0 byte b0000)))
T_33: (in edi_9 : word32)
  Class: Eq_12
  DataType: up32
  OrigDataType: up32
T_34: (in 0x00000001 : word32)
  Class: Eq_34
  DataType: word32
  OrigDataType: word32
T_35: (in dwArg08 - 0x00000001 : word32)
  Class: Eq_35
  DataType: word32
  OrigDataType: word32
T_36: (in dwArg08 - 0x00000001 + dwArg0C : word32)
  Class: Eq_12
  DataType: word32
  OrigDataType: word32
T_37: (in dwArg08 >=u edi_9 : bool)
  Class: Eq_37
  DataType: bool
  OrigDataType: bool
T_38: (in 0x00 : byte)
  Class: Eq_38
  DataType: byte
  OrigDataType: byte
T_39: (in 0x00000000 : word32)
  Class: Eq_39
  DataType: word32
  OrigDataType: word32
T_40: (in ecx_25 + 0x00000000 : word32)
  Class: Eq_40
  DataType: (ptr T_41)
  OrigDataType: (ptr T_41)
T_41: (in Mem30[ecx_25 + 0x00000000:byte] : byte)
  Class: Eq_38
  DataType: byte
  OrigDataType: byte
T_42: (in esi_38 : word32)
  Class: Eq_42
  DataType: uint32
  OrigDataType: uint32
T_43: (in dwLoc02 : word32)
  Class: Eq_42
  DataType: word32
  OrigDataType: word32
T_44: (in edx_43 : word32)
  Class: Eq_44
  DataType: uint32
  OrigDataType: uint32
T_45: (in 0xCCCCCCCD : word32)
  Class: Eq_45
  DataType: uint32
  OrigDataType: uint32
T_46: (in esi_38 *u 0xCCCCCCCD : uint64)
  Class: Eq_46
  DataType: uint64
  OrigDataType: uint64
T_47: (in SLICE(esi_38 *u 0xCCCCCCCD, word32, 32) : word32)
  Class: Eq_44
  DataType: word32
  OrigDataType: word32
T_48: (in 0x00000003 : word32)
  Class: Eq_48
  DataType: word32
  OrigDataType: word32
T_49: (in edx_43 >>u 0x00000003 : word32)
  Class: Eq_49
  DataType: uint32
  OrigDataType: uint32
T_50: (in edx_43 >>u 0x00000003 : word32)
  Class: Eq_50
  DataType: uint32
  OrigDataType: uint32
T_51: (in 0x00000004 : word32)
  Class: Eq_51
  DataType: ui32
  OrigDataType: ui32
T_52: (in (edx_43 >>u 0x00000003) * 0x00000004 : word32)
  Class: Eq_52
  DataType: ui32
  OrigDataType: ui32
T_53: (in (edx_43 >>u 0x00000003) + (edx_43 >>u 0x00000003) * 0x00000004 : word32)
  Class: Eq_53
  DataType: uint32
  OrigDataType: uint32
T_54: (in 0x00000002 : word32)
  Class: Eq_54
  DataType: ui32
  OrigDataType: ui32
T_55: (in ((edx_43 >>u 0x00000003) + (edx_43 >>u 0x00000003) * 0x00000004) * 0x00000002 : word32)
  Class: Eq_55
  DataType: uint32
  OrigDataType: uint32
T_56: (in esi_38 - ((edx_43 >>u 0x00000003) + (edx_43 >>u 0x00000003) * 0x00000004) * 0x00000002 : word32)
  Class: Eq_56
  DataType: uint32
  OrigDataType: uint32
T_57: (in (byte) (esi_38 - ((edx_43 >>u 0x00000003) + (edx_43 >>u 0x00000003) * 0x00000004) * 0x00000002) : byte)
  Class: Eq_57
  DataType: byte
  OrigDataType: byte
T_58: (in 0x30 : byte)
  Class: Eq_58
  DataType: byte
  OrigDataType: byte
T_59: (in (byte) (esi_38 - ((edx_43 >>u 0x00000003) + (edx_43 >>u 0x00000003) * 0x00000004) * 0x00000002) + 0x30 : byte)
  Class: Eq_59
  DataType: byte
  OrigDataType: byte
T_60: (in 0x00000000 : word32)
  Class: Eq_60
  DataType: word32
  OrigDataType: word32
T_61: (in ecx_25 + 0x00000000 : word32)
  Class: Eq_61
  DataType: (ptr T_62)
  OrigDataType: (ptr T_62)
T_62: (in Mem52[ecx_25 + 0x00000000:byte] : byte)
  Class: Eq_59
  DataType: byte
  OrigDataType: byte
T_63: (in 0x00000001 : word32)
  Class: Eq_63
  DataType: int32
  OrigDataType: int32
T_64: (in ecx_25 + 0x00000001 : word32)
  Class: Eq_12
  DataType: ptr32
  OrigDataType: ptr32
T_65: (in edx_43 >>u 0x00000003 : word32)
  Class: Eq_42
  DataType: uint32
  OrigDataType: uint32
T_66: (in ecx_25 <u edi_9 : bool)
  Class: Eq_66
  DataType: bool
  OrigDataType: bool
